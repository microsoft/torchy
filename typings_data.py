# Copyright (c) 2021-present The Torchy Authors.
# Distributed under the MIT license that can be found in the LICENSE file.

type_inference = {
  '__and__.Scalar': 'EQ_PROMOTED_CONST',
  '__and__.Tensor': 'EQ_PROMOTED_CONST',
  '__lshift__.Tensor': 'EQ_PROMOTED_CONST',
  '__or__.Scalar': 'EQ_PROMOTED_CONST',
  '__or__.Tensor': 'EQ_PROMOTED_CONST',
  '__rshift__.Tensor': 'EQ_PROMOTED_CONST',
  '__xor__.Scalar': 'EQ_PROMOTED_CONST',
  '__xor__.Tensor': 'EQ_PROMOTED_CONST',
  '_add_relu.Scalar': 'EQ_PROMOTED_BUGGY2',
  '_add_relu.Tensor': 'EQ_PROMOTED_BUGGY2',
  '_add_relu.out': 'EQ_PROMOTED_BUGGY2',
  '_add_relu_.Tensor': 'EQ_PROMOTED_BUGGY2',
  '_cast_Byte': 'ALL Byte',
  '_cast_Char': 'ALL Char',
  '_cast_Double': 'ALL Double',
  '_cast_Float': 'ALL Float',
  '_cast_Half': 'ALL Half',
  '_cast_Int': 'ALL Int',
  '_cast_Long': 'ALL Long',
  '_cast_Short': 'ALL Short',
  '_cat': 'EQ_PROMOTED',
  '_cat.out': 'EQ_THIRD',
  '_convert_indices_from_coo_to_csr': 'ALL Long',
  '_convert_indices_from_coo_to_csr.out': 'ALL Long',
  '_convert_indices_from_csr_to_coo': 'ALL Long',
  '_convert_indices_from_csr_to_coo.out': 'ALL Long',
  '_dim_arange': 'ALL Long',
  '_gather_sparse_backward': 'EQ_THIRD',
  '_logcumsumexp.out': 'EQ_SECOND',
  '_make_per_channel_quantized_tensor': 'TO_QINT',
  '_make_per_tensor_quantized_tensor': 'TO_QINT',
  '_new_zeros_with_same_feature_meta': 'EQ_SECOND',
  '_s_where': 'EQ_SECOND',
  '_shape_as_tensor': 'ALL Long',
  '_stack': 'EQ_PROMOTED',
  '_stack.out': 'EQ_THIRD',
  '_test_ambiguous_defaults.a': 'ALL Long',
  '_to_copy': 'OPTIONAL_OR21',
  'abs': 'TO_VALUE_TYPE',
  'abs.out': 'EQ_SECOND',
  'absolute': 'TO_VALUE_TYPE',
  'absolute.out': 'EQ_SECOND',
  'acos': 'TO_FLOAT',
  'acos.out': 'EQ_SECOND',
  'acosh': 'TO_FLOAT',
  'acosh.out': 'EQ_SECOND',
  'add.Scalar': 'EQ_PROMOTED_BUGGY2',
  'add.Tensor': 'EQ_PROMOTED_BUGGY2',
  'add.out': 'EQ_FOURTH',
  'all': 'BOOLBYTE',
  'all.all_out': 'EQ_SECOND',
  'all.dim': 'BOOLBYTE',
  'all.out': 'EQ_SECOND',
  'angle': 'TO_REAL_FLOAT',
  'angle.out': 'EQ_SECOND',
  'any': 'BOOLBYTE',
  'any.all_out': 'EQ_SECOND',
  'any.dim': 'BOOLBYTE',
  'any.out': 'EQ_SECOND',
  'arange': 'SECOND_OR_LONG_DEFAULT',
  'arange.out': 'EQ_SECOND',
  'arange.start_out': 'EQ_FOURTH',
  'arccos': 'TO_FLOAT',
  'arccos.out': 'EQ_SECOND',
  'arccosh': 'TO_FLOAT',
  'arccosh.out': 'EQ_SECOND',
  'arcsin': 'TO_FLOAT',
  'arcsin.out': 'EQ_SECOND',
  'arcsinh': 'TO_FLOAT',
  'arcsinh.out': 'EQ_SECOND',
  'arctan': 'TO_FLOAT',
  'arctan.out': 'EQ_SECOND',
  'arctan2': 'TO_FLOAT2',
  'arctan2.out': 'EQ_THIRD',
  'arctanh': 'TO_FLOAT',
  'arctanh.out': 'EQ_SECOND',
  'argmax': 'ALL Long',
  'argmax.out': 'ALL Long',
  'argmin': 'ALL Long',
  'argmin.out': 'ALL Long',
  'argsort': 'ALL Long',
  'argwhere': 'ALL Long',
  'asin': 'TO_FLOAT',
  'asin.out': 'EQ_SECOND',
  'asinh': 'TO_FLOAT',
  'asinh.out': 'EQ_SECOND',
  'atan': 'TO_FLOAT',
  'atan.out': 'EQ_SECOND',
  'atan2': 'TO_FLOAT2',
  'atan2.out': 'EQ_THIRD',
  'atanh': 'TO_FLOAT',
  'atanh.out': 'EQ_SECOND',
  'bartlett_window': 'FIRST_OR_DEFAULT',
  'bartlett_window.periodic': 'FIRST_OR_DEFAULT',
  'bernoulli.out': 'EQ_SECOND',
  'binary_cross_entropy_with_logits': 'EQ_SECOND',
  'binary_cross_entropy_with_logits_backward': 'TO_FLOAT4',
  'bincount': 'TO_FLOAT_DOUBLE',
  'bitwise_and.Scalar': 'EQ_PROMOTED_CONST',
  'bitwise_and.Scalar_out': 'EQ_THIRD',
  'bitwise_and.Tensor': 'EQ_PROMOTED_CONST',
  'bitwise_and.Tensor_out': 'EQ_THIRD',
  'bitwise_left_shift.Scalar_Tensor': 'EQ_SECOND',
  'bitwise_left_shift.Tensor': 'EQ_PROMOTED_CONST',
  'bitwise_left_shift.Tensor_Scalar_out': 'EQ_THIRD',
  'bitwise_left_shift.Tensor_out': 'EQ_THIRD',
  'bitwise_or.Scalar': 'EQ_PROMOTED_CONST',
  'bitwise_or.Scalar_out': 'EQ_THIRD',
  'bitwise_or.Tensor': 'EQ_PROMOTED_CONST',
  'bitwise_or.Tensor_out': 'EQ_THIRD',
  'bitwise_right_shift.Scalar_Tensor': 'EQ_SECOND',
  'bitwise_right_shift.Tensor': 'EQ_PROMOTED_CONST',
  'bitwise_right_shift.Tensor_Scalar_out': 'EQ_THIRD',
  'bitwise_right_shift.Tensor_out': 'EQ_THIRD',
  'bitwise_xor.Scalar': 'EQ_PROMOTED_CONST',
  'bitwise_xor.Scalar_out': 'EQ_THIRD',
  'bitwise_xor.Tensor': 'EQ_PROMOTED_CONST',
  'bitwise_xor.Tensor_out': 'EQ_THIRD',
  'blackman_window': 'FIRST_OR_DEFAULT',
  'blackman_window.periodic': 'FIRST_OR_DEFAULT',
  'block_diag': 'EQ_PROMOTED',
  'bucketize.Scalar': 'ALL Long',
  'bucketize.Tensor': 'ALL Long',
  'cat': 'EQ_PROMOTED',
  'cat.out': 'EQ_THIRD',
  'clamp.Tensor_out': 'EQ_FOURTH',
  'clamp_max.Tensor_out': 'EQ_THIRD',
  'clamp_min.Tensor_out': 'EQ_THIRD',
  'clip.Tensor_out': 'EQ_FOURTH',
  'column_stack': 'EQ_PROMOTED',
  'column_stack.out': 'EQ_THIRD',
  'complex': 'TO_COMPLEX',
  'complex.out': 'EQ_THIRD',
  'concat': 'EQ_PROMOTED',
  'concat.out': 'EQ_THIRD',
  'copysign.Scalar': 'TO_FLOAT',
  'copysign.Scalar_out': 'EQ_THIRD',
  'copysign.Tensor': 'TO_FLOAT2',
  'copysign.out': 'EQ_THIRD',
  'corrcoef': 'TO_FLOAT',
  'cos': 'TO_FLOAT',
  'cos.out': 'EQ_SECOND',
  'cosh': 'TO_FLOAT',
  'cosh.out': 'EQ_SECOND',
  'cosine_similarity': 'EQ_PROMOTED_CONST',
  'count_nonzero': 'ALL Long',
  'count_nonzero.dim_IntList': 'ALL Long',
  'cumprod': 'OPTIONAL_O21LONG',
  'cumprod.out': 'EQ_THIRD',
  'cumsum': 'OPTIONAL_O21LONG',
  'cumsum.out': 'EQ_THIRD',
  'cumulative_trapezoid.dx': 'TO_FLOAT',
  'deg2rad': 'TO_FLOAT',
  'deg2rad.out': 'EQ_SECOND',
  'dequantize.self': 'ALL Float',
  'digamma': 'TO_FLOAT',
  'digamma.out': 'EQ_SECOND',
  'dist': 'TO_REAL2',
  'div.Scalar': 'TO_FLOAT2',
  'div.Scalar_mode': 'TO_FLOAT2',
  'div.Tensor': 'TO_FLOAT2',
  'div.Tensor_mode': 'TO_FLOAT2',
  'div.out': 'EQ_THIRD',
  'div.out_mode': 'EQ_THIRD',
  'divide.Scalar': 'TO_FLOAT2',
  'divide.Scalar_mode': 'TO_FLOAT2',
  'divide.Tensor': 'TO_FLOAT2',
  'divide.Tensor_mode': 'TO_FLOAT2',
  'divide.out': 'EQ_THIRD',
  'divide.out_mode': 'EQ_THIRD',
  'dstack': 'EQ_PROMOTED',
  'dstack.out': 'EQ_THIRD',
  'empty.memory_format': 'FIRST_OR_DEFAULT',
  'empty.names': 'FIRST_OR_DEFAULT',
  'empty_like': 'OPTIONAL_OR21',
  'empty_strided': 'FIRST_OR_DEFAULT',
  'eq.Scalar': 'ALL Bool',
  'eq.Scalar_out': 'EQ_THIRD',
  'eq.Tensor': 'ALL Bool',
  'eq.Tensor_out': 'EQ_THIRD',
  'erf': 'TO_FLOAT',
  'erf.out': 'EQ_SECOND',
  'erfc': 'TO_FLOAT',
  'erfc.out': 'EQ_SECOND',
  'erfinv': 'TO_FLOAT',
  'erfinv.out': 'EQ_SECOND',
  'exp': 'TO_FLOAT',
  'exp.out': 'EQ_SECOND',
  'exp2': 'TO_FLOAT',
  'exp2.out': 'EQ_SECOND',
  'expm1': 'TO_FLOAT',
  'expm1.out': 'EQ_SECOND',
  'eye': 'FIRST_OR_DEFAULT',
  'eye.m': 'FIRST_OR_DEFAULT',
  'fft_fft': 'TO_COMPLEX',
  'fft_fftfreq': 'TO_REAL_FLOAT',
  'fft_fftn': 'TO_COMPLEX',
  'fft_fftn.out': 'EQ_SECOND',
  'fft_hfft': 'TO_REAL_FLOAT',
  'fft_hfft.out': 'EQ_SECOND',
  'fft_ifft': 'TO_COMPLEX',
  'fft_ifftn': 'TO_COMPLEX',
  'fft_ifftn.out': 'EQ_SECOND',
  'fft_ihfft': 'TO_COMPLEX',
  'fft_ihfft.out': 'EQ_PROMOTED',
  'fft_ihfftn': 'TO_COMPLEX',
  'fft_ihfftn.out': 'EQ_SECOND',
  'fft_irfft': 'TO_REAL_FLOAT',
  'fft_irfft.out': 'EQ_SECOND',
  'fft_rfft': 'TO_COMPLEX',
  'fft_rfftfreq': 'TO_REAL_FLOAT',
  'fft_rfftn': 'TO_COMPLEX',
  'fft_rfftn.out': 'EQ_SECOND',
  'flatten_dense_tensors': 'EQ_PROMOTED',
  'float_power.Scalar': 'TO_DOUBLE2',
  'float_power.Scalar_out': 'EQ_THIRD',
  'float_power.Tensor_Scalar': 'TO_DOUBLE2',
  'float_power.Tensor_Scalar_out': 'EQ_THIRD',
  'float_power.Tensor_Tensor': 'TO_DOUBLE2',
  'float_power.Tensor_Tensor_out': 'EQ_THIRD',
  'floor_divide': 'EQ_PROMOTED_CONST',
  'floor_divide.Scalar': 'EQ_PROMOTED_CONST',
  'floor_divide.out': 'EQ_THIRD',
  'fmax': 'EQ_PROMOTED_CONST',
  'fmax.out': 'EQ_THIRD',
  'fmin': 'EQ_PROMOTED_CONST',
  'fmin.out': 'EQ_THIRD',
  'fmod.Scalar': 'EQ_PROMOTED_CONST',
  'fmod.Scalar_out': 'EQ_THIRD',
  'fmod.Tensor': 'EQ_PROMOTED_CONST',
  'fmod.Tensor_out': 'EQ_THIRD',
  'frobenius_norm': 'TO_VALUE_TYPE',
  'frobenius_norm.dim': 'TO_VALUE_TYPE',
  'frobenius_norm.out': 'EQ_SECOND',
  'full.out': 'EQ_SECOND',
  'full_like': 'OPTIONAL_OR31',
  'fused_moving_avg_obs_fake_quant': 'ALL Float',
  'gcd': 'EQ_PROMOTED_CONST',
  'gcd.out': 'EQ_THIRD',
  'ge.Scalar': 'ALL Bool',
  'ge.Scalar_out': 'EQ_THIRD',
  'ge.Tensor': 'ALL Bool',
  'ge.Tensor_out': 'EQ_THIRD',
  'gelu_backward': 'EQ_PROMOTED_CONST',
  'gelu_backward.grad_input': 'EQ_THIRD',
  'ger': 'EQ_PROMOTED',
  'ger.out': 'EQ_THIRD',
  'greater.Scalar': 'ALL Bool',
  'greater.Scalar_out': 'EQ_THIRD',
  'greater.Tensor': 'ALL Bool',
  'greater.Tensor_out': 'EQ_THIRD',
  'greater_equal.Scalar': 'ALL Bool',
  'greater_equal.Scalar_out': 'EQ_THIRD',
  'greater_equal.Tensor': 'ALL Bool',
  'greater_equal.Tensor_out': 'EQ_THIRD',
  'gt.Scalar': 'ALL Bool',
  'gt.Scalar_out': 'EQ_THIRD',
  'gt.Tensor': 'ALL Bool',
  'gt.Tensor_out': 'EQ_THIRD',
  'hamming_window': 'FIRST_OR_DEFAULT',
  'hamming_window.periodic': 'FIRST_OR_DEFAULT',
  'hamming_window.periodic_alpha': 'FIRST_OR_DEFAULT',
  'hamming_window.periodic_alpha_beta': 'FIRST_OR_DEFAULT',
  'hann_window': 'FIRST_OR_DEFAULT',
  'hann_window.periodic': 'FIRST_OR_DEFAULT',
  'hardshrink_backward': 'EQ_PROMOTED_BUGGY2',
  'hardshrink_backward.grad_input': 'EQ_FOURTH',
  'hardsigmoid_backward': 'EQ_PROMOTED_CONST',
  'hardsigmoid_backward.grad_input': 'EQ_THIRD',
  'hardswish_backward': 'EQ_PROMOTED_CONST',
  'hardtanh_backward': 'EQ_PROMOTED_BUGGY2',
  'hstack': 'EQ_PROMOTED',
  'hstack.out': 'EQ_THIRD',
  'huber_loss.out': 'EQ_THIRD',
  'hypot': 'EQ_PROMOTED_CONST',
  'hypot.out': 'EQ_THIRD',
  'i0': 'TO_FLOAT',
  'i0.out': 'EQ_SECOND',
  'igamma': 'EQ_PROMOTED_CONST',
  'igamma.out': 'EQ_THIRD',
  'igammac': 'EQ_PROMOTED_CONST',
  'igammac.out': 'EQ_THIRD',
  'imag': 'TO_VALUE_TYPE',
  'infinitely_differentiable_gelu_backward': 'EQ_SECOND',
  'inner': 'EQ_PROMOTED_BUGGY',
  'inner.out': 'EQ_THIRD',
  'isclose': 'ALL Bool',
  'isfinite': 'ALL Bool',
  'isin.Scalar_Tensor': 'ALL Bool',
  'isin.Tensor_Scalar': 'ALL Bool',
  'isin.Tensor_Tensor': 'ALL Bool',
  'isinf': 'ALL Bool',
  'isnan': 'ALL Bool',
  'isneginf': 'ALL Bool',
  'isneginf.out': 'ALL Bool',
  'isposinf': 'ALL Bool',
  'isposinf.out': 'ALL Bool',
  'isreal': 'ALL Bool',
  'kaiser_window': 'FIRST_OR_DEFAULT',
  'kaiser_window.beta': 'FIRST_OR_DEFAULT',
  'kaiser_window.periodic': 'FIRST_OR_DEFAULT',
  'kron': 'EQ_PROMOTED',
  'kron.out': 'EQ_THIRD',
  'l1_loss': 'TO_VALUE_TYPE',
  'l1_loss.out': 'EQ_THIRD',
  'l1_loss_backward': 'EQ_SECOND',
  'lcm': 'EQ_PROMOTED_CONST',
  'lcm.out': 'EQ_THIRD',
  'ldexp.out': 'EQ_THIRD',
  'le.Scalar': 'ALL Bool',
  'le.Scalar_out': 'EQ_THIRD',
  'le.Tensor': 'ALL Bool',
  'le.Tensor_out': 'EQ_THIRD',
  'leaky_relu_backward': 'EQ_PROMOTED_BUGGY2',
  'less.Scalar': 'ALL Bool',
  'less.Scalar_out': 'EQ_THIRD',
  'less.Tensor': 'ALL Bool',
  'less.Tensor_out': 'EQ_THIRD',
  'less_equal.Scalar': 'ALL Bool',
  'less_equal.Scalar_out': 'EQ_THIRD',
  'less_equal.Tensor': 'ALL Bool',
  'less_equal.Tensor_out': 'EQ_THIRD',
  'lgamma': 'TO_FLOAT',
  'lgamma.out': 'EQ_SECOND',
  'linalg_tensorinv.out': 'EQ_SECOND',
  'linalg_tensorsolve.out': 'EQ_THIRD',
  'log': 'TO_FLOAT',
  'log.out': 'EQ_SECOND',
  'log10': 'TO_FLOAT',
  'log10.out': 'EQ_SECOND',
  'log1p': 'TO_FLOAT',
  'log1p.out': 'EQ_SECOND',
  'log2': 'TO_FLOAT',
  'log2.out': 'EQ_SECOND',
  'log_softmax.int': 'OPTIONAL_OR21',
  'logaddexp': 'EQ_PROMOTED_CONST',
  'logaddexp.out': 'EQ_THIRD',
  'logaddexp2': 'EQ_PROMOTED_CONST',
  'logaddexp2.out': 'EQ_THIRD',
  'logical_and': 'ALL Bool',
  'logical_and.out': 'EQ_THIRD',
  'logical_not': 'ALL Bool',
  'logical_not.out': 'EQ_SECOND',
  'logical_or': 'ALL Bool',
  'logical_or.out': 'EQ_THIRD',
  'logical_xor': 'ALL Bool',
  'logical_xor.out': 'EQ_THIRD',
  'logit': 'TO_FLOAT',
  'logit.out': 'EQ_SECOND',
  'logit_backward': 'EQ_PROMOTED_CONST',
  'logit_backward.grad_input': 'EQ_THIRD',
  'logsumexp': 'TO_FLOAT',
  'logsumexp.out': 'EQ_SECOND',
  'lt.Scalar': 'ALL Bool',
  'lt.Scalar_out': 'EQ_THIRD',
  'lt.Tensor': 'ALL Bool',
  'lt.Tensor_out': 'EQ_THIRD',
  'margin_ranking_loss': 'TO_FLOAT3',
  'max.other': 'EQ_PROMOTED_CONST',
  'max.out': 'EQ_THIRD',
  'maximum': 'EQ_PROMOTED_CONST',
  'maximum.out': 'EQ_THIRD',
  'mean': 'OPTIONAL_OR21',
  'mean.dim': 'OPTIONAL_OR21',
  'min.other': 'EQ_PROMOTED_CONST',
  'min.out': 'EQ_THIRD',
  'minimum': 'EQ_PROMOTED_CONST',
  'minimum.out': 'EQ_THIRD',
  'mish_backward': 'EQ_SECOND',
  'mse_loss': 'EQ_PROMOTED_CONST',
  'mse_loss.out': 'EQ_THIRD',
  'msort.out': 'EQ_SECOND',
  'mul.Scalar': 'EQ_PROMOTED_BUGGY',
  'mul.Tensor': 'EQ_PROMOTED_BUGGY',
  'mul.out': 'EQ_THIRD',
  'multinomial': 'ALL Long',
  'multinomial.out': 'ALL Long',
  'multiply.Scalar': 'EQ_PROMOTED_BUGGY',
  'multiply.Tensor': 'EQ_PROMOTED_BUGGY',
  'multiply.out': 'EQ_THIRD',
  'mvlgamma': 'TO_FLOAT',
  'mvlgamma.out': 'EQ_SECOND',
  'nanmean': 'OPTIONAL_OR21',
  'nansum': 'OPTIONAL_O21LONG',
  'nansum.dim_IntList': 'OPTIONAL_O21LONG',
  'native_dropout_backward': 'TO_FLOAT2',
  'ne.Scalar': 'ALL Bool',
  'ne.Scalar_out': 'EQ_THIRD',
  'ne.Tensor': 'ALL Bool',
  'ne.Tensor_out': 'EQ_THIRD',
  'new_empty': 'OPTIONAL_OR21',
  'new_empty_strided': 'OPTIONAL_OR21',
  'new_full': 'OPTIONAL_OR31',
  'new_ones': 'OPTIONAL_OR21',
  'new_zeros': 'OPTIONAL_OR21',
  'nextafter': 'EQ_PROMOTED_CONST',
  'nextafter.out': 'EQ_THIRD',
  'nonzero': 'ALL Long',
  'nonzero.out': 'ALL Long',
  'norm.Scalar': 'TO_VALUE_TYPE',
  'norm.ScalarOpt_dim': 'TO_VALUE_TYPE',
  'norm.ScalarOpt_dim_dtype': 'EQ_THIRD',
  'norm.ScalarOpt_dtype': 'EQ_THIRD',
  'norm_except_dim': 'TO_VALUE_TYPE',
  'normal.Tensor_Tensor_out': 'EQ_THIRD',
  'normal.Tensor_float_out': 'EQ_SECOND',
  'normal.float_Tensor_out': 'EQ_SECOND',
  'normal.float_float': 'FIRST_OR_DEFAULT',
  'not_equal.Scalar': 'ALL Bool',
  'not_equal.Scalar_out': 'EQ_THIRD',
  'not_equal.Tensor': 'ALL Bool',
  'not_equal.Tensor_out': 'EQ_THIRD',
  'ones': 'FIRST_OR_DEFAULT',
  'ones.names': 'FIRST_OR_DEFAULT',
  'ones_like': 'OPTIONAL_OR21',
  'outer': 'EQ_PROMOTED',
  'outer.out': 'EQ_THIRD',
  'polar': 'TO_COMPLEX',
  'polar.out': 'EQ_THIRD',
  'polygamma': 'TO_FLOAT',
  'polygamma.out': 'EQ_SECOND',
  'pow.Scalar': 'EQ_PROMOTED_BUGGY',
  'pow.Scalar_out': 'EQ_THIRD',
  'pow.Tensor_Scalar': 'EQ_PROMOTED_BUGGY',
  'pow.Tensor_Scalar_out': 'EQ_THIRD',
  'pow.Tensor_Tensor': 'EQ_PROMOTED_BUGGY',
  'pow.Tensor_Tensor_out': 'EQ_THIRD',
  'prod': 'OPTIONAL_O21LONG',
  'prod.dim_int': 'OPTIONAL_O21LONG',
  'rad2deg': 'TO_FLOAT',
  'rad2deg.out': 'EQ_SECOND',
  'rand': 'FIRST_OR_DEFAULT',
  'rand.generator': 'FIRST_OR_DEFAULT',
  'rand.generator_with_names': 'FIRST_OR_DEFAULT',
  'rand.names': 'FIRST_OR_DEFAULT',
  'rand_like': 'OPTIONAL_OR21',
  'randint': 'FIRST_OR_DEFAULT',
  'randint.generator': 'FIRST_OR_DEFAULT',
  'randint.low': 'FIRST_OR_DEFAULT',
  'randint.low_generator': 'FIRST_OR_DEFAULT',
  'randint_like': 'OPTIONAL_OR21',
  'randint_like.low_dtype': 'OPTIONAL_OR21',
  'randn': 'FIRST_OR_DEFAULT',
  'randn.generator': 'FIRST_OR_DEFAULT',
  'randn.generator_with_names': 'FIRST_OR_DEFAULT',
  'randn.names': 'FIRST_OR_DEFAULT',
  'randn_like': 'OPTIONAL_OR21',
  'randperm': 'FIRST_OR_LONG',
  'randperm.generator': 'FIRST_OR_LONG',
  'range.out': 'EQ_FOURTH',
  'real': 'TO_VALUE_TYPE',
  'reciprocal': 'TO_FLOAT',
  'reciprocal.out': 'EQ_SECOND',
  'remainder.Scalar': 'EQ_PROMOTED_CONST',
  'remainder.Scalar_Tensor': 'EQ_PROMOTED_CONST',
  'remainder.Scalar_out': 'EQ_THIRD',
  'remainder.Tensor': 'EQ_PROMOTED_CONST',
  'remainder.Tensor_out': 'EQ_THIRD',
  'row_stack': 'EQ_PROMOTED',
  'row_stack.out': 'EQ_THIRD',
  'rrelu_with_noise_backward': 'EQ_PROMOTED_BUGGY2',
  'rsqrt': 'TO_FLOAT',
  'rsqrt.out': 'EQ_SECOND',
  'rsub.Scalar': 'EQ_PROMOTED_BUGGY',
  'rsub.Tensor': 'EQ_PROMOTED_BUGGY',
  'scalar_tensor': 'SECOND_OR_DEFAULT',
  'searchsorted.Scalar': 'ALL Long',
  'searchsorted.Tensor': 'ALL Long',
  'sigmoid': 'TO_FLOAT',
  'sigmoid.out': 'EQ_SECOND',
  'sigmoid_backward': 'EQ_PROMOTED_BUGGY',
  'sigmoid_backward.grad_input': 'EQ_THIRD',
  'signbit': 'ALL Bool',
  'signbit.out': 'ALL Bool',
  'silu_backward': 'EQ_PROMOTED_BUGGY',
  'silu_backward.grad_input': 'EQ_THIRD',
  'sin': 'TO_FLOAT',
  'sin.out': 'EQ_SECOND',
  'sinc': 'TO_FLOAT',
  'sinc.out': 'EQ_SECOND',
  'sinh': 'TO_FLOAT',
  'sinh.out': 'EQ_SECOND',
  'smooth_l1_loss': 'EQ_PROMOTED_CONST',
  'smooth_l1_loss.out': 'EQ_THIRD',
  'smooth_l1_loss_backward': 'EQ_SECOND',
  'soft_margin_loss_backward': 'EQ_SECOND',
  'softmax.int': 'OPTIONAL_OR21',
  'softplus_backward': 'EQ_PROMOTED_BUGGY2',
  'softshrink_backward': 'EQ_PROMOTED_BUGGY2',
  'softshrink_backward.grad_input': 'EQ_FOURTH',
  'sparse_coo_tensor.size': 'FIRST_OR_DEFAULT',
  'special_digamma': 'TO_FLOAT',
  'special_digamma.out': 'EQ_SECOND',
  'special_entr': 'TO_FLOAT',
  'special_entr.out': 'EQ_SECOND',
  'special_erf': 'TO_FLOAT',
  'special_erf.out': 'EQ_SECOND',
  'special_erfc': 'TO_FLOAT',
  'special_erfc.out': 'EQ_SECOND',
  'special_erfcx': 'TO_FLOAT',
  'special_erfcx.out': 'EQ_SECOND',
  'special_erfinv': 'TO_FLOAT',
  'special_erfinv.out': 'EQ_SECOND',
  'special_exp2': 'TO_FLOAT',
  'special_exp2.out': 'EQ_SECOND',
  'special_expit': 'TO_FLOAT',
  'special_expit.out': 'EQ_SECOND',
  'special_expm1': 'TO_FLOAT',
  'special_expm1.out': 'EQ_SECOND',
  'special_gammainc': 'EQ_PROMOTED_CONST',
  'special_gammainc.out': 'EQ_THIRD',
  'special_gammaincc': 'EQ_PROMOTED_CONST',
  'special_gammaincc.out': 'EQ_THIRD',
  'special_gammaln': 'TO_FLOAT',
  'special_gammaln.out': 'EQ_SECOND',
  'special_i0': 'TO_FLOAT',
  'special_i0.out': 'EQ_SECOND',
  'special_i0e': 'TO_FLOAT',
  'special_i0e.out': 'EQ_SECOND',
  'special_i1': 'TO_FLOAT',
  'special_i1.out': 'EQ_SECOND',
  'special_i1e': 'TO_FLOAT',
  'special_i1e.out': 'EQ_SECOND',
  'special_log1p': 'TO_FLOAT',
  'special_log1p.out': 'EQ_SECOND',
  'special_log_softmax': 'OPTIONAL_OR21',
  'special_logit': 'TO_FLOAT',
  'special_logit.out': 'EQ_SECOND',
  'special_logsumexp': 'TO_FLOAT',
  'special_logsumexp.out': 'EQ_SECOND',
  'special_multigammaln': 'TO_FLOAT',
  'special_multigammaln.out': 'EQ_SECOND',
  'special_ndtr': 'TO_FLOAT',
  'special_ndtr.out': 'EQ_SECOND',
  'special_ndtri': 'TO_FLOAT',
  'special_ndtri.out': 'EQ_SECOND',
  'special_polygamma': 'TO_FLOAT',
  'special_polygamma.out': 'EQ_SECOND',
  'special_psi': 'TO_FLOAT',
  'special_psi.out': 'EQ_SECOND',
  'special_sinc': 'TO_FLOAT',
  'special_sinc.out': 'EQ_SECOND',
  'special_softmax': 'OPTIONAL_OR21',
  'special_xlog1py': 'TO_FLOAT2',
  'special_xlog1py.other_scalar': 'TO_FLOAT',
  'special_xlog1py.other_scalar_out': 'EQ_THIRD',
  'special_xlog1py.out': 'EQ_THIRD',
  'special_xlog1py.self_scalar': 'TO_FLOAT2',
  'special_xlog1py.self_scalar_out': 'EQ_THIRD',
  'special_xlogy': 'TO_FLOAT2',
  'special_xlogy.other_scalar': 'TO_FLOAT',
  'special_xlogy.other_scalar_out': 'EQ_THIRD',
  'special_xlogy.out': 'EQ_THIRD',
  'special_xlogy.self_scalar': 'TO_FLOAT2',
  'special_xlogy.self_scalar_out': 'EQ_THIRD',
  'special_zeta': 'TO_FLOAT2',
  'special_zeta.other_scalar': 'TO_FLOAT',
  'special_zeta.other_scalar_out': 'EQ_THIRD',
  'special_zeta.out': 'EQ_THIRD',
  'special_zeta.self_scalar': 'TO_FLOAT2',
  'special_zeta.self_scalar_out': 'EQ_THIRD',
  'sqrt': 'TO_FLOAT',
  'sqrt.out': 'EQ_SECOND',
  'square': 'BOOL2INT',
  'square.out': 'EQ_SECOND',
  'stack': 'EQ_PROMOTED',
  'stack.out': 'EQ_THIRD',
  'std': 'TO_VALUE_TYPE',
  'std.correction': 'TO_VALUE_TYPE',
  'std.dim': 'TO_VALUE_TYPE',
  'stft': 'EQ_PROMOTED',
  'sub.Scalar': 'EQ_PROMOTED_BUGGY',
  'sub.Tensor': 'EQ_PROMOTED_BUGGY',
  'sub.out': 'EQ_FOURTH',
  'subtract.Scalar': 'EQ_PROMOTED_BUGGY',
  'subtract.Tensor': 'EQ_PROMOTED_BUGGY',
  'subtract.out': 'EQ_FOURTH',
  'sum': 'OPTIONAL_O21LONG',
  'sum.dim_IntList': 'OPTIONAL_O21LONG',
  'sum_to_size': 'INTEGRAL2INT',
  'tan': 'TO_FLOAT',
  'tan.out': 'EQ_SECOND',
  'tanh': 'TO_FLOAT',
  'tanh.out': 'EQ_SECOND',
  'tanh_backward': 'EQ_PROMOTED_BUGGY',
  'tanh_backward.grad_input': 'EQ_THIRD',
  'threshold.out': 'EQ_FOURTH',
  'threshold_backward': 'EQ_PROMOTED_BUGGY2',
  'threshold_backward.grad_input': 'EQ_FOURTH',
  'to.device': 'EQ_SECOND',
  'to.dtype': 'EQ_SECOND',
  'to.dtype_layout': 'OPTIONAL_OR21',
  'to.other': 'EQ_SECOND',
  'trapezoid.dx': 'TO_FLOAT',
  'trapz.dx': 'TO_FLOAT',
  'tril_indices': 'FIRST_OR_LONG',
  'triu_indices': 'FIRST_OR_LONG',
  'true_divide.Scalar': 'TO_FLOAT2',
  'true_divide.Tensor': 'TO_FLOAT2',
  'true_divide.out': 'EQ_THIRD',
  'type_as': 'EQ_SECOND',
  'vander': 'INTEGRAL2INT',
  'var': 'TO_VALUE_TYPE',
  'var.correction': 'TO_VALUE_TYPE',
  'var.dim': 'TO_VALUE_TYPE',
  'view.dtype': 'EQ_SECOND',
  'view_as_real': 'TO_VALUE_TYPE',
  'vstack': 'EQ_PROMOTED',
  'vstack.out': 'EQ_THIRD',
  'where.ScalarOther': 'EQ_SECOND',
  'where.ScalarSelf': 'EQ_THIRD',
  'where.self': 'EQ_SECOND',
  'xlogy.OutScalar_Other': 'EQ_THIRD',
  'xlogy.OutScalar_Self': 'EQ_THIRD',
  'xlogy.OutTensor': 'EQ_THIRD',
  'xlogy.Scalar_Other': 'TO_FLOAT',
  'xlogy.Scalar_Self': 'TO_FLOAT2',
  'xlogy.Tensor': 'TO_FLOAT2',
  'zeros': 'FIRST_OR_DEFAULT',
  'zeros.names': 'FIRST_OR_DEFAULT',
  'zeros_like': 'OPTIONAL_OR21',
}

shape_inference = {
  '__and__.Scalar': 'EQ_FIRST',
  '__and__.Tensor': 'STD_PROMOTE',
  '__iand__.Scalar': 'EQ_FIRST',
  '__iand__.Tensor': 'EQ_FIRST',
  '__ilshift__.Scalar': 'EQ_FIRST',
  '__ilshift__.Tensor': 'EQ_FIRST',
  '__ior__.Scalar': 'EQ_FIRST',
  '__ior__.Tensor': 'EQ_FIRST',
  '__irshift__.Scalar': 'EQ_FIRST',
  '__irshift__.Tensor': 'EQ_FIRST',
  '__ixor__.Scalar': 'EQ_FIRST',
  '__ixor__.Tensor': 'EQ_FIRST',
  '__lshift__.Scalar': 'EQ_FIRST',
  '__lshift__.Tensor': 'STD_PROMOTE',
  '__or__.Scalar': 'EQ_FIRST',
  '__or__.Tensor': 'STD_PROMOTE',
  '__rshift__.Scalar': 'EQ_FIRST',
  '__rshift__.Tensor': 'STD_PROMOTE',
  '__xor__.Scalar': 'EQ_FIRST',
  '__xor__.Tensor': 'STD_PROMOTE',
  '_adaptive_avg_pool2d': 'POOL2D',
  '_add_relu.Scalar': 'EQ_FIRST',
  '_add_relu.Tensor': 'STD_PROMOTE',
  '_add_relu.out': 'PROMOTE_1_2',
  '_add_relu_.Scalar': 'EQ_FIRST',
  '_add_relu_.Tensor': 'EQ_FIRST',
  '_autocast_to_full_precision': 'EQ_FIRST',
  '_autocast_to_reduced_precision': 'EQ_FIRST',
  '_cast_Byte': 'EQ_FIRST',
  '_cast_Char': 'EQ_FIRST',
  '_cast_Double': 'EQ_FIRST',
  '_cast_Float': 'EQ_FIRST',
  '_cast_Half': 'EQ_FIRST',
  '_cast_Int': 'EQ_FIRST',
  '_cast_Long': 'EQ_FIRST',
  '_cast_Short': 'EQ_FIRST',
  '_cdist_forward': 'MULT_1ST_2ND',
  '_compute_linear_combination.out': 'EQ_THIRD',
  '_conj_physical': 'EQ_FIRST',
  '_dirichlet_grad': 'STD_PROMOTE',
  '_euclidean_dist': 'MULT_1ST_2ND',
  '_fake_quantize_learnable_per_channel_affine': 'EQ_FIRST',
  '_fake_quantize_learnable_per_tensor_affine': 'EQ_FIRST',
  '_index_copy_': 'EQ_FIRST',
  '_log_softmax': 'EQ_FIRST',
  '_log_softmax.out': 'EQ_FIRST',
  '_logcumsumexp': 'EQ_FIRST',
  '_logcumsumexp.out': 'EQ_FIRST',
  '_neg_view': 'EQ_FIRST',
  '_reshape_alias': 'EQ_SECOND',
  '_sample_dirichlet': 'EQ_FIRST',
  '_saturate_weight_to_fp16': 'EQ_FIRST',
  '_softmax': 'EQ_FIRST',
  '_softmax.out': 'EQ_FIRST',
  '_softmax_backward_data': 'EQ_FIRST',
  '_softmax_backward_data.out': 'EQ_FIRST',
  '_sparse_addmm': 'MATMUL_2ND_3RD',
  '_sparse_mm': 'MUL_1ST_2ND',
  '_standard_gamma': 'EQ_FIRST',
  '_standard_gamma_grad': 'STD_PROMOTE',
  '_test_ambiguous_defaults.a': 'ALL []',
  '_test_optional_filled_intlist': 'EQ_FIRST',
  '_test_optional_floatlist': 'EQ_FIRST',
  '_test_optional_intlist': 'EQ_FIRST',
  '_test_serialization_subcmul': 'STD_PROMOTE',
  '_test_warn_in_autograd': 'EQ_FIRST',
  '_to_copy': 'EQ_FIRST',
  '_unsafe_view': 'RESHAPE',
  '_upsample_nearest_exact1d': 'MATMUL_1ST_2ND',
  '_upsample_nearest_exact1d.out': 'MATMUL_1ST_2ND',
  '_upsample_nearest_exact1d_backward': 'EQ_THIRD',
  '_upsample_nearest_exact1d_backward.grad_input': 'EQ_THIRD',
  '_weight_norm': 'STD_PROMOTE',
  'abs': 'EQ_FIRST',
  'abs.out': 'EQ_FIRST',
  'abs_': 'EQ_FIRST',
  'absolute': 'EQ_FIRST',
  'absolute.out': 'EQ_FIRST',
  'absolute_': 'EQ_FIRST',
  'acos': 'EQ_FIRST',
  'acos.out': 'EQ_FIRST',
  'acos_': 'EQ_FIRST',
  'acosh': 'EQ_FIRST',
  'acosh.out': 'EQ_FIRST',
  'acosh_': 'EQ_FIRST',
  'adaptive_avg_pool1d': 'MATMUL_1ST_2ND',
  'adaptive_avg_pool2d': 'POOL2D',
  'adaptive_avg_pool2d.out': 'POOL2D',
  'adaptive_avg_pool3d': 'ALL [1, 1, 1]',
  'add.Scalar': 'EQ_FIRST',
  'add.Tensor': 'STD_PROMOTE',
  'add.out': 'PROMOTE_1_2',
  'add_.Scalar': 'EQ_FIRST',
  'add_.Tensor': 'EQ_FIRST',
  'addcdiv': 'STD_PROMOTE',
  'addcdiv.out': 'EQ_FIRST',
  'addcdiv_': 'EQ_FIRST',
  'addcmul': 'STD_PROMOTE',
  'addcmul.out': 'EQ_FIRST',
  'addcmul_': 'EQ_FIRST',
  'addmm': 'MATMUL_2ND_3RD',
  'addmm.out': 'MATMUL_2ND_3RD',
  'addmm_': 'EQ_FIRST',
  'addmv': 'PICK_1ST_2ND',
  'addmv.out': 'PICK_1ST_2ND',
  'addmv_': 'EQ_FIRST',
  'addr': 'JOIN_2_3',
  'addr.out': 'EQ_FIRST',
  'addr_': 'EQ_FIRST',
  'alias': 'EQ_FIRST',
  'align_to': 'ALL [1]',
  'all': 'ALL []',
  'all.dim': 'ARGMAX',
  'alpha_dropout': 'EQ_FIRST',
  'alpha_dropout_': 'EQ_FIRST',
  'amax': 'REDUCE',
  'amax.out': 'REDUCE',
  'amin': 'REDUCE',
  'amin.out': 'REDUCE',
  'angle': 'EQ_FIRST',
  'angle.out': 'EQ_FIRST',
  'any': 'ALL []',
  'any.dim': 'ARGMAX',
  'arccos': 'EQ_FIRST',
  'arccos.out': 'EQ_FIRST',
  'arccos_': 'EQ_FIRST',
  'arccosh': 'EQ_FIRST',
  'arccosh.out': 'EQ_FIRST',
  'arccosh_': 'EQ_FIRST',
  'arcsin': 'EQ_FIRST',
  'arcsin.out': 'EQ_FIRST',
  'arcsin_': 'EQ_FIRST',
  'arcsinh': 'EQ_FIRST',
  'arcsinh.out': 'EQ_FIRST',
  'arcsinh_': 'EQ_FIRST',
  'arctan': 'EQ_FIRST',
  'arctan.out': 'EQ_FIRST',
  'arctan2': 'STD_PROMOTE',
  'arctan2.out': 'PROMOTE_1_2',
  'arctan2_': 'EQ_FIRST',
  'arctan_': 'EQ_FIRST',
  'arctanh': 'EQ_FIRST',
  'arctanh.out': 'EQ_FIRST',
  'arctanh_': 'EQ_FIRST',
  'argmax': 'ARGMAX',
  'argmin': 'ARGMAX',
  'argsort': 'EQ_FIRST',
  'as_strided': 'EQ_SECOND',
  'as_strided_': 'EQ_SECOND',
  'asin': 'EQ_FIRST',
  'asin.out': 'EQ_FIRST',
  'asin_': 'EQ_FIRST',
  'asinh': 'EQ_FIRST',
  'asinh.out': 'EQ_FIRST',
  'asinh_': 'EQ_FIRST',
  'atan': 'EQ_FIRST',
  'atan.out': 'EQ_FIRST',
  'atan2': 'STD_PROMOTE',
  'atan2.out': 'PROMOTE_1_2',
  'atan2_': 'EQ_FIRST',
  'atan_': 'EQ_FIRST',
  'atanh': 'EQ_FIRST',
  'atanh.out': 'EQ_FIRST',
  'atanh_': 'EQ_FIRST',
  'baddbmm': 'MATMUL_2ND_3RD',
  'baddbmm.out': 'MATMUL_2ND_3RD',
  'baddbmm_': 'EQ_FIRST',
  'bernoulli': 'EQ_FIRST',
  'bernoulli.out': 'EQ_FIRST',
  'bernoulli.p': 'EQ_FIRST',
  'bernoulli_.Tensor': 'EQ_FIRST',
  'bernoulli_.float': 'EQ_FIRST',
  'binary_cross_entropy_backward.grad_input': 'EQ_FIRST',
  'binary_cross_entropy_with_logits_backward': 'STD_PROMOTE',
  'binomial': 'STD_PROMOTE',
  'bitwise_and.Scalar': 'EQ_FIRST',
  'bitwise_and.Scalar_out': 'EQ_FIRST',
  'bitwise_and.Tensor': 'STD_PROMOTE',
  'bitwise_and.Tensor_out': 'PROMOTE_1_2',
  'bitwise_and_.Scalar': 'EQ_FIRST',
  'bitwise_and_.Tensor': 'EQ_FIRST',
  'bitwise_left_shift.Scalar_Tensor': 'EQ_FIRST',
  'bitwise_left_shift.Tensor': 'STD_PROMOTE',
  'bitwise_left_shift.Tensor_Scalar': 'EQ_FIRST',
  'bitwise_left_shift.Tensor_Scalar_out': 'EQ_FIRST',
  'bitwise_left_shift.Tensor_out': 'PROMOTE_1_2',
  'bitwise_left_shift_.Tensor': 'EQ_FIRST',
  'bitwise_left_shift_.Tensor_Scalar': 'EQ_FIRST',
  'bitwise_not': 'EQ_FIRST',
  'bitwise_not.out': 'EQ_FIRST',
  'bitwise_not_': 'EQ_FIRST',
  'bitwise_or.Scalar': 'EQ_FIRST',
  'bitwise_or.Scalar_out': 'EQ_FIRST',
  'bitwise_or.Tensor': 'STD_PROMOTE',
  'bitwise_or.Tensor_out': 'PROMOTE_1_2',
  'bitwise_or_.Scalar': 'EQ_FIRST',
  'bitwise_or_.Tensor': 'EQ_FIRST',
  'bitwise_right_shift.Scalar_Tensor': 'EQ_FIRST',
  'bitwise_right_shift.Tensor': 'STD_PROMOTE',
  'bitwise_right_shift.Tensor_Scalar': 'EQ_FIRST',
  'bitwise_right_shift.Tensor_Scalar_out': 'EQ_FIRST',
  'bitwise_right_shift.Tensor_out': 'PROMOTE_1_2',
  'bitwise_right_shift_.Tensor': 'EQ_FIRST',
  'bitwise_right_shift_.Tensor_Scalar': 'EQ_FIRST',
  'bitwise_xor.Scalar': 'EQ_FIRST',
  'bitwise_xor.Scalar_out': 'EQ_FIRST',
  'bitwise_xor.Tensor': 'STD_PROMOTE',
  'bitwise_xor.Tensor_out': 'PROMOTE_1_2',
  'bitwise_xor_.Scalar': 'EQ_FIRST',
  'bitwise_xor_.Tensor': 'EQ_FIRST',
  'bmm': 'MUL_1ST_2ND',
  'bmm.out': 'MUL_1ST_2ND',
  'broadcast_to': 'STD_PROMOTE',
  'bucketize.Scalar': 'ALL []',
  'bucketize.Tensor': 'EQ_FIRST',
  'cauchy_': 'EQ_FIRST',
  'cdist': 'MULT_1ST_2ND',
  'ceil': 'EQ_FIRST',
  'ceil.out': 'EQ_FIRST',
  'ceil_': 'EQ_FIRST',
  'celu': 'EQ_FIRST',
  'celu_': 'EQ_FIRST',
  'chain_matmul': 'MUL_1ST_2ND',
  'chain_matmul.out': 'MUL_1ST_2ND',
  'channel_shuffle': 'EQ_FIRST',
  'cholesky': 'EQ_FIRST',
  'cholesky.out': 'EQ_FIRST',
  'cholesky_inverse': 'EQ_FIRST',
  'cholesky_inverse.out': 'EQ_FIRST',
  'clamp': 'EQ_FIRST',
  'clamp.Tensor': 'STD_PROMOTE',
  'clamp.out': 'EQ_FIRST',
  'clamp_': 'EQ_FIRST',
  'clamp_.Tensor': 'EQ_FIRST',
  'clamp_max': 'EQ_FIRST',
  'clamp_max.Tensor': 'STD_PROMOTE',
  'clamp_max.Tensor_out': 'PROMOTE_1_2',
  'clamp_max.out': 'EQ_FIRST',
  'clamp_max_': 'EQ_FIRST',
  'clamp_max_.Tensor': 'EQ_FIRST',
  'clamp_min': 'EQ_FIRST',
  'clamp_min.Tensor': 'STD_PROMOTE',
  'clamp_min.Tensor_out': 'PROMOTE_1_2',
  'clamp_min.out': 'EQ_FIRST',
  'clamp_min_': 'EQ_FIRST',
  'clamp_min_.Tensor': 'EQ_FIRST',
  'clip': 'EQ_FIRST',
  'clip.Tensor': 'STD_PROMOTE',
  'clip.out': 'EQ_FIRST',
  'clip_': 'EQ_FIRST',
  'clip_.Tensor': 'EQ_FIRST',
  'clone': 'EQ_FIRST',
  'combinations': 'PAD1',
  'complex': 'STD_PROMOTE',
  'conj': 'EQ_FIRST',
  'conj_physical': 'EQ_FIRST',
  'conj_physical.out': 'EQ_FIRST',
  'conj_physical_': 'EQ_FIRST',
  'contiguous': 'EQ_FIRST',
  'copy_': 'EQ_FIRST',
  'copysign.Scalar': 'EQ_FIRST',
  'copysign.Scalar_out': 'EQ_FIRST',
  'copysign.Tensor': 'STD_PROMOTE',
  'copysign.out': 'PROMOTE_1_2',
  'copysign_.Scalar': 'EQ_FIRST',
  'copysign_.Tensor': 'EQ_FIRST',
  'cos': 'EQ_FIRST',
  'cos.out': 'EQ_FIRST',
  'cos_': 'EQ_FIRST',
  'cosh': 'EQ_FIRST',
  'cosh.out': 'EQ_FIRST',
  'cosh_': 'EQ_FIRST',
  'cummaxmin_backward': 'EQ_SECOND',
  'cumprod': 'EQ_FIRST',
  'cumprod.out': 'EQ_FIRST',
  'cumprod_': 'EQ_FIRST',
  'cumsum': 'EQ_FIRST',
  'cumsum.out': 'EQ_FIRST',
  'cumsum_': 'EQ_FIRST',
  'data': 'EQ_FIRST',
  'deg2rad': 'EQ_FIRST',
  'deg2rad.out': 'EQ_FIRST',
  'deg2rad_': 'EQ_FIRST',
  'dequantize.self': 'EQ_FIRST',
  'det': 'DROP2',
  'detach': 'EQ_FIRST',
  'detach_': 'EQ_FIRST',
  'diagonal_backward': 'EQ_SECOND',
  'diagonal_scatter': 'EQ_FIRST',
  'digamma': 'EQ_FIRST',
  'digamma.out': 'EQ_FIRST',
  'digamma_': 'EQ_FIRST',
  'dist': 'ALL []',
  'div.Scalar': 'EQ_FIRST',
  'div.Scalar_mode': 'EQ_FIRST',
  'div.Tensor': 'STD_PROMOTE',
  'div.Tensor_mode': 'STD_PROMOTE',
  'div.out': 'PROMOTE_1_2',
  'div.out_mode': 'PROMOTE_1_2',
  'div_.Scalar': 'EQ_FIRST',
  'div_.Scalar_mode': 'EQ_FIRST',
  'div_.Tensor': 'EQ_FIRST',
  'div_.Tensor_mode': 'EQ_FIRST',
  'divide.Scalar': 'EQ_FIRST',
  'divide.Scalar_mode': 'EQ_FIRST',
  'divide.Tensor': 'STD_PROMOTE',
  'divide.Tensor_mode': 'STD_PROMOTE',
  'divide.out': 'PROMOTE_1_2',
  'divide.out_mode': 'PROMOTE_1_2',
  'divide_.Scalar': 'EQ_FIRST',
  'divide_.Scalar_mode': 'EQ_FIRST',
  'divide_.Tensor': 'EQ_FIRST',
  'divide_.Tensor_mode': 'EQ_FIRST',
  'dot': 'ALL []',
  'dot.out': 'ALL []',
  'dropout': 'EQ_FIRST',
  'dropout_': 'EQ_FIRST',
  'elu': 'EQ_FIRST',
  'elu.out': 'EQ_FIRST',
  'elu_': 'EQ_FIRST',
  'elu_backward': 'EQ_FIRST',
  'elu_backward.grad_input': 'EQ_FIRST',
  'empty.memory_format': 'EQ_FIRST',
  'empty.names': 'EQ_FIRST',
  'empty.out': 'EQ_FIRST',
  'empty_like': 'EQ_FIRST',
  'empty_strided': 'EQ_FIRST',
  'eq.Scalar': 'EQ_FIRST',
  'eq.Scalar_out': 'EQ_FIRST',
  'eq.Tensor': 'STD_PROMOTE',
  'eq.Tensor_out': 'PROMOTE_1_2',
  'eq_.Scalar': 'EQ_FIRST',
  'eq_.Tensor': 'EQ_FIRST',
  'erf': 'EQ_FIRST',
  'erf.out': 'EQ_FIRST',
  'erf_': 'EQ_FIRST',
  'erfc': 'EQ_FIRST',
  'erfc.out': 'EQ_FIRST',
  'erfc_': 'EQ_FIRST',
  'erfinv': 'EQ_FIRST',
  'erfinv.out': 'EQ_FIRST',
  'erfinv_': 'EQ_FIRST',
  'exp': 'EQ_FIRST',
  'exp.out': 'EQ_FIRST',
  'exp2': 'EQ_FIRST',
  'exp2.out': 'EQ_FIRST',
  'exp2_': 'EQ_FIRST',
  'exp_': 'EQ_FIRST',
  'expand': 'STD_PROMOTE',
  'expand_as': 'EQ_SECOND',
  'expm1': 'EQ_FIRST',
  'expm1.out': 'EQ_FIRST',
  'expm1_': 'EQ_FIRST',
  'exponential_': 'EQ_FIRST',
  'fake_quantize_per_channel_affine': 'EQ_FIRST',
  'fake_quantize_per_tensor_affine': 'EQ_FIRST',
  'fake_quantize_per_tensor_affine.tensor_qparams': 'EQ_FIRST',
  'fbgemm_pack_gemm_matrix_fp16': 'ALL [8]',
  'feature_alpha_dropout': 'EQ_FIRST',
  'feature_alpha_dropout_': 'EQ_FIRST',
  'feature_dropout': 'EQ_FIRST',
  'feature_dropout_': 'EQ_FIRST',
  'fft_fft2': 'EQ_FIRST',
  'fft_fftn': 'EQ_FIRST',
  'fft_fftshift': 'EQ_FIRST',
  'fft_ifft2': 'EQ_FIRST',
  'fft_ifftn': 'EQ_FIRST',
  'fft_ifftshift': 'EQ_FIRST',
  'fft_rfftfreq': 'ALL [1]',
  'fill_.Scalar': 'EQ_FIRST',
  'fill_.Tensor': 'EQ_FIRST',
  'fill_diagonal_': 'EQ_FIRST',
  'fix': 'EQ_FIRST',
  'fix.out': 'EQ_FIRST',
  'fix_': 'EQ_FIRST',
  'flatten.using_ints': 'FLATTEN',
  'flip': 'EQ_FIRST',
  'fliplr': 'EQ_FIRST',
  'flipud': 'EQ_FIRST',
  'float_power.Scalar': 'EQ_FIRST',
  'float_power.Tensor_Scalar': 'EQ_FIRST',
  'float_power.Tensor_Tensor': 'STD_PROMOTE',
  'floor': 'EQ_FIRST',
  'floor.out': 'EQ_FIRST',
  'floor_': 'EQ_FIRST',
  'floor_divide': 'STD_PROMOTE',
  'floor_divide.Scalar': 'EQ_FIRST',
  'floor_divide.out': 'PROMOTE_1_2',
  'floor_divide_.Scalar': 'EQ_FIRST',
  'floor_divide_.Tensor': 'EQ_FIRST',
  'fmax': 'STD_PROMOTE',
  'fmax.out': 'PROMOTE_1_2',
  'fmin': 'STD_PROMOTE',
  'fmin.out': 'PROMOTE_1_2',
  'fmod.Scalar': 'EQ_FIRST',
  'fmod.Scalar_out': 'EQ_FIRST',
  'fmod.Tensor': 'STD_PROMOTE',
  'fmod.Tensor_out': 'PROMOTE_1_2',
  'fmod_.Scalar': 'EQ_FIRST',
  'fmod_.Tensor': 'EQ_FIRST',
  'frac': 'EQ_FIRST',
  'frac.out': 'EQ_FIRST',
  'frac_': 'EQ_FIRST',
  'frobenius_norm': 'ALL []',
  'frobenius_norm.dim': 'REDUCE',
  'frobenius_norm.out': 'REDUCE',
  'from_file': 'ALL [0]',
  'full': 'EQ_FIRST',
  'full.names': 'EQ_FIRST',
  'full.out': 'EQ_FIRST',
  'full_like': 'EQ_FIRST',
  'gather': 'ALL [2, 0, 1]',
  'gcd': 'STD_PROMOTE',
  'gcd.out': 'PROMOTE_1_2',
  'gcd_': 'EQ_FIRST',
  'ge.Scalar': 'EQ_FIRST',
  'ge.Scalar_out': 'EQ_FIRST',
  'ge.Tensor': 'STD_PROMOTE',
  'ge.Tensor_out': 'PROMOTE_1_2',
  'ge_.Scalar': 'EQ_FIRST',
  'ge_.Tensor': 'EQ_FIRST',
  'gelu': 'EQ_FIRST',
  'gelu.out': 'EQ_FIRST',
  'gelu_backward': 'STD_PROMOTE',
  'gelu_backward.grad_input': 'PROMOTE_1_2',
  'glu_backward': 'EQ_SECOND',
  'glu_backward.grad_input': 'EQ_SECOND',
  'greater.Scalar': 'EQ_FIRST',
  'greater.Scalar_out': 'EQ_FIRST',
  'greater.Tensor': 'STD_PROMOTE',
  'greater.Tensor_out': 'PROMOTE_1_2',
  'greater_.Scalar': 'EQ_FIRST',
  'greater_.Tensor': 'EQ_FIRST',
  'greater_equal.Scalar': 'EQ_FIRST',
  'greater_equal.Scalar_out': 'EQ_FIRST',
  'greater_equal.Tensor': 'STD_PROMOTE',
  'greater_equal.Tensor_out': 'PROMOTE_1_2',
  'greater_equal_.Scalar': 'EQ_FIRST',
  'greater_equal_.Tensor': 'EQ_FIRST',
  'gt.Scalar': 'EQ_FIRST',
  'gt.Scalar_out': 'EQ_FIRST',
  'gt.Tensor': 'STD_PROMOTE',
  'gt.Tensor_out': 'PROMOTE_1_2',
  'gt_.Scalar': 'EQ_FIRST',
  'gt_.Tensor': 'EQ_FIRST',
  'hardshrink': 'EQ_FIRST',
  'hardshrink.out': 'EQ_FIRST',
  'hardshrink_backward': 'STD_PROMOTE',
  'hardshrink_backward.grad_input': 'PROMOTE_1_2',
  'hardsigmoid': 'EQ_FIRST',
  'hardsigmoid.out': 'EQ_FIRST',
  'hardsigmoid_': 'EQ_FIRST',
  'hardsigmoid_backward': 'STD_PROMOTE',
  'hardsigmoid_backward.grad_input': 'PROMOTE_1_2',
  'hardswish': 'EQ_FIRST',
  'hardswish.out': 'EQ_FIRST',
  'hardswish_': 'EQ_FIRST',
  'hardswish_backward': 'STD_PROMOTE',
  'hardtanh': 'EQ_FIRST',
  'hardtanh.out': 'EQ_FIRST',
  'hardtanh_': 'EQ_FIRST',
  'hardtanh_backward': 'STD_PROMOTE',
  'hardtanh_backward.grad_input': 'EQ_FIRST',
  'heaviside': 'STD_PROMOTE',
  'heaviside.out': 'PROMOTE_1_2',
  'heaviside_': 'EQ_FIRST',
  'histc': 'ALL [1]',
  'histc.out': 'ALL [1]',
  'huber_loss_backward': 'STD_PROMOTE',
  'huber_loss_backward.out': 'EQ_FIRST',
  'hypot': 'STD_PROMOTE',
  'hypot.out': 'PROMOTE_1_2',
  'hypot_': 'EQ_FIRST',
  'i0': 'EQ_FIRST',
  'i0.out': 'EQ_FIRST',
  'i0_': 'EQ_FIRST',
  'igamma': 'STD_PROMOTE',
  'igamma.out': 'PROMOTE_1_2',
  'igamma_': 'EQ_FIRST',
  'igammac': 'STD_PROMOTE',
  'igammac.out': 'PROMOTE_1_2',
  'igammac_': 'EQ_FIRST',
  'infinitely_differentiable_gelu_backward': 'EQ_SECOND',
  'instance_norm': 'EQ_FIRST',
  'inverse': 'EQ_FIRST',
  'inverse.out': 'EQ_FIRST',
  'isclose': 'STD_PROMOTE',
  'isfinite': 'EQ_FIRST',
  'isin.Scalar_Tensor': 'ALL []',
  'isin.Tensor_Scalar': 'EQ_FIRST',
  'isin.Tensor_Tensor': 'EQ_FIRST',
  'isinf': 'EQ_FIRST',
  'isnan': 'EQ_FIRST',
  'isneginf': 'EQ_FIRST',
  'isposinf': 'EQ_FIRST',
  'isreal': 'EQ_FIRST',
  'istft': 'ALL [1]',
  'kl_div_backward': 'STD_PROMOTE',
  'kron': 'MULLAST_1ST_2ND',
  'kron.out': 'MULLAST_1ST_2ND',
  'l1_loss_backward': 'STD_PROMOTE',
  'layer_norm': 'EQ_FIRST',
  'lcm': 'STD_PROMOTE',
  'lcm.out': 'PROMOTE_1_2',
  'lcm_': 'EQ_FIRST',
  'ldexp.Tensor': 'STD_PROMOTE',
  'ldexp.out': 'PROMOTE_1_2',
  'ldexp_': 'EQ_FIRST',
  'le.Scalar': 'EQ_FIRST',
  'le.Scalar_out': 'EQ_FIRST',
  'le.Tensor': 'STD_PROMOTE',
  'le.Tensor_out': 'PROMOTE_1_2',
  'le_.Scalar': 'EQ_FIRST',
  'le_.Tensor': 'EQ_FIRST',
  'leaky_relu': 'EQ_FIRST',
  'leaky_relu.out': 'EQ_FIRST',
  'leaky_relu_': 'EQ_FIRST',
  'leaky_relu_backward': 'STD_PROMOTE',
  'leaky_relu_backward.grad_input': 'EQ_FIRST',
  'lerp.Scalar': 'STD_PROMOTE',
  'lerp.Scalar_out': 'PROMOTE_1_2',
  'lerp.Tensor': 'STD_PROMOTE',
  'lerp.Tensor_out': 'PROMOTE_1_2_3',
  'lerp_.Scalar': 'EQ_FIRST',
  'lerp_.Tensor': 'EQ_FIRST',
  'less.Scalar': 'EQ_FIRST',
  'less.Scalar_out': 'EQ_FIRST',
  'less.Tensor': 'STD_PROMOTE',
  'less.Tensor_out': 'PROMOTE_1_2',
  'less_.Scalar': 'EQ_FIRST',
  'less_.Tensor': 'EQ_FIRST',
  'less_equal.Scalar': 'EQ_FIRST',
  'less_equal.Scalar_out': 'EQ_FIRST',
  'less_equal.Tensor': 'STD_PROMOTE',
  'less_equal.Tensor_out': 'PROMOTE_1_2',
  'less_equal_.Scalar': 'EQ_FIRST',
  'less_equal_.Tensor': 'EQ_FIRST',
  'lgamma': 'EQ_FIRST',
  'lgamma.out': 'EQ_FIRST',
  'lgamma_': 'EQ_FIRST',
  'linalg_cholesky': 'EQ_FIRST',
  'linalg_cholesky.out': 'EQ_FIRST',
  'linalg_cond': 'DROP2',
  'linalg_cond.out': 'DROP2',
  'linalg_det': 'DROP2',
  'linalg_det.out': 'DROP2',
  'linalg_eigvals': 'DROP1',
  'linalg_householder_product': 'EQ_FIRST',
  'linalg_householder_product.out': 'EQ_FIRST',
  'linalg_inv': 'EQ_FIRST',
  'linalg_matmul': 'MUL_1ST_2ND',
  'linalg_matmul.out': 'MUL_1ST_2ND',
  'linalg_matrix_exp': 'EQ_FIRST',
  'linalg_matrix_norm': 'REDUCE',
  'linalg_matrix_norm.out': 'REDUCE',
  'linalg_matrix_power': 'EQ_FIRST',
  'linalg_matrix_power.out': 'EQ_FIRST',
  'linalg_matrix_rank': 'DROP2',
  'linalg_matrix_rank.atol_rtol_float': 'DROP2',
  'linalg_matrix_rank.atol_rtol_float_out': 'DROP2',
  'linalg_matrix_rank.out': 'DROP2',
  'linalg_multi_dot': 'MUL_1ST_2ND',
  'linalg_multi_dot.out': 'MUL_1ST_2ND',
  'linalg_tensorinv': 'EQ_FIRST',
  'linalg_tensorinv.out': 'EQ_FIRST',
  'linear': 'MULT_1ST_2ND',
  'linear.out': 'MULT_1ST_2ND',
  'log': 'EQ_FIRST',
  'log.out': 'EQ_FIRST',
  'log10': 'EQ_FIRST',
  'log10.out': 'EQ_FIRST',
  'log10_': 'EQ_FIRST',
  'log1p': 'EQ_FIRST',
  'log1p.out': 'EQ_FIRST',
  'log1p_': 'EQ_FIRST',
  'log2': 'EQ_FIRST',
  'log2.out': 'EQ_FIRST',
  'log2_': 'EQ_FIRST',
  'log_': 'EQ_FIRST',
  'log_normal_': 'EQ_FIRST',
  'log_sigmoid': 'EQ_FIRST',
  'log_sigmoid.out': 'EQ_FIRST',
  'log_sigmoid_backward': 'STD_PROMOTE',
  'log_sigmoid_backward.grad_input': 'PROMOTE_1_2_3',
  'log_softmax.int': 'EQ_FIRST',
  'logaddexp': 'STD_PROMOTE',
  'logaddexp.out': 'PROMOTE_1_2',
  'logaddexp2': 'STD_PROMOTE',
  'logaddexp2.out': 'PROMOTE_1_2',
  'logcumsumexp': 'EQ_FIRST',
  'logcumsumexp.out': 'EQ_FIRST',
  'logdet': 'DROP2',
  'logical_and': 'STD_PROMOTE',
  'logical_and.out': 'PROMOTE_1_2',
  'logical_and_': 'EQ_FIRST',
  'logical_not': 'EQ_FIRST',
  'logical_not.out': 'EQ_FIRST',
  'logical_not_': 'EQ_FIRST',
  'logical_or': 'STD_PROMOTE',
  'logical_or.out': 'PROMOTE_1_2',
  'logical_or_': 'EQ_FIRST',
  'logical_xor': 'STD_PROMOTE',
  'logical_xor.out': 'PROMOTE_1_2',
  'logical_xor_': 'EQ_FIRST',
  'logit': 'EQ_FIRST',
  'logit.out': 'EQ_FIRST',
  'logit_': 'EQ_FIRST',
  'logit_backward': 'STD_PROMOTE',
  'logit_backward.grad_input': 'PROMOTE_1_2',
  'logsumexp': 'REDUCE',
  'logsumexp.out': 'REDUCE',
  'lt.Scalar': 'EQ_FIRST',
  'lt.Scalar_out': 'EQ_FIRST',
  'lt.Tensor': 'STD_PROMOTE',
  'lt.Tensor_out': 'PROMOTE_1_2',
  'lt_.Scalar': 'EQ_FIRST',
  'lt_.Tensor': 'EQ_FIRST',
  'masked_fill.Scalar': 'STD_PROMOTE',
  'masked_fill.Tensor': 'STD_PROMOTE',
  'masked_fill_.Scalar': 'EQ_FIRST',
  'masked_fill_.Tensor': 'EQ_FIRST',
  'masked_scatter': 'PROMOTE_1_2',
  'masked_scatter_': 'EQ_FIRST',
  'matmul': 'MUL_1ST_2ND',
  'matmul.out': 'MUL_1ST_2ND',
  'matrix_H': 'TRANSPOSE2D',
  'matrix_exp': 'EQ_FIRST',
  'matrix_power': 'EQ_FIRST',
  'matrix_power.out': 'EQ_FIRST',
  'matrix_rank': 'DROP2',
  'matrix_rank.tol': 'DROP2',
  'max': 'ALL []',
  'max.other': 'STD_PROMOTE',
  'max.out': 'PROMOTE_1_2',
  'maximum': 'STD_PROMOTE',
  'maximum.out': 'PROMOTE_1_2',
  'mean': 'ALL []',
  'mean.dim': 'REDUCE',
  'median': 'ALL []',
  'min': 'ALL []',
  'min.other': 'STD_PROMOTE',
  'min.out': 'PROMOTE_1_2',
  'minimum': 'STD_PROMOTE',
  'minimum.out': 'PROMOTE_1_2',
  'mish': 'EQ_FIRST',
  'mish.out': 'EQ_FIRST',
  'mish_': 'EQ_FIRST',
  'mish_backward': 'STD_PROMOTE',
  'mm': 'MUL_1ST_2ND',
  'mm.out': 'MUL_1ST_2ND',
  'moveaxis.int': 'TRANSPOSE',
  'movedim.int': 'TRANSPOSE',
  'mse_loss_backward': 'STD_PROMOTE',
  'mse_loss_backward.grad_input': 'EQ_FIRST',
  'msort': 'EQ_FIRST',
  'msort.out': 'EQ_FIRST',
  'mul.Scalar': 'EQ_FIRST',
  'mul.Tensor': 'STD_PROMOTE',
  'mul.out': 'PROMOTE_1_2',
  'mul_.Scalar': 'EQ_FIRST',
  'mul_.Tensor': 'EQ_FIRST',
  'multiply.Scalar': 'EQ_FIRST',
  'multiply.Tensor': 'STD_PROMOTE',
  'multiply.out': 'PROMOTE_1_2',
  'multiply_.Scalar': 'EQ_FIRST',
  'multiply_.Tensor': 'EQ_FIRST',
  'mv': 'MUL_1ST_2ND',
  'mv.out': 'MUL_1ST_2ND',
  'mvlgamma': 'EQ_FIRST',
  'mvlgamma.out': 'EQ_FIRST',
  'mvlgamma_': 'EQ_FIRST',
  'nan_to_num': 'EQ_FIRST',
  'nan_to_num.out': 'EQ_FIRST',
  'nan_to_num_': 'EQ_FIRST',
  'nanmean': 'REDUCE',
  'nanmean.out': 'REDUCE',
  'nanmedian': 'ALL []',
  'nanquantile.scalar': 'ARGMAX',
  'nanquantile.scalar_out': 'ARGMAX',
  'nansum': 'ALL []',
  'nansum.IntList_out': 'REDUCE',
  'nansum.dim_IntList': 'REDUCE',
  'native_dropout_backward': 'STD_PROMOTE',
  'ne.Scalar': 'EQ_FIRST',
  'ne.Scalar_out': 'EQ_FIRST',
  'ne.Tensor': 'STD_PROMOTE',
  'ne.Tensor_out': 'PROMOTE_1_2',
  'ne_.Scalar': 'EQ_FIRST',
  'ne_.Tensor': 'EQ_FIRST',
  'neg': 'EQ_FIRST',
  'neg.out': 'EQ_FIRST',
  'neg_': 'EQ_FIRST',
  'negative': 'EQ_FIRST',
  'negative.out': 'EQ_FIRST',
  'negative_': 'EQ_FIRST',
  'new_empty': 'EQ_SECOND',
  'new_empty_strided': 'EQ_SECOND',
  'new_full': 'EQ_SECOND',
  'new_ones': 'EQ_SECOND',
  'new_zeros': 'EQ_SECOND',
  'nextafter': 'STD_PROMOTE',
  'nextafter.out': 'PROMOTE_1_2',
  'nextafter_': 'EQ_FIRST',
  'norm.Scalar': 'ALL []',
  'norm.ScalarOpt_dtype': 'ALL []',
  'normal.Tensor_float': 'EQ_FIRST',
  'normal.Tensor_float_out': 'EQ_SECOND',
  'normal.float_Tensor': 'EQ_FIRST',
  'normal.float_Tensor_out': 'EQ_SECOND',
  'normal.float_float': 'EQ_FIRST',
  'normal.float_float_out': 'EQ_FIRST',
  'normal_': 'EQ_FIRST',
  'not_equal.Scalar': 'EQ_FIRST',
  'not_equal.Scalar_out': 'EQ_FIRST',
  'not_equal.Tensor': 'STD_PROMOTE',
  'not_equal.Tensor_out': 'PROMOTE_1_2',
  'not_equal_.Scalar': 'EQ_FIRST',
  'not_equal_.Tensor': 'EQ_FIRST',
  'nuclear_norm.dim': 'REDUCE',
  'nuclear_norm.dim_out': 'REDUCE',
  'ones': 'EQ_FIRST',
  'ones.names': 'EQ_FIRST',
  'ones.out': 'EQ_FIRST',
  'ones_like': 'EQ_FIRST',
  'orgqr': 'EQ_FIRST',
  'orgqr.out': 'EQ_FIRST',
  'ormqr': 'EQ_THIRD',
  'ormqr.out': 'EQ_THIRD',
  'permute': 'PERMUTE',
  'pixel_shuffle': 'EQ_FIRST',
  'pixel_unshuffle': 'EQ_FIRST',
  'poisson': 'EQ_FIRST',
  'polar': 'STD_PROMOTE',
  'polygamma': 'EQ_SECOND',
  'polygamma.out': 'EQ_SECOND',
  'polygamma_': 'EQ_FIRST',
  'positive': 'EQ_FIRST',
  'pow.Scalar': 'EQ_FIRST',
  'pow.Scalar_out': 'EQ_FIRST',
  'pow.Tensor_Scalar': 'EQ_FIRST',
  'pow.Tensor_Scalar_out': 'EQ_FIRST',
  'pow.Tensor_Tensor': 'STD_PROMOTE',
  'pow.Tensor_Tensor_out': 'PROMOTE_1_2',
  'pow_.Scalar': 'EQ_FIRST',
  'pow_.Tensor': 'EQ_FIRST',
  'prelu': 'EQ_FIRST',
  'prod': 'ALL []',
  'prod.dim_int': 'ARGMAX',
  'prod.int_out': 'ARGMAX',
  'quantile.scalar': 'ARGMAX',
  'quantile.scalar_out': 'ARGMAX',
  'rad2deg': 'EQ_FIRST',
  'rad2deg.out': 'EQ_FIRST',
  'rad2deg_': 'EQ_FIRST',
  'rand': 'EQ_FIRST',
  'rand.generator': 'EQ_FIRST',
  'rand.generator_out': 'EQ_FIRST',
  'rand.generator_with_names': 'EQ_FIRST',
  'rand.names': 'EQ_FIRST',
  'rand.out': 'EQ_FIRST',
  'rand_like': 'EQ_FIRST',
  'randint': 'EQ_SECOND',
  'randint.generator': 'EQ_SECOND',
  'randint.generator_out': 'EQ_SECOND',
  'randint.low': 'EQ_THIRD',
  'randint.low_generator': 'EQ_THIRD',
  'randint.low_generator_out': 'EQ_THIRD',
  'randint.low_out': 'EQ_THIRD',
  'randint.out': 'EQ_SECOND',
  'randint_like': 'EQ_FIRST',
  'randint_like.low_dtype': 'EQ_FIRST',
  'randn': 'EQ_FIRST',
  'randn.generator': 'EQ_FIRST',
  'randn.generator_out': 'EQ_FIRST',
  'randn.generator_with_names': 'EQ_FIRST',
  'randn.names': 'EQ_FIRST',
  'randn.out': 'EQ_FIRST',
  'randn_like': 'EQ_FIRST',
  'random_': 'EQ_FIRST',
  'random_.from': 'EQ_FIRST',
  'random_.to': 'EQ_FIRST',
  'reciprocal': 'EQ_FIRST',
  'reciprocal.out': 'EQ_FIRST',
  'reciprocal_': 'EQ_FIRST',
  'refine_names': 'EQ_FIRST',
  'relu': 'EQ_FIRST',
  'relu6': 'EQ_FIRST',
  'relu6_': 'EQ_FIRST',
  'relu_': 'EQ_FIRST',
  'remainder.Scalar': 'EQ_FIRST',
  'remainder.Scalar_Tensor': 'EQ_FIRST',
  'remainder.Scalar_out': 'EQ_FIRST',
  'remainder.Tensor': 'STD_PROMOTE',
  'remainder.Tensor_out': 'PROMOTE_1_2',
  'remainder_.Scalar': 'EQ_FIRST',
  'remainder_.Tensor': 'EQ_FIRST',
  'rename': 'EQ_FIRST',
  'rename_': 'EQ_FIRST',
  'renorm': 'EQ_FIRST',
  'renorm.out': 'EQ_FIRST',
  'renorm_': 'EQ_FIRST',
  'repeat': 'MULLAST_1ST_2ND',
  'requires_grad_': 'EQ_FIRST',
  'reshape': 'RESHAPE',
  'reshape_as': 'EQ_SECOND',
  'resize_': 'EQ_SECOND',
  'resize_as_': 'EQ_SECOND',
  'resolve_conj': 'EQ_FIRST',
  'resolve_neg': 'EQ_FIRST',
  'roll': 'EQ_FIRST',
  'round': 'EQ_FIRST',
  'round.out': 'EQ_FIRST',
  'round_': 'EQ_FIRST',
  'rrelu': 'EQ_FIRST',
  'rrelu_': 'EQ_FIRST',
  'rrelu_with_noise_backward': 'PROMOTE_1_2',
  'rsqrt': 'EQ_FIRST',
  'rsqrt.out': 'EQ_FIRST',
  'rsqrt_': 'EQ_FIRST',
  'rsub.Scalar': 'EQ_FIRST',
  'rsub.Tensor': 'STD_PROMOTE',
  'scatter.src': 'EQ_FIRST',
  'scatter.src_out': 'EQ_FIRST',
  'scatter.value': 'EQ_FIRST',
  'scatter.value_out': 'EQ_FIRST',
  'scatter_.src': 'EQ_FIRST',
  'scatter_.value': 'EQ_FIRST',
  'scatter_add': 'EQ_FIRST',
  'scatter_add.out': 'EQ_FIRST',
  'scatter_add_': 'EQ_FIRST',
  'searchsorted.Scalar': 'ALL []',
  'searchsorted.Tensor': 'EQ_SECOND',
  'select.int': 'SELECT',
  'select_backward': 'EQ_SECOND',
  'select_scatter': 'EQ_FIRST',
  'selu': 'EQ_FIRST',
  'selu_': 'EQ_FIRST',
  'set_': 'ALL [0]',
  'set_.source_Tensor': 'EQ_SECOND',
  'sgn': 'EQ_FIRST',
  'sgn.out': 'EQ_FIRST',
  'sgn_': 'EQ_FIRST',
  'sigmoid': 'EQ_FIRST',
  'sigmoid.out': 'EQ_FIRST',
  'sigmoid_': 'EQ_FIRST',
  'sigmoid_backward': 'STD_PROMOTE',
  'sigmoid_backward.grad_input': 'PROMOTE_1_2',
  'sign': 'EQ_FIRST',
  'sign.out': 'EQ_FIRST',
  'sign_': 'EQ_FIRST',
  'signbit': 'EQ_FIRST',
  'silu': 'EQ_FIRST',
  'silu.out': 'EQ_FIRST',
  'silu_': 'EQ_FIRST',
  'silu_backward': 'STD_PROMOTE',
  'silu_backward.grad_input': 'PROMOTE_1_2',
  'sin': 'EQ_FIRST',
  'sin.out': 'EQ_FIRST',
  'sin_': 'EQ_FIRST',
  'sinc': 'EQ_FIRST',
  'sinc.out': 'EQ_FIRST',
  'sinc_': 'EQ_FIRST',
  'sinh': 'EQ_FIRST',
  'sinh.out': 'EQ_FIRST',
  'sinh_': 'EQ_FIRST',
  'slice_backward': 'EQ_SECOND',
  'slice_scatter': 'EQ_FIRST',
  'smooth_l1_loss_backward': 'STD_PROMOTE',
  'smooth_l1_loss_backward.grad_input': 'EQ_FIRST',
  'soft_margin_loss_backward': 'STD_PROMOTE',
  'softmax.int': 'EQ_FIRST',
  'softplus': 'EQ_FIRST',
  'softplus.out': 'EQ_FIRST',
  'softplus_backward': 'STD_PROMOTE',
  'softplus_backward.grad_input': 'EQ_FIRST',
  'softshrink': 'EQ_FIRST',
  'softshrink.out': 'EQ_FIRST',
  'softshrink_backward': 'STD_PROMOTE',
  'softshrink_backward.grad_input': 'PROMOTE_1_2',
  'sparse_coo_tensor.size': 'EQ_FIRST',
  'special_digamma': 'EQ_FIRST',
  'special_digamma.out': 'EQ_FIRST',
  'special_entr': 'EQ_FIRST',
  'special_entr.out': 'EQ_FIRST',
  'special_erf': 'EQ_FIRST',
  'special_erf.out': 'EQ_FIRST',
  'special_erfc': 'EQ_FIRST',
  'special_erfc.out': 'EQ_FIRST',
  'special_erfcx': 'EQ_FIRST',
  'special_erfcx.out': 'EQ_FIRST',
  'special_erfinv': 'EQ_FIRST',
  'special_erfinv.out': 'EQ_FIRST',
  'special_exp2': 'EQ_FIRST',
  'special_exp2.out': 'EQ_FIRST',
  'special_expit': 'EQ_FIRST',
  'special_expit.out': 'EQ_FIRST',
  'special_expm1': 'EQ_FIRST',
  'special_expm1.out': 'EQ_FIRST',
  'special_gammainc': 'STD_PROMOTE',
  'special_gammainc.out': 'PROMOTE_1_2',
  'special_gammaincc': 'STD_PROMOTE',
  'special_gammaincc.out': 'PROMOTE_1_2',
  'special_gammaln': 'EQ_FIRST',
  'special_gammaln.out': 'EQ_FIRST',
  'special_i0': 'EQ_FIRST',
  'special_i0.out': 'EQ_FIRST',
  'special_i0e': 'EQ_FIRST',
  'special_i0e.out': 'EQ_FIRST',
  'special_i1': 'EQ_FIRST',
  'special_i1.out': 'EQ_FIRST',
  'special_i1e': 'EQ_FIRST',
  'special_i1e.out': 'EQ_FIRST',
  'special_log1p': 'EQ_FIRST',
  'special_log1p.out': 'EQ_FIRST',
  'special_log_softmax': 'EQ_FIRST',
  'special_logit': 'EQ_FIRST',
  'special_logit.out': 'EQ_FIRST',
  'special_logsumexp': 'REDUCE',
  'special_logsumexp.out': 'REDUCE',
  'special_multigammaln': 'EQ_FIRST',
  'special_multigammaln.out': 'EQ_FIRST',
  'special_ndtr': 'EQ_FIRST',
  'special_ndtr.out': 'EQ_FIRST',
  'special_ndtri': 'EQ_FIRST',
  'special_ndtri.out': 'EQ_FIRST',
  'special_polygamma': 'EQ_SECOND',
  'special_polygamma.out': 'EQ_SECOND',
  'special_psi': 'EQ_FIRST',
  'special_psi.out': 'EQ_FIRST',
  'special_round': 'EQ_FIRST',
  'special_round.out': 'EQ_FIRST',
  'special_sinc': 'EQ_FIRST',
  'special_sinc.out': 'EQ_FIRST',
  'special_softmax': 'EQ_FIRST',
  'special_xlog1py': 'STD_PROMOTE',
  'special_xlog1py.other_scalar': 'EQ_FIRST',
  'special_xlog1py.other_scalar_out': 'EQ_FIRST',
  'special_xlog1py.out': 'PROMOTE_1_2',
  'special_xlog1py.self_scalar': 'EQ_FIRST',
  'special_xlog1py.self_scalar_out': 'EQ_FIRST',
  'special_xlogy': 'STD_PROMOTE',
  'special_xlogy.other_scalar': 'EQ_FIRST',
  'special_xlogy.other_scalar_out': 'EQ_FIRST',
  'special_xlogy.out': 'PROMOTE_1_2',
  'special_xlogy.self_scalar': 'EQ_FIRST',
  'special_xlogy.self_scalar_out': 'EQ_FIRST',
  'special_zeta': 'STD_PROMOTE',
  'special_zeta.other_scalar': 'EQ_FIRST',
  'special_zeta.other_scalar_out': 'EQ_FIRST',
  'special_zeta.out': 'PROMOTE_1_2',
  'special_zeta.self_scalar': 'EQ_FIRST',
  'special_zeta.self_scalar_out': 'EQ_FIRST',
  'sqrt': 'EQ_FIRST',
  'sqrt.out': 'EQ_FIRST',
  'sqrt_': 'EQ_FIRST',
  'square': 'EQ_FIRST',
  'square.out': 'EQ_FIRST',
  'square_': 'EQ_FIRST',
  'std': 'ALL []',
  'sub.Scalar': 'EQ_FIRST',
  'sub.Tensor': 'STD_PROMOTE',
  'sub.out': 'PROMOTE_1_2',
  'sub_.Scalar': 'EQ_FIRST',
  'sub_.Tensor': 'EQ_FIRST',
  'subtract.Scalar': 'EQ_FIRST',
  'subtract.Tensor': 'STD_PROMOTE',
  'subtract.out': 'PROMOTE_1_2',
  'subtract_.Scalar': 'EQ_FIRST',
  'subtract_.Tensor': 'EQ_FIRST',
  'sum': 'ALL []',
  'sum.IntList_out': 'REDUCE',
  'sum.dim_IntList': 'REDUCE',
  'sum_to_size': 'EQ_SECOND',
  'swapaxes': 'TRANSPOSE',
  'swapaxes_': 'TRANSPOSE',
  'swapdims': 'TRANSPOSE',
  'swapdims_': 'TRANSPOSE',
  't': 'TRANSPOSE2D',
  't_': 'TRANSPOSE2D',
  'take_along_dim': 'ALL [0]',
  'take_along_dim.out': 'ALL [0]',
  'tan': 'EQ_FIRST',
  'tan.out': 'EQ_FIRST',
  'tan_': 'EQ_FIRST',
  'tanh': 'EQ_FIRST',
  'tanh.out': 'EQ_FIRST',
  'tanh_': 'EQ_FIRST',
  'tanh_backward': 'STD_PROMOTE',
  'tanh_backward.grad_input': 'PROMOTE_1_2',
  'threshold': 'EQ_FIRST',
  'threshold.out': 'EQ_FIRST',
  'threshold_': 'EQ_FIRST',
  'threshold_backward': 'STD_PROMOTE',
  'threshold_backward.grad_input': 'PROMOTE_1_2',
  'tile': 'MULLAST_1ST_2ND',
  'to.device': 'EQ_FIRST',
  'to.dtype': 'EQ_FIRST',
  'to.dtype_layout': 'EQ_FIRST',
  'to.other': 'EQ_FIRST',
  'to_sparse': 'EQ_FIRST',
  'to_sparse.sparse_dim': 'EQ_FIRST',
  'trace': 'ALL []',
  'trace_backward': 'EQ_SECOND',
  'transpose.int': 'TRANSPOSE',
  'transpose_': 'TRANSPOSE',
  'trapezoid.dx': 'SELECT',
  'trapz.dx': 'SELECT',
  'tril': 'EQ_FIRST',
  'tril.out': 'EQ_FIRST',
  'tril_': 'EQ_FIRST',
  'triu': 'EQ_FIRST',
  'triu.out': 'EQ_FIRST',
  'triu_': 'EQ_FIRST',
  'true_divide.Scalar': 'EQ_FIRST',
  'true_divide.Tensor': 'STD_PROMOTE',
  'true_divide.out': 'PROMOTE_1_2',
  'true_divide_.Scalar': 'EQ_FIRST',
  'true_divide_.Tensor': 'EQ_FIRST',
  'trunc': 'EQ_FIRST',
  'trunc.out': 'EQ_FIRST',
  'trunc_': 'EQ_FIRST',
  'type_as': 'EQ_FIRST',
  'unfold': 'UNFOLD',
  'uniform_': 'EQ_FIRST',
  'unsqueeze': 'UNSQUEEZE',
  'unsqueeze_': 'UNSQUEEZE',
  'upsample_linear1d': 'MATMUL_1ST_2ND',
  'upsample_linear1d.out': 'MATMUL_1ST_2ND',
  'upsample_linear1d_backward': 'EQ_THIRD',
  'upsample_linear1d_backward.grad_input': 'EQ_THIRD',
  'upsample_nearest1d': 'MATMUL_1ST_2ND',
  'upsample_nearest1d.out': 'MATMUL_1ST_2ND',
  'upsample_nearest1d_backward': 'EQ_THIRD',
  'upsample_nearest1d_backward.grad_input': 'EQ_THIRD',
  'var': 'ALL []',
  'vdot': 'ALL []',
  'vdot.out': 'ALL []',
  'view': 'RESHAPE',
  'view.dtype': 'EQ_FIRST',
  'view_as': 'EQ_SECOND',
  'view_as_complex': 'DROP1',
  'xlogy.OutScalar_Other': 'EQ_FIRST',
  'xlogy.OutScalar_Self': 'EQ_FIRST',
  'xlogy.OutTensor': 'PROMOTE_1_2',
  'xlogy.Scalar_Other': 'EQ_FIRST',
  'xlogy.Scalar_Self': 'EQ_FIRST',
  'xlogy.Tensor': 'STD_PROMOTE',
  'xlogy_.Scalar_Other': 'EQ_FIRST',
  'xlogy_.Tensor': 'EQ_FIRST',
  'zero_': 'EQ_FIRST',
  'zeros': 'EQ_FIRST',
  'zeros.names': 'EQ_FIRST',
  'zeros.out': 'EQ_FIRST',
  'zeros_like': 'EQ_FIRST',
}

strides_inference = {
  'add.Tensor': 'STD_PROMOTE',
  'add_.Tensor': 'EQ_FIRST',
  'clone': 'CLONE',
  'div.Tensor': 'STD_PROMOTE',
  'dropout': 'EQ_FIRST',
  'embedding': 'CONTIGUOUS',
  'fill_.Scalar': 'EQ_FIRST',
  'gelu': 'CONTIGUOUS',
  'matmul': 'CONTIGUOUS',
  'ne.Scalar': 'EQ_FIRST',
  'normal_': 'EQ_FIRST',
  'permute': 'PERMUTE',
  'softmax.int': 'CONTIGUOUS',
  't': 'TRANSPOSE',
  'to.dtype': 'EQ_FIRST',
  'uniform_': 'EQ_FIRST',
  'view': 'VIEW',
  'zero_': 'EQ_FIRST',
}
