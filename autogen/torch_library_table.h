m.impl("_cast_Byte", wrap__cast_Byte);
m.impl("_cast_Char", wrap__cast_Char);
m.impl("_cast_Double", wrap__cast_Double);
m.impl("_cast_Float", wrap__cast_Float);
m.impl("_cast_Int", wrap__cast_Int);
m.impl("_cast_Long", wrap__cast_Long);
m.impl("_cast_Short", wrap__cast_Short);
m.impl("_cast_Half", wrap__cast_Half);
m.impl("_backward", wrap__backward);
m.impl("set_data", wrap_set_data);
m.impl("data", wrap_data);
m.impl("is_leaf", wrap_is_leaf);
m.impl("output_nr", wrap_output_nr);
m.impl("_version", wrap__version);
m.impl("requires_grad_", wrap_requires_grad_);
m.impl("retain_grad", wrap_retain_grad);
m.impl("retains_grad", wrap_retains_grad);
m.impl("_fw_primal", wrap__fw_primal);
m.impl("_make_dual", wrap__make_dual);
m.impl("_unpack_dual", wrap__unpack_dual);
m.impl("rename_", wrap_rename_);
m.impl("rename", wrap_rename);
m.impl("align_to", wrap_align_to);
m.impl("align_to.ellipsis_idx", wrap_align_to_ellipsis_idx);
m.impl("align_as", wrap_align_as);
m.impl("align_tensors", wrap_align_tensors);
m.impl("_assert_async", wrap__assert_async);
m.impl("refine_names", wrap_refine_names);
m.impl("_use_cudnn_ctc_loss", wrap__use_cudnn_ctc_loss);
m.impl("_cudnn_ctc_loss", wrap__cudnn_ctc_loss);
m.impl("_use_cudnn_rnn_flatten_weight", wrap__use_cudnn_rnn_flatten_weight);
m.impl("_cudnn_rnn_flatten_weight", wrap__cudnn_rnn_flatten_weight);
m.impl("_cudnn_rnn", wrap__cudnn_rnn);
m.impl("_cudnn_rnn_backward", wrap__cudnn_rnn_backward);
m.impl("_cudnn_init_dropout_state", wrap__cudnn_init_dropout_state);
m.impl("_debug_has_internal_overlap", wrap__debug_has_internal_overlap);
m.impl("_fused_dropout", wrap__fused_dropout);
m.impl("_masked_scale", wrap__masked_scale);
m.impl("_sobol_engine_draw", wrap__sobol_engine_draw);
m.impl("_sobol_engine_ff_", wrap__sobol_engine_ff_);
m.impl("_sobol_engine_scramble_", wrap__sobol_engine_scramble_);
m.impl("_sobol_engine_initialize_state_", wrap__sobol_engine_initialize_state_);
m.impl("_reshape_from_tensor", wrap__reshape_from_tensor);
m.impl("_shape_as_tensor", wrap__shape_as_tensor);
m.impl("dropout", wrap_dropout);
m.impl("dropout_", wrap_dropout_);
m.impl("feature_dropout", wrap_feature_dropout);
m.impl("feature_dropout_", wrap_feature_dropout_);
m.impl("alpha_dropout", wrap_alpha_dropout);
m.impl("alpha_dropout_", wrap_alpha_dropout_);
m.impl("feature_alpha_dropout", wrap_feature_alpha_dropout);
m.impl("feature_alpha_dropout_", wrap_feature_alpha_dropout_);
m.impl("abs", wrap_abs);
m.impl("abs_", wrap_abs_);
m.impl("abs.out", wrap_abs_out);
m.impl("absolute", wrap_absolute);
m.impl("absolute_", wrap_absolute_);
m.impl("absolute.out", wrap_absolute_out);
m.impl("angle", wrap_angle);
m.impl("angle.out", wrap_angle_out);
m.impl("view_as_real", wrap_view_as_real);
m.impl("_view_as_real_physical", wrap__view_as_real_physical);
m.impl("view_as_complex", wrap_view_as_complex);
m.impl("sgn.out", wrap_sgn_out);
m.impl("real", wrap_real);
m.impl("imag", wrap_imag);
m.impl("_conj", wrap__conj);
m.impl("conj", wrap_conj);
m.impl("_conj_physical", wrap__conj_physical);
m.impl("conj_physical", wrap_conj_physical);
m.impl("conj_physical.out", wrap_conj_physical_out);
m.impl("conj_physical_", wrap_conj_physical_);
m.impl("resolve_conj", wrap_resolve_conj);
m.impl("acos.out", wrap_acos_out);
m.impl("arccos", wrap_arccos);
m.impl("arccos_", wrap_arccos_);
m.impl("arccos.out", wrap_arccos_out);
m.impl("avg_pool1d", wrap_avg_pool1d);
m.impl("adaptive_avg_pool1d", wrap_adaptive_avg_pool1d);
m.impl("adaptive_max_pool1d", wrap_adaptive_max_pool1d);
m.impl("add.Tensor", wrap_add_Tensor);
m.impl("add_.Tensor", wrap_add__Tensor);
m.impl("add.out", wrap_add_out);
m.impl("_add_relu.Tensor", wrap__add_relu_Tensor);
m.impl("_add_relu_.Tensor", wrap__add_relu__Tensor);
m.impl("_add_relu.out", wrap__add_relu_out);
m.impl("add.Scalar", wrap_add_Scalar);
m.impl("add_.Scalar", wrap_add__Scalar);
m.impl("addmv.out", wrap_addmv_out);
m.impl("addr", wrap_addr);
m.impl("addr_", wrap_addr_);
m.impl("addr.out", wrap_addr_out);
m.impl("affine_grid_generator", wrap_affine_grid_generator);
m.impl("affine_grid_generator_backward", wrap_affine_grid_generator_backward);
m.impl("all.dim", wrap_all_dim);
m.impl("all.out", wrap_all_out);
m.impl("all.dimname", wrap_all_dimname);
m.impl("all.dimname_out", wrap_all_dimname_out);
m.impl("allclose", wrap_allclose);
m.impl("any.dim", wrap_any_dim);
m.impl("any.out", wrap_any_out);
m.impl("any.dimname", wrap_any_dimname);
m.impl("any.dimname_out", wrap_any_dimname_out);
m.impl("arange", wrap_arange);
m.impl("arange.start", wrap_arange_start);
m.impl("arange.start_step", wrap_arange_start_step);
m.impl("arange.out", wrap_arange_out);
m.impl("arange.start_out", wrap_arange_start_out);
m.impl("_dim_arange", wrap__dim_arange);
m.impl("argmax", wrap_argmax);
m.impl("argmax.out", wrap_argmax_out);
m.impl("argmin", wrap_argmin);
m.impl("argmin.out", wrap_argmin_out);
m.impl("acosh.out", wrap_acosh_out);
m.impl("arccosh", wrap_arccosh);
m.impl("arccosh_", wrap_arccosh_);
m.impl("arccosh.out", wrap_arccosh_out);
m.impl("asinh.out", wrap_asinh_out);
m.impl("arcsinh", wrap_arcsinh);
m.impl("arcsinh_", wrap_arcsinh_);
m.impl("arcsinh.out", wrap_arcsinh_out);
m.impl("atanh.out", wrap_atanh_out);
m.impl("arctanh", wrap_arctanh);
m.impl("arctanh_", wrap_arctanh_);
m.impl("arctanh.out", wrap_arctanh_out);
m.impl("as_strided", wrap_as_strided);
m.impl("as_strided_", wrap_as_strided_);
m.impl("asin", wrap_asin);
m.impl("asin_", wrap_asin_);
m.impl("asin.out", wrap_asin_out);
m.impl("arcsin", wrap_arcsin);
m.impl("arcsin_", wrap_arcsin_);
m.impl("arcsin.out", wrap_arcsin_out);
m.impl("atan.out", wrap_atan_out);
m.impl("arctan", wrap_arctan);
m.impl("arctan_", wrap_arctan_);
m.impl("arctan.out", wrap_arctan_out);
m.impl("atleast_1d", wrap_atleast_1d);
m.impl("atleast_1d.Sequence", wrap_atleast_1d_Sequence);
m.impl("atleast_2d", wrap_atleast_2d);
m.impl("atleast_2d.Sequence", wrap_atleast_2d_Sequence);
m.impl("atleast_3d", wrap_atleast_3d);
m.impl("atleast_3d.Sequence", wrap_atleast_3d_Sequence);
m.impl("baddbmm", wrap_baddbmm);
m.impl("baddbmm_", wrap_baddbmm_);
m.impl("_baddbmm_mkl_", wrap__baddbmm_mkl_);
m.impl("baddbmm.out", wrap_baddbmm_out);
m.impl("bartlett_window", wrap_bartlett_window);
m.impl("bartlett_window.periodic", wrap_bartlett_window_periodic);
m.impl("batch_norm", wrap_batch_norm);
m.impl("quantized_batch_norm", wrap_quantized_batch_norm);
m.impl("_batch_norm_impl_index", wrap__batch_norm_impl_index);
m.impl("_batch_norm_impl_index_backward", wrap__batch_norm_impl_index_backward);
m.impl("bernoulli", wrap_bernoulli);
m.impl("bernoulli.out", wrap_bernoulli_out);
m.impl("bernoulli_.Tensor", wrap_bernoulli__Tensor);
m.impl("bernoulli_.float", wrap_bernoulli__float);
m.impl("bernoulli.p", wrap_bernoulli_p);
m.impl("bilinear", wrap_bilinear);
m.impl("binary_cross_entropy", wrap_binary_cross_entropy);
m.impl("binary_cross_entropy.out", wrap_binary_cross_entropy_out);
m.impl("binary_cross_entropy_backward", wrap_binary_cross_entropy_backward);
m.impl("binary_cross_entropy_backward.grad_input", wrap_binary_cross_entropy_backward_grad_input);
m.impl("binary_cross_entropy_with_logits", wrap_binary_cross_entropy_with_logits);
m.impl("binary_cross_entropy_with_logits_backward", wrap_binary_cross_entropy_with_logits_backward);
m.impl("bincount", wrap_bincount);
m.impl("bitwise_not.out", wrap_bitwise_not_out);
m.impl("copysign.out", wrap_copysign_out);
m.impl("copysign.Scalar", wrap_copysign_Scalar);
m.impl("copysign_.Scalar", wrap_copysign__Scalar);
m.impl("copysign.Scalar_out", wrap_copysign_Scalar_out);
m.impl("logical_not", wrap_logical_not);
m.impl("logical_not_", wrap_logical_not_);
m.impl("logical_not.out", wrap_logical_not_out);
m.impl("logical_xor", wrap_logical_xor);
m.impl("logical_xor_", wrap_logical_xor_);
m.impl("logical_xor.out", wrap_logical_xor_out);
m.impl("logical_and", wrap_logical_and);
m.impl("logical_and_", wrap_logical_and_);
m.impl("logical_and.out", wrap_logical_and_out);
m.impl("logical_or", wrap_logical_or);
m.impl("logical_or_", wrap_logical_or_);
m.impl("logical_or.out", wrap_logical_or_out);
m.impl("blackman_window", wrap_blackman_window);
m.impl("blackman_window.periodic", wrap_blackman_window_periodic);
m.impl("bmm", wrap_bmm);
m.impl("_bmm", wrap__bmm);
m.impl("bmm.out", wrap_bmm_out);
m.impl("_bmm.out", wrap__bmm_out);
m.impl("broadcast_tensors", wrap_broadcast_tensors);
m.impl("broadcast_to", wrap_broadcast_to);
m.impl("cat", wrap_cat);
m.impl("cat.out", wrap_cat_out);
m.impl("cat.names", wrap_cat_names);
m.impl("cat.names_out", wrap_cat_names_out);
m.impl("block_diag", wrap_block_diag);
m.impl("ceil", wrap_ceil);
m.impl("ceil_", wrap_ceil_);
m.impl("ceil.out", wrap_ceil_out);
m.impl("chain_matmul", wrap_chain_matmul);
m.impl("chain_matmul.out", wrap_chain_matmul_out);
m.impl("unsafe_chunk", wrap_unsafe_chunk);
m.impl("chunk", wrap_chunk);
m.impl("tensor_split.sections", wrap_tensor_split_sections);
m.impl("tensor_split.indices", wrap_tensor_split_indices);
m.impl("tensor_split.tensor_indices_or_sections", wrap_tensor_split_tensor_indices_or_sections);
m.impl("clamp", wrap_clamp);
m.impl("clamp.Tensor", wrap_clamp_Tensor);
m.impl("clamp_", wrap_clamp_);
m.impl("clamp_.Tensor", wrap_clamp__Tensor);
m.impl("clamp.out", wrap_clamp_out);
m.impl("clamp.Tensor_out", wrap_clamp_Tensor_out);
m.impl("clamp_max", wrap_clamp_max);
m.impl("clamp_max.Tensor", wrap_clamp_max_Tensor);
m.impl("clamp_max_", wrap_clamp_max_);
m.impl("clamp_max_.Tensor", wrap_clamp_max__Tensor);
m.impl("clamp_max.out", wrap_clamp_max_out);
m.impl("clamp_max.Tensor_out", wrap_clamp_max_Tensor_out);
m.impl("clamp_min", wrap_clamp_min);
m.impl("clamp_min.Tensor", wrap_clamp_min_Tensor);
m.impl("clamp_min_", wrap_clamp_min_);
m.impl("clamp_min_.Tensor", wrap_clamp_min__Tensor);
m.impl("clamp_min.out", wrap_clamp_min_out);
m.impl("clamp_min.Tensor_out", wrap_clamp_min_Tensor_out);
m.impl("clip", wrap_clip);
m.impl("clip.Tensor", wrap_clip_Tensor);
m.impl("clip_", wrap_clip_);
m.impl("clip_.Tensor", wrap_clip__Tensor);
m.impl("clip.out", wrap_clip_out);
m.impl("clip.Tensor_out", wrap_clip_Tensor_out);
m.impl("cudnn_is_acceptable", wrap_cudnn_is_acceptable);
m.impl("complex", wrap_complex);
m.impl("complex.out", wrap_complex_out);
m.impl("polar", wrap_polar);
m.impl("polar.out", wrap_polar_out);
m.impl("constant_pad_nd", wrap_constant_pad_nd);
m.impl("contiguous", wrap_contiguous);
m.impl("convolution", wrap_convolution);
m.impl("convolution_overrideable", wrap_convolution_overrideable);
m.impl("convolution_backward_overrideable", wrap_convolution_backward_overrideable);
m.impl("_convolution", wrap__convolution);
m.impl("_convolution.deprecated", wrap__convolution_deprecated);
m.impl("_convolution_mode", wrap__convolution_mode);
m.impl("_convolution_nogroup", wrap__convolution_nogroup);
m.impl("_convolution_double_backward", wrap__convolution_double_backward);
m.impl("conv1d", wrap_conv1d);
m.impl("conv2d", wrap_conv2d);
m.impl("conv3d", wrap_conv3d);
m.impl("conv1d.padding", wrap_conv1d_padding);
m.impl("conv2d.padding", wrap_conv2d_padding);
m.impl("conv3d.padding", wrap_conv3d_padding);
m.impl("conv_tbc", wrap_conv_tbc);
m.impl("conv_tbc_backward", wrap_conv_tbc_backward);
m.impl("conv_transpose1d", wrap_conv_transpose1d);
m.impl("conv_transpose2d.input", wrap_conv_transpose2d_input);
m.impl("conv_transpose3d.input", wrap_conv_transpose3d_input);
m.impl("copy_", wrap_copy_);
m.impl("cos.out", wrap_cos_out);
m.impl("cosh.out", wrap_cosh_out);
m.impl("cosine_embedding_loss", wrap_cosine_embedding_loss);
m.impl("count_nonzero.dim_IntList", wrap_count_nonzero_dim_IntList);
m.impl("count_nonzero", wrap_count_nonzero);
m.impl("cudnn_affine_grid_generator", wrap_cudnn_affine_grid_generator);
m.impl("cudnn_affine_grid_generator_backward", wrap_cudnn_affine_grid_generator_backward);
m.impl("cudnn_batch_norm", wrap_cudnn_batch_norm);
m.impl("cudnn_batch_norm_backward", wrap_cudnn_batch_norm_backward);
m.impl("cudnn_convolution.deprecated", wrap_cudnn_convolution_deprecated);
m.impl("cudnn_convolution.deprecated2", wrap_cudnn_convolution_deprecated2);
m.impl("cudnn_convolution", wrap_cudnn_convolution);
m.impl("cudnn_convolution_backward_input", wrap_cudnn_convolution_backward_input);
m.impl("cudnn_convolution_backward", wrap_cudnn_convolution_backward);
m.impl("cudnn_convolution_backward_weight", wrap_cudnn_convolution_backward_weight);
m.impl("cudnn_convolution_transpose.deprecated", wrap_cudnn_convolution_transpose_deprecated);
m.impl("cudnn_convolution_transpose.deprecated2", wrap_cudnn_convolution_transpose_deprecated2);
m.impl("cudnn_convolution_transpose", wrap_cudnn_convolution_transpose);
m.impl("cudnn_convolution_transpose_backward", wrap_cudnn_convolution_transpose_backward);
m.impl("cudnn_convolution_transpose_backward_input", wrap_cudnn_convolution_transpose_backward_input);
m.impl("cudnn_convolution_transpose_backward_weight", wrap_cudnn_convolution_transpose_backward_weight);
m.impl("cudnn_convolution_relu", wrap_cudnn_convolution_relu);
m.impl("cudnn_convolution_add_relu", wrap_cudnn_convolution_add_relu);
m.impl("cudnn_grid_sampler", wrap_cudnn_grid_sampler);
m.impl("cudnn_grid_sampler_backward", wrap_cudnn_grid_sampler_backward);
m.impl("cummax", wrap_cummax);
m.impl("cummax.out", wrap_cummax_out);
m.impl("cummax.dimname", wrap_cummax_dimname);
m.impl("cummax.dimname_out", wrap_cummax_dimname_out);
m.impl("_cummax_helper", wrap__cummax_helper);
m.impl("cummin", wrap_cummin);
m.impl("cummin.out", wrap_cummin_out);
m.impl("cummin.dimname", wrap_cummin_dimname);
m.impl("cummin.dimname_out", wrap_cummin_dimname_out);
m.impl("_cummin_helper", wrap__cummin_helper);
m.impl("cummaxmin_backward", wrap_cummaxmin_backward);
m.impl("cumprod", wrap_cumprod);
m.impl("cumprod_", wrap_cumprod_);
m.impl("cumprod.out", wrap_cumprod_out);
m.impl("cumprod.dimname", wrap_cumprod_dimname);
m.impl("cumprod_.dimname", wrap_cumprod__dimname);
m.impl("cumprod.dimname_out", wrap_cumprod_dimname_out);
m.impl("cumprod_backward", wrap_cumprod_backward);
m.impl("cumsum", wrap_cumsum);
m.impl("cumsum_", wrap_cumsum_);
m.impl("cumsum.out", wrap_cumsum_out);
m.impl("cumsum.dimname", wrap_cumsum_dimname);
m.impl("cumsum_.dimname", wrap_cumsum__dimname);
m.impl("cumsum.dimname_out", wrap_cumsum_dimname_out);
m.impl("ctc_loss.IntList", wrap_ctc_loss_IntList);
m.impl("ctc_loss.Tensor", wrap_ctc_loss_Tensor);
m.impl("_ctc_loss", wrap__ctc_loss);
m.impl("_ctc_loss_backward", wrap__ctc_loss_backward);
m.impl("diag_embed", wrap_diag_embed);
m.impl("diagflat", wrap_diagflat);
m.impl("diagonal", wrap_diagonal);
m.impl("diagonal.Dimname", wrap_diagonal_Dimname);
m.impl("diagonal_backward", wrap_diagonal_backward);
m.impl("fill_diagonal_", wrap_fill_diagonal_);
m.impl("diff", wrap_diff);
m.impl("diff.out", wrap_diff_out);
m.impl("gradient.scalarint", wrap_gradient_scalarint);
m.impl("gradient.scalararray", wrap_gradient_scalararray);
m.impl("gradient.array", wrap_gradient_array);
m.impl("gradient.scalarrayint", wrap_gradient_scalarrayint);
m.impl("gradient.scalarrayarray", wrap_gradient_scalarrayarray);
m.impl("gradient.tensorarrayint", wrap_gradient_tensorarrayint);
m.impl("gradient.tensorarray", wrap_gradient_tensorarray);
m.impl("div.Tensor", wrap_div_Tensor);
m.impl("div_.Tensor", wrap_div__Tensor);
m.impl("div.out", wrap_div_out);
m.impl("div.Tensor_mode", wrap_div_Tensor_mode);
m.impl("div_.Tensor_mode", wrap_div__Tensor_mode);
m.impl("div.out_mode", wrap_div_out_mode);
m.impl("div.Scalar", wrap_div_Scalar);
m.impl("div_.Scalar", wrap_div__Scalar);
m.impl("div.Scalar_mode", wrap_div_Scalar_mode);
m.impl("div_.Scalar_mode", wrap_div__Scalar_mode);
m.impl("divide.Tensor", wrap_divide_Tensor);
m.impl("divide_.Tensor", wrap_divide__Tensor);
m.impl("divide.out", wrap_divide_out);
m.impl("divide.Scalar", wrap_divide_Scalar);
m.impl("divide_.Scalar", wrap_divide__Scalar);
m.impl("divide.Tensor_mode", wrap_divide_Tensor_mode);
m.impl("divide_.Tensor_mode", wrap_divide__Tensor_mode);
m.impl("divide.out_mode", wrap_divide_out_mode);
m.impl("divide.Scalar_mode", wrap_divide_Scalar_mode);
m.impl("divide_.Scalar_mode", wrap_divide__Scalar_mode);
m.impl("true_divide.Tensor", wrap_true_divide_Tensor);
m.impl("true_divide_.Tensor", wrap_true_divide__Tensor);
m.impl("true_divide.out", wrap_true_divide_out);
m.impl("true_divide.Scalar", wrap_true_divide_Scalar);
m.impl("true_divide_.Scalar", wrap_true_divide__Scalar);
m.impl("dot", wrap_dot);
m.impl("dot.out", wrap_dot_out);
m.impl("vdot", wrap_vdot);
m.impl("vdot.out", wrap_vdot_out);
m.impl("einsum", wrap_einsum);
m.impl("embedding", wrap_embedding);
m.impl("embedding_backward", wrap_embedding_backward);
m.impl("embedding_dense_backward", wrap_embedding_dense_backward);
m.impl("embedding_renorm_", wrap_embedding_renorm_);
m.impl("embedding_sparse_backward", wrap_embedding_sparse_backward);
m.impl("_embedding_bag_forward_only", wrap__embedding_bag_forward_only);
m.impl("_rowwise_prune", wrap__rowwise_prune);
m.impl("row_stack", wrap_row_stack);
m.impl("row_stack.out", wrap_row_stack_out);
m.impl("embedding_bag", wrap_embedding_bag);
m.impl("embedding_bag.padding_idx", wrap_embedding_bag_padding_idx);
m.impl("_embedding_bag", wrap__embedding_bag);
m.impl("_embedding_bag_backward", wrap__embedding_bag_backward);
m.impl("_embedding_bag_sparse_backward", wrap__embedding_bag_sparse_backward);
m.impl("_embedding_bag_dense_backward", wrap__embedding_bag_dense_backward);
m.impl("_embedding_bag_per_sample_weights_backward", wrap__embedding_bag_per_sample_weights_backward);
m.impl("empty.names", wrap_empty_names);
m.impl("empty.memory_format", wrap_empty_memory_format);
m.impl("new_empty", wrap_new_empty);
m.impl("new_empty_strided", wrap_new_empty_strided);
m.impl("new_full", wrap_new_full);
m.impl("new_zeros", wrap_new_zeros);
m.impl("new_ones", wrap_new_ones);
m.impl("_empty_affine_quantized", wrap__empty_affine_quantized);
m.impl("_empty_per_channel_affine_quantized", wrap__empty_per_channel_affine_quantized);
m.impl("resize_", wrap_resize_);
m.impl("empty_quantized", wrap_empty_quantized);
m.impl("empty.out", wrap_empty_out);
m.impl("empty_like", wrap_empty_like);
m.impl("empty_strided", wrap_empty_strided);
m.impl("erf.out", wrap_erf_out);
m.impl("erfc.out", wrap_erfc_out);
m.impl("exp.out", wrap_exp_out);
m.impl("exp2.out", wrap_exp2_out);
m.impl("expm1.out", wrap_expm1_out);
m.impl("expand", wrap_expand);
m.impl("expand_as", wrap_expand_as);
m.impl("eye", wrap_eye);
m.impl("eye.m", wrap_eye_m);
m.impl("eye.out", wrap_eye_out);
m.impl("eye.m_out", wrap_eye_m_out);
m.impl("flatten.using_ints", wrap_flatten_using_ints);
m.impl("flatten.named_out_dim", wrap_flatten_named_out_dim);
m.impl("flatten.using_names", wrap_flatten_using_names);
m.impl("flatten.DimnameList", wrap_flatten_DimnameList);
m.impl("unflatten.int", wrap_unflatten_int);
m.impl("unflatten.Dimname", wrap_unflatten_Dimname);
m.impl("fill_.Scalar", wrap_fill__Scalar);
m.impl("fill_.Tensor", wrap_fill__Tensor);
m.impl("floor", wrap_floor);
m.impl("floor_", wrap_floor_);
m.impl("floor.out", wrap_floor_out);
m.impl("floor_divide", wrap_floor_divide);
m.impl("floor_divide_.Tensor", wrap_floor_divide__Tensor);
m.impl("floor_divide.out", wrap_floor_divide_out);
m.impl("floor_divide.Scalar", wrap_floor_divide_Scalar);
m.impl("floor_divide_.Scalar", wrap_floor_divide__Scalar);
m.impl("frac.out", wrap_frac_out);
m.impl("full.names", wrap_full_names);
m.impl("full", wrap_full);
m.impl("full.out", wrap_full_out);
m.impl("full_like", wrap_full_like);
m.impl("from_file", wrap_from_file);
m.impl("gcd.out", wrap_gcd_out);
m.impl("lcm.out", wrap_lcm_out);
m.impl("grid_sampler", wrap_grid_sampler);
m.impl("grid_sampler_2d", wrap_grid_sampler_2d);
m.impl("grid_sampler_2d_backward", wrap_grid_sampler_2d_backward);
m.impl("_grid_sampler_2d_cpu_fallback", wrap__grid_sampler_2d_cpu_fallback);
m.impl("_grid_sampler_2d_cpu_fallback_backward", wrap__grid_sampler_2d_cpu_fallback_backward);
m.impl("grid_sampler_3d", wrap_grid_sampler_3d);
m.impl("grid_sampler_3d_backward", wrap_grid_sampler_3d_backward);
m.impl("hann_window", wrap_hann_window);
m.impl("hann_window.periodic", wrap_hann_window_periodic);
m.impl("hamming_window", wrap_hamming_window);
m.impl("hamming_window.periodic", wrap_hamming_window_periodic);
m.impl("hamming_window.periodic_alpha", wrap_hamming_window_periodic_alpha);
m.impl("hamming_window.periodic_alpha_beta", wrap_hamming_window_periodic_alpha_beta);
m.impl("kaiser_window", wrap_kaiser_window);
m.impl("kaiser_window.periodic", wrap_kaiser_window_periodic);
m.impl("kaiser_window.beta", wrap_kaiser_window_beta);
m.impl("hinge_embedding_loss", wrap_hinge_embedding_loss);
m.impl("group_norm", wrap_group_norm);
m.impl("native_group_norm", wrap_native_group_norm);
m.impl("native_group_norm_backward", wrap_native_group_norm_backward);
m.impl("_fft_r2c", wrap__fft_r2c);
m.impl("_fft_r2c.out", wrap__fft_r2c_out);
m.impl("_fft_c2r", wrap__fft_c2r);
m.impl("_fft_c2r.out", wrap__fft_c2r_out);
m.impl("_fft_c2c", wrap__fft_c2c);
m.impl("_fft_c2c.out", wrap__fft_c2c_out);
m.impl("_cufft_get_plan_cache_size", wrap__cufft_get_plan_cache_size);
m.impl("_cufft_get_plan_cache_max_size", wrap__cufft_get_plan_cache_max_size);
m.impl("_cufft_set_plan_cache_max_size", wrap__cufft_set_plan_cache_max_size);
m.impl("_cufft_clear_plan_cache", wrap__cufft_clear_plan_cache);
m.impl("index.Tensor", wrap_index_Tensor);
m.impl("index_copy_", wrap_index_copy_);
m.impl("index_copy", wrap_index_copy);
m.impl("index_copy_.dimname", wrap_index_copy__dimname);
m.impl("index_copy.dimname", wrap_index_copy_dimname);
m.impl("index_put_", wrap_index_put_);
m.impl("index_put", wrap_index_put);
m.impl("_index_put_impl_", wrap__index_put_impl_);
m.impl("instance_norm", wrap_instance_norm);
m.impl("inverse", wrap_inverse);
m.impl("inverse.out", wrap_inverse_out);
m.impl("_inverse_helper", wrap__inverse_helper);
m.impl("isclose", wrap_isclose);
m.impl("isnan", wrap_isnan);
m.impl("is_distributed", wrap_is_distributed);
m.impl("is_floating_point", wrap_is_floating_point);
m.impl("is_complex", wrap_is_complex);
m.impl("is_conj", wrap_is_conj);
m.impl("isreal", wrap_isreal);
m.impl("is_nonzero", wrap_is_nonzero);
m.impl("is_same_size", wrap_is_same_size);
m.impl("is_signed", wrap_is_signed);
m.impl("is_inference", wrap_is_inference);
m.impl("kl_div", wrap_kl_div);
m.impl("kl_div_backward", wrap_kl_div_backward);
m.impl("kron", wrap_kron);
m.impl("kron.out", wrap_kron_out);
m.impl("kthvalue", wrap_kthvalue);
m.impl("kthvalue.values", wrap_kthvalue_values);
m.impl("kthvalue.dimname", wrap_kthvalue_dimname);
m.impl("kthvalue.dimname_out", wrap_kthvalue_dimname_out);
m.impl("layer_norm", wrap_layer_norm);
m.impl("native_layer_norm", wrap_native_layer_norm);
m.impl("native_layer_norm_backward", wrap_native_layer_norm_backward);
m.impl("nan_to_num", wrap_nan_to_num);
m.impl("nan_to_num_", wrap_nan_to_num_);
m.impl("nan_to_num.out", wrap_nan_to_num_out);
m.impl("linear", wrap_linear);
m.impl("mkldnn_linear", wrap_mkldnn_linear);
m.impl("mkldnn_linear_backward_input", wrap_mkldnn_linear_backward_input);
m.impl("mkldnn_linear_backward_weights", wrap_mkldnn_linear_backward_weights);
m.impl("mkldnn_linear_backward", wrap_mkldnn_linear_backward);
m.impl("fbgemm_linear_int8_weight_fp32_activation", wrap_fbgemm_linear_int8_weight_fp32_activation);
m.impl("fbgemm_linear_int8_weight", wrap_fbgemm_linear_int8_weight);
m.impl("fbgemm_linear_quantize_weight", wrap_fbgemm_linear_quantize_weight);
m.impl("fbgemm_pack_gemm_matrix_fp16", wrap_fbgemm_pack_gemm_matrix_fp16);
m.impl("fbgemm_linear_fp16_weight_fp32_activation", wrap_fbgemm_linear_fp16_weight_fp32_activation);
m.impl("fbgemm_linear_fp16_weight", wrap_fbgemm_linear_fp16_weight);
m.impl("fbgemm_pack_quantized_matrix", wrap_fbgemm_pack_quantized_matrix);
m.impl("fbgemm_pack_quantized_matrix.KN", wrap_fbgemm_pack_quantized_matrix_KN);
m.impl("ldexp.Tensor", wrap_ldexp_Tensor);
m.impl("ldexp_", wrap_ldexp_);
m.impl("ldexp.out", wrap_ldexp_out);
m.impl("linspace", wrap_linspace);
m.impl("linspace.out", wrap_linspace_out);
m.impl("log.out", wrap_log_out);
m.impl("log10.out", wrap_log10_out);
m.impl("log1p", wrap_log1p);
m.impl("log1p_", wrap_log1p_);
m.impl("log1p.out", wrap_log1p_out);
m.impl("log2.out", wrap_log2_out);
m.impl("logaddexp.out", wrap_logaddexp_out);
m.impl("logaddexp", wrap_logaddexp);
m.impl("logaddexp2.out", wrap_logaddexp2_out);
m.impl("logaddexp2", wrap_logaddexp2);
m.impl("xlogy.Tensor", wrap_xlogy_Tensor);
m.impl("xlogy.Scalar_Self", wrap_xlogy_Scalar_Self);
m.impl("xlogy.Scalar_Other", wrap_xlogy_Scalar_Other);
m.impl("xlogy_.Tensor", wrap_xlogy__Tensor);
m.impl("xlogy_.Scalar_Other", wrap_xlogy__Scalar_Other);
m.impl("xlogy.OutTensor", wrap_xlogy_OutTensor);
m.impl("xlogy.OutScalar_Self", wrap_xlogy_OutScalar_Self);
m.impl("xlogy.OutScalar_Other", wrap_xlogy_OutScalar_Other);
m.impl("logdet", wrap_logdet);
m.impl("logspace", wrap_logspace);
m.impl("logspace.out", wrap_logspace_out);
m.impl("log_softmax.int", wrap_log_softmax_int);
m.impl("log_softmax.Dimname", wrap_log_softmax_Dimname);
m.impl("_log_softmax", wrap__log_softmax);
m.impl("_log_softmax_backward_data", wrap__log_softmax_backward_data);
m.impl("_logcumsumexp", wrap__logcumsumexp);
m.impl("_logcumsumexp.out", wrap__logcumsumexp_out);
m.impl("logcumsumexp", wrap_logcumsumexp);
m.impl("logcumsumexp.out", wrap_logcumsumexp_out);
m.impl("logcumsumexp.dimname", wrap_logcumsumexp_dimname);
m.impl("logcumsumexp.dimname_out", wrap_logcumsumexp_dimname_out);
m.impl("logsumexp", wrap_logsumexp);
m.impl("logsumexp.out", wrap_logsumexp_out);
m.impl("logsumexp.names", wrap_logsumexp_names);
m.impl("logsumexp.names_out", wrap_logsumexp_names_out);
m.impl("margin_ranking_loss", wrap_margin_ranking_loss);
m.impl("matmul", wrap_matmul);
m.impl("matmul.out", wrap_matmul_out);
m.impl("matrix_rank.tol", wrap_matrix_rank_tol);
m.impl("matrix_rank", wrap_matrix_rank);
m.impl("matrix_power", wrap_matrix_power);
m.impl("matrix_power.out", wrap_matrix_power_out);
m.impl("matrix_exp", wrap_matrix_exp);
m.impl("matrix_exp_backward", wrap_matrix_exp_backward);
m.impl("_aminmax", wrap__aminmax);
m.impl("_aminmax.dim", wrap__aminmax_dim);
m.impl("_compute_linear_combination", wrap__compute_linear_combination);
m.impl("_compute_linear_combination.out", wrap__compute_linear_combination_out);
m.impl("max.dim", wrap_max_dim);
m.impl("max.dim_max", wrap_max_dim_max);
m.impl("max.names_dim", wrap_max_names_dim);
m.impl("max.names_dim_max", wrap_max_names_dim_max);
m.impl("value_selecting_reduction_backward", wrap_value_selecting_reduction_backward);
m.impl("amax", wrap_amax);
m.impl("amax.out", wrap_amax_out);
m.impl("max_pool1d_with_indices", wrap_max_pool1d_with_indices);
m.impl("max_pool1d", wrap_max_pool1d);
m.impl("max_pool2d", wrap_max_pool2d);
m.impl("mkldnn_max_pool2d", wrap_mkldnn_max_pool2d);
m.impl("mkldnn_max_pool2d_backward", wrap_mkldnn_max_pool2d_backward);
m.impl("mkldnn_max_pool3d", wrap_mkldnn_max_pool3d);
m.impl("mkldnn_max_pool3d_backward", wrap_mkldnn_max_pool3d_backward);
m.impl("quantized_max_pool1d", wrap_quantized_max_pool1d);
m.impl("quantized_max_pool2d", wrap_quantized_max_pool2d);
m.impl("max_pool3d", wrap_max_pool3d);
m.impl("mean", wrap_mean);
m.impl("mean.dim", wrap_mean_dim);
m.impl("mean.out", wrap_mean_out);
m.impl("mean.names_dim", wrap_mean_names_dim);
m.impl("mean.names_out", wrap_mean_names_out);
m.impl("median", wrap_median);
m.impl("median.dim", wrap_median_dim);
m.impl("median.dim_values", wrap_median_dim_values);
m.impl("median.names_dim", wrap_median_names_dim);
m.impl("median.names_dim_values", wrap_median_names_dim_values);
m.impl("nanmedian", wrap_nanmedian);
m.impl("nanmedian.dim", wrap_nanmedian_dim);
m.impl("nanmedian.dim_values", wrap_nanmedian_dim_values);
m.impl("nanmedian.names_dim", wrap_nanmedian_names_dim);
m.impl("nanmedian.names_dim_values", wrap_nanmedian_names_dim_values);
m.impl("min.dim", wrap_min_dim);
m.impl("min.dim_min", wrap_min_dim_min);
m.impl("min.names_dim", wrap_min_names_dim);
m.impl("min.names_dim_min", wrap_min_names_dim_min);
m.impl("amin", wrap_amin);
m.impl("amin.out", wrap_amin_out);
m.impl("mkldnn_convolution", wrap_mkldnn_convolution);
m.impl("mkldnn_convolution_backward_input", wrap_mkldnn_convolution_backward_input);
m.impl("mkldnn_convolution_backward_weights", wrap_mkldnn_convolution_backward_weights);
m.impl("mkldnn_convolution_backward", wrap_mkldnn_convolution_backward);
m.impl("miopen_batch_norm", wrap_miopen_batch_norm);
m.impl("miopen_batch_norm_backward", wrap_miopen_batch_norm_backward);
m.impl("miopen_convolution", wrap_miopen_convolution);
m.impl("miopen_convolution_backward_input", wrap_miopen_convolution_backward_input);
m.impl("miopen_convolution_backward", wrap_miopen_convolution_backward);
m.impl("miopen_convolution_backward_bias", wrap_miopen_convolution_backward_bias);
m.impl("miopen_convolution_backward_weight", wrap_miopen_convolution_backward_weight);
m.impl("miopen_convolution_transpose", wrap_miopen_convolution_transpose);
m.impl("miopen_convolution_transpose_backward", wrap_miopen_convolution_transpose_backward);
m.impl("miopen_convolution_transpose_backward_input", wrap_miopen_convolution_transpose_backward_input);
m.impl("miopen_convolution_transpose_backward_weight", wrap_miopen_convolution_transpose_backward_weight);
m.impl("miopen_depthwise_convolution", wrap_miopen_depthwise_convolution);
m.impl("miopen_depthwise_convolution_backward_input", wrap_miopen_depthwise_convolution_backward_input);
m.impl("miopen_depthwise_convolution_backward", wrap_miopen_depthwise_convolution_backward);
m.impl("miopen_depthwise_convolution_backward_weight", wrap_miopen_depthwise_convolution_backward_weight);
m.impl("miopen_rnn", wrap_miopen_rnn);
m.impl("miopen_rnn_backward", wrap_miopen_rnn_backward);
m.impl("mm", wrap_mm);
m.impl("mm.out", wrap_mm_out);
m.impl("_sparse_mm", wrap__sparse_mm);
m.impl("_sparse_sparse_matmul", wrap__sparse_sparse_matmul);
m.impl("_sparse_mask_helper", wrap__sparse_mask_helper);
m.impl("mode", wrap_mode);
m.impl("mode.values", wrap_mode_values);
m.impl("mode.dimname", wrap_mode_dimname);
m.impl("mode.dimname_out", wrap_mode_dimname_out);
m.impl("mul.Tensor", wrap_mul_Tensor);
m.impl("mul_.Tensor", wrap_mul__Tensor);
m.impl("mul.out", wrap_mul_out);
m.impl("mul.Scalar", wrap_mul_Scalar);
m.impl("mul_.Scalar", wrap_mul__Scalar);
m.impl("multiply.Tensor", wrap_multiply_Tensor);
m.impl("multiply_.Tensor", wrap_multiply__Tensor);
m.impl("multiply.out", wrap_multiply_out);
m.impl("multiply.Scalar", wrap_multiply_Scalar);
m.impl("multiply_.Scalar", wrap_multiply__Scalar);
m.impl("mv", wrap_mv);
m.impl("mv.out", wrap_mv_out);
m.impl("mvlgamma", wrap_mvlgamma);
m.impl("mvlgamma_", wrap_mvlgamma_);
m.impl("narrow_copy", wrap_narrow_copy);
m.impl("narrow_copy.out", wrap_narrow_copy_out);
m.impl("narrow", wrap_narrow);
m.impl("narrow.Tensor", wrap_narrow_Tensor);
m.impl("native_batch_norm", wrap_native_batch_norm);
m.impl("native_batch_norm.out", wrap_native_batch_norm_out);
m.impl("batch_norm_stats", wrap_batch_norm_stats);
m.impl("batch_norm_elemt", wrap_batch_norm_elemt);
m.impl("batch_norm_elemt.out", wrap_batch_norm_elemt_out);
m.impl("batch_norm_gather_stats", wrap_batch_norm_gather_stats);
m.impl("batch_norm_gather_stats_with_counts", wrap_batch_norm_gather_stats_with_counts);
m.impl("native_batch_norm_backward", wrap_native_batch_norm_backward);
m.impl("batch_norm_backward_reduce", wrap_batch_norm_backward_reduce);
m.impl("batch_norm_backward_elemt", wrap_batch_norm_backward_elemt);
m.impl("batch_norm_update_stats", wrap_batch_norm_update_stats);
m.impl("is_vulkan_available", wrap_is_vulkan_available);
m.impl("_nnpack_available", wrap__nnpack_available);
m.impl("_nnpack_spatial_convolution", wrap__nnpack_spatial_convolution);
m.impl("_nnpack_spatial_convolution_backward", wrap__nnpack_spatial_convolution_backward);
m.impl("_nnpack_spatial_convolution_backward_input", wrap__nnpack_spatial_convolution_backward_input);
m.impl("_nnpack_spatial_convolution_backward_weight", wrap__nnpack_spatial_convolution_backward_weight);
m.impl("ones.names", wrap_ones_names);
m.impl("ones", wrap_ones);
m.impl("ones.out", wrap_ones_out);
m.impl("ones_like", wrap_ones_like);
m.impl("pairwise_distance", wrap_pairwise_distance);
m.impl("cdist", wrap_cdist);
m.impl("_euclidean_dist", wrap__euclidean_dist);
m.impl("_cdist_forward", wrap__cdist_forward);
m.impl("_cdist_backward", wrap__cdist_backward);
m.impl("pdist", wrap_pdist);
m.impl("_pdist_forward", wrap__pdist_forward);
m.impl("_pdist_backward", wrap__pdist_backward);
m.impl("cosine_similarity", wrap_cosine_similarity);
m.impl("permute", wrap_permute);
m.impl("movedim.intlist", wrap_movedim_intlist);
m.impl("movedim.int", wrap_movedim_int);
m.impl("moveaxis.intlist", wrap_moveaxis_intlist);
m.impl("moveaxis.int", wrap_moveaxis_int);
m.impl("numpy_T", wrap_numpy_T);
m.impl("pixel_shuffle", wrap_pixel_shuffle);
m.impl("pixel_unshuffle", wrap_pixel_unshuffle);
m.impl("channel_shuffle", wrap_channel_shuffle);
m.impl("is_pinned", wrap_is_pinned);
m.impl("pin_memory", wrap_pin_memory);
m.impl("pinverse", wrap_pinverse);
m.impl("poisson_nll_loss", wrap_poisson_nll_loss);
m.impl("rad2deg", wrap_rad2deg);
m.impl("rad2deg_", wrap_rad2deg_);
m.impl("rad2deg.out", wrap_rad2deg_out);
m.impl("deg2rad", wrap_deg2rad);
m.impl("deg2rad_", wrap_deg2rad_);
m.impl("deg2rad.out", wrap_deg2rad_out);
m.impl("scalar_tensor", wrap_scalar_tensor);
m.impl("rand.names", wrap_rand_names);
m.impl("rand.generator_with_names", wrap_rand_generator_with_names);
m.impl("rand", wrap_rand);
m.impl("rand.generator", wrap_rand_generator);
m.impl("rand.out", wrap_rand_out);
m.impl("rand.generator_out", wrap_rand_generator_out);
m.impl("rand_like", wrap_rand_like);
m.impl("randint", wrap_randint);
m.impl("randint.generator", wrap_randint_generator);
m.impl("randint.low", wrap_randint_low);
m.impl("randint.low_generator", wrap_randint_low_generator);
m.impl("randint.out", wrap_randint_out);
m.impl("randint.generator_out", wrap_randint_generator_out);
m.impl("randint.low_out", wrap_randint_low_out);
m.impl("randint.low_generator_out", wrap_randint_low_generator_out);
m.impl("randint_like", wrap_randint_like);
m.impl("randint_like.low_dtype", wrap_randint_like_low_dtype);
m.impl("randn", wrap_randn);
m.impl("randn.generator", wrap_randn_generator);
m.impl("randn.names", wrap_randn_names);
m.impl("randn.generator_with_names", wrap_randn_generator_with_names);
m.impl("randn.out", wrap_randn_out);
m.impl("randn.generator_out", wrap_randn_generator_out);
m.impl("randn_like", wrap_randn_like);
m.impl("randperm", wrap_randperm);
m.impl("randperm.generator", wrap_randperm_generator);
m.impl("randperm.out", wrap_randperm_out);
m.impl("randperm.generator_out", wrap_randperm_generator_out);
m.impl("range.step", wrap_range_step);
m.impl("range", wrap_range);
m.impl("range.out", wrap_range_out);
m.impl("ravel", wrap_ravel);
m.impl("reciprocal.out", wrap_reciprocal_out);
m.impl("neg", wrap_neg);
m.impl("neg_", wrap_neg_);
m.impl("neg.out", wrap_neg_out);
m.impl("negative", wrap_negative);
m.impl("negative_", wrap_negative_);
m.impl("negative.out", wrap_negative_out);
m.impl("repeat", wrap_repeat);
m.impl("repeat_interleave.Tensor", wrap_repeat_interleave_Tensor);
m.impl("repeat_interleave.self_Tensor", wrap_repeat_interleave_self_Tensor);
m.impl("repeat_interleave.self_int", wrap_repeat_interleave_self_int);
m.impl("reshape", wrap_reshape);
m.impl("_mkldnn_reshape", wrap__mkldnn_reshape);
m.impl("reshape_as", wrap_reshape_as);
m.impl("round.out", wrap_round_out);
m.impl("rrelu", wrap_rrelu);
m.impl("rrelu_", wrap_rrelu_);
m.impl("relu", wrap_relu);
m.impl("relu_", wrap_relu_);
m.impl("relu6", wrap_relu6);
m.impl("relu6_", wrap_relu6_);
m.impl("prelu", wrap_prelu);
m.impl("prelu_backward", wrap_prelu_backward);
m.impl("gelu.out", wrap_gelu_out);
m.impl("gelu", wrap_gelu);
m.impl("gelu_backward.grad_input", wrap_gelu_backward_grad_input);
m.impl("infinitely_differentiable_gelu_backward", wrap_infinitely_differentiable_gelu_backward);
m.impl("hardshrink.out", wrap_hardshrink_out);
m.impl("hardshrink_backward.grad_input", wrap_hardshrink_backward_grad_input);
m.impl("rsqrt.out", wrap_rsqrt_out);
m.impl("select.Dimname", wrap_select_Dimname);
m.impl("select.int", wrap_select_int);
m.impl("select_backward", wrap_select_backward);
m.impl("selu", wrap_selu);
m.impl("selu_", wrap_selu_);
m.impl("celu", wrap_celu);
m.impl("celu_", wrap_celu_);
m.impl("silu", wrap_silu);
m.impl("silu_", wrap_silu_);
m.impl("silu.out", wrap_silu_out);
m.impl("silu_backward", wrap_silu_backward);
m.impl("mish", wrap_mish);
m.impl("mish_", wrap_mish_);
m.impl("mish.out", wrap_mish_out);
m.impl("mish_backward", wrap_mish_backward);
m.impl("sigmoid", wrap_sigmoid);
m.impl("sigmoid_", wrap_sigmoid_);
m.impl("sigmoid.out", wrap_sigmoid_out);
m.impl("logit", wrap_logit);
m.impl("logit_", wrap_logit_);
m.impl("logit.out", wrap_logit_out);
m.impl("sin.out", wrap_sin_out);
m.impl("sinc.out", wrap_sinc_out);
m.impl("sinh.out", wrap_sinh_out);
m.impl("detach", wrap_detach);
m.impl("detach_", wrap_detach_);
m.impl("size.int", wrap_size_int);
m.impl("size.Dimname", wrap_size_Dimname);
m.impl("slice.Tensor", wrap_slice_Tensor);
m.impl("slice_backward", wrap_slice_backward);
m.impl("slogdet", wrap_slogdet);
m.impl("smm", wrap_smm);
m.impl("softmax.int", wrap_softmax_int);
m.impl("softmax.Dimname", wrap_softmax_Dimname);
m.impl("_softmax", wrap__softmax);
m.impl("_softmax_backward_data", wrap__softmax_backward_data);
m.impl("unsafe_split.Tensor", wrap_unsafe_split_Tensor);
m.impl("split.Tensor", wrap_split_Tensor);
m.impl("unsafe_split_with_sizes", wrap_unsafe_split_with_sizes);
m.impl("split_with_sizes", wrap_split_with_sizes);
m.impl("hsplit.int", wrap_hsplit_int);
m.impl("hsplit.array", wrap_hsplit_array);
m.impl("vsplit.int", wrap_vsplit_int);
m.impl("vsplit.array", wrap_vsplit_array);
m.impl("dsplit.int", wrap_dsplit_int);
m.impl("dsplit.array", wrap_dsplit_array);
m.impl("squeeze", wrap_squeeze);
m.impl("squeeze.dim", wrap_squeeze_dim);
m.impl("squeeze.dimname", wrap_squeeze_dimname);
m.impl("squeeze_", wrap_squeeze_);
m.impl("squeeze_.dim", wrap_squeeze__dim);
m.impl("squeeze_.dimname", wrap_squeeze__dimname);
m.impl("sspaddmm", wrap_sspaddmm);
m.impl("sspaddmm.out", wrap_sspaddmm_out);
m.impl("stack", wrap_stack);
m.impl("stack.out", wrap_stack_out);
m.impl("_stack", wrap__stack);
m.impl("_stack.out", wrap__stack_out);
m.impl("hstack", wrap_hstack);
m.impl("hstack.out", wrap_hstack_out);
m.impl("vstack", wrap_vstack);
m.impl("vstack.out", wrap_vstack_out);
m.impl("dstack", wrap_dstack);
m.impl("dstack.out", wrap_dstack_out);
m.impl("stft", wrap_stft);
m.impl("istft", wrap_istft);
m.impl("stride.int", wrap_stride_int);
m.impl("stride.Dimname", wrap_stride_Dimname);
m.impl("sum", wrap_sum);
m.impl("sum.dim_IntList", wrap_sum_dim_IntList);
m.impl("sum.dim_DimnameList", wrap_sum_dim_DimnameList);
m.impl("sum.IntList_out", wrap_sum_IntList_out);
m.impl("sum.DimnameList_out", wrap_sum_DimnameList_out);
m.impl("nansum", wrap_nansum);
m.impl("nansum.dim_IntList", wrap_nansum_dim_IntList);
m.impl("nansum.IntList_out", wrap_nansum_IntList_out);
m.impl("sum_to_size", wrap_sum_to_size);
m.impl("sqrt", wrap_sqrt);
m.impl("sqrt.out", wrap_sqrt_out);
m.impl("square", wrap_square);
m.impl("square_", wrap_square_);
m.impl("square.out", wrap_square_out);
m.impl("std", wrap_std);
m.impl("std.dim", wrap_std_dim);
m.impl("std.correction", wrap_std_correction);
m.impl("std_mean", wrap_std_mean);
m.impl("std_mean.dim", wrap_std_mean_dim);
m.impl("std_mean.correction", wrap_std_mean_correction);
m.impl("std_mean.names_dim", wrap_std_mean_names_dim);
m.impl("std_mean.correction_names", wrap_std_mean_correction_names);
m.impl("std.out", wrap_std_out);
m.impl("std.correction_out", wrap_std_correction_out);
m.impl("std.names_dim", wrap_std_names_dim);
m.impl("std.names_out", wrap_std_names_out);
m.impl("std.correction_names", wrap_std_correction_names);
m.impl("std.correction_names_out", wrap_std_correction_names_out);
m.impl("prod", wrap_prod);
m.impl("prod.dim_int", wrap_prod_dim_int);
m.impl("prod.int_out", wrap_prod_int_out);
m.impl("prod.dim_Dimname", wrap_prod_dim_Dimname);
m.impl("prod.Dimname_out", wrap_prod_Dimname_out);
m.impl("t", wrap_t);
m.impl("t_", wrap_t_);
m.impl("tan.out", wrap_tan_out);
m.impl("tanh", wrap_tanh);
m.impl("tanh_", wrap_tanh_);
m.impl("tanh.out", wrap_tanh_out);
m.impl("tensordot", wrap_tensordot);
m.impl("tensordot.out", wrap_tensordot_out);
m.impl("threshold", wrap_threshold);
m.impl("threshold.out", wrap_threshold_out);
m.impl("threshold_backward.grad_input", wrap_threshold_backward_grad_input);
m.impl("threshold_backward", wrap_threshold_backward);
m.impl("tile", wrap_tile);
m.impl("transpose.int", wrap_transpose_int);
m.impl("transpose.Dimname", wrap_transpose_Dimname);
m.impl("_mkldnn_transpose", wrap__mkldnn_transpose);
m.impl("transpose_", wrap_transpose_);
m.impl("_mkldnn_transpose_", wrap__mkldnn_transpose_);
m.impl("one_hot", wrap_one_hot);
m.impl("flip", wrap_flip);
m.impl("fliplr", wrap_fliplr);
m.impl("flipud", wrap_flipud);
m.impl("roll", wrap_roll);
m.impl("rot90", wrap_rot90);
m.impl("trapz.x", wrap_trapz_x);
m.impl("trapz.dx", wrap_trapz_dx);
m.impl("_trilinear", wrap__trilinear);
m.impl("triplet_margin_loss", wrap_triplet_margin_loss);
m.impl("trunc", wrap_trunc);
m.impl("trunc_", wrap_trunc_);
m.impl("trunc.out", wrap_trunc_out);
m.impl("fix", wrap_fix);
m.impl("fix_", wrap_fix_);
m.impl("fix.out", wrap_fix_out);
m.impl("type_as", wrap_type_as);
m.impl("_has_compatible_shallow_copy_type", wrap__has_compatible_shallow_copy_type);
m.impl("_unique", wrap__unique);
m.impl("unique_dim", wrap_unique_dim);
m.impl("unique_consecutive", wrap_unique_consecutive);
m.impl("unique_dim_consecutive", wrap_unique_dim_consecutive);
m.impl("_unique2", wrap__unique2);
m.impl("_unsafe_view", wrap__unsafe_view);
m.impl("unsqueeze", wrap_unsqueeze);
m.impl("unsqueeze_", wrap_unsqueeze_);
m.impl("vander", wrap_vander);
m.impl("var", wrap_var);
m.impl("var.dim", wrap_var_dim);
m.impl("var.correction", wrap_var_correction);
m.impl("var.out", wrap_var_out);
m.impl("var.correction_out", wrap_var_correction_out);
m.impl("var.names_dim", wrap_var_names_dim);
m.impl("var.names_out", wrap_var_names_out);
m.impl("var.correction_names", wrap_var_correction_names);
m.impl("var.correction_names_out", wrap_var_correction_names_out);
m.impl("var_mean", wrap_var_mean);
m.impl("var_mean.dim", wrap_var_mean_dim);
m.impl("var_mean.correction", wrap_var_mean_correction);
m.impl("var_mean.names_dim", wrap_var_mean_names_dim);
m.impl("var_mean.correction_names", wrap_var_mean_correction_names);
m.impl("view_as", wrap_view_as);
m.impl("where.self", wrap_where_self);
m.impl("where.ScalarSelf", wrap_where_ScalarSelf);
m.impl("where.ScalarOther", wrap_where_ScalarOther);
m.impl("where.Scalar", wrap_where_Scalar);
m.impl("where", wrap_where);
m.impl("_s_where", wrap__s_where);
m.impl("norm_except_dim", wrap_norm_except_dim);
m.impl("_weight_norm", wrap__weight_norm);
m.impl("_weight_norm_cuda_interface", wrap__weight_norm_cuda_interface);
m.impl("_weight_norm_cuda_interface_backward", wrap__weight_norm_cuda_interface_backward);
m.impl("_weight_norm_differentiable_backward", wrap__weight_norm_differentiable_backward);
m.impl("zeros.names", wrap_zeros_names);
m.impl("zeros", wrap_zeros);
m.impl("zeros.out", wrap_zeros_out);
m.impl("zeros_like", wrap_zeros_like);
m.impl("_standard_gamma_grad", wrap__standard_gamma_grad);
m.impl("_standard_gamma", wrap__standard_gamma);
m.impl("_dirichlet_grad", wrap__dirichlet_grad);
m.impl("_sample_dirichlet", wrap__sample_dirichlet);
m.impl("poisson", wrap_poisson);
m.impl("binomial", wrap_binomial);
m.impl("native_norm", wrap_native_norm);
m.impl("native_norm.ScalarOpt_dim_dtype", wrap_native_norm_ScalarOpt_dim_dtype);
m.impl("_sparse_sum", wrap__sparse_sum);
m.impl("_sparse_sum.dtype", wrap__sparse_sum_dtype);
m.impl("_sparse_sum.dim", wrap__sparse_sum_dim);
m.impl("_sparse_sum.dim_dtype", wrap__sparse_sum_dim_dtype);
m.impl("_sparse_sum_backward", wrap__sparse_sum_backward);
m.impl("_sparse_softmax.int", wrap__sparse_softmax_int);
m.impl("_sparse_softmax.Dimname", wrap__sparse_softmax_Dimname);
m.impl("_sparse_softmax", wrap__sparse_softmax);
m.impl("_sparse_softmax_backward_data", wrap__sparse_softmax_backward_data);
m.impl("_sparse_log_softmax.int", wrap__sparse_log_softmax_int);
m.impl("_sparse_log_softmax.Dimname", wrap__sparse_log_softmax_Dimname);
m.impl("_sparse_log_softmax", wrap__sparse_log_softmax);
m.impl("_sparse_log_softmax_backward_data", wrap__sparse_log_softmax_backward_data);
m.impl("norm.ScalarOpt_dtype", wrap_norm_ScalarOpt_dtype);
m.impl("norm.Scalar", wrap_norm_Scalar);
m.impl("norm.ScalarOpt_dim_dtype", wrap_norm_ScalarOpt_dim_dtype);
m.impl("norm.ScalarOpt_dim", wrap_norm_ScalarOpt_dim);
m.impl("norm.dtype_out", wrap_norm_dtype_out);
m.impl("norm.out", wrap_norm_out);
m.impl("norm.names_ScalarOpt_dim_dtype", wrap_norm_names_ScalarOpt_dim_dtype);
m.impl("norm.names_ScalarOpt_dim", wrap_norm_names_ScalarOpt_dim);
m.impl("norm.names_dtype_out", wrap_norm_names_dtype_out);
m.impl("norm.names_out", wrap_norm_names_out);
m.impl("frexp.Tensor", wrap_frexp_Tensor);
m.impl("frexp.Tensor_out", wrap_frexp_Tensor_out);
m.impl("frobenius_norm", wrap_frobenius_norm);
m.impl("frobenius_norm.dim", wrap_frobenius_norm_dim);
m.impl("frobenius_norm.out", wrap_frobenius_norm_out);
m.impl("nuclear_norm", wrap_nuclear_norm);
m.impl("nuclear_norm.out", wrap_nuclear_norm_out);
m.impl("nuclear_norm.dim", wrap_nuclear_norm_dim);
m.impl("nuclear_norm.dim_out", wrap_nuclear_norm_dim_out);
m.impl("clone", wrap_clone);
m.impl("positive", wrap_positive);
m.impl("resize_as_", wrap_resize_as_);
m.impl("resize_as_sparse_", wrap_resize_as_sparse_);
m.impl("zero_", wrap_zero_);
m.impl("sub.out", wrap_sub_out);
m.impl("sub.Tensor", wrap_sub_Tensor);
m.impl("sub_.Tensor", wrap_sub__Tensor);
m.impl("sub.Scalar", wrap_sub_Scalar);
m.impl("sub_.Scalar", wrap_sub__Scalar);
m.impl("subtract.out", wrap_subtract_out);
m.impl("subtract.Tensor", wrap_subtract_Tensor);
m.impl("subtract_.Tensor", wrap_subtract__Tensor);
m.impl("subtract.Scalar", wrap_subtract_Scalar);
m.impl("subtract_.Scalar", wrap_subtract__Scalar);
m.impl("rsub.Tensor", wrap_rsub_Tensor);
m.impl("heaviside.out", wrap_heaviside_out);
m.impl("rsub.Scalar", wrap_rsub_Scalar);
m.impl("_sparse_addmm", wrap__sparse_addmm);
m.impl("addmm.out", wrap_addmm_out);
m.impl("addmm", wrap_addmm);
m.impl("addmm_", wrap_addmm_);
m.impl("sparse_csr_tensor.crow_col_value_size", wrap_sparse_csr_tensor_crow_col_value_size);
m.impl("sparse_csr_tensor.crow_col_value", wrap_sparse_csr_tensor_crow_col_value);
m.impl("_sparse_csr_tensor_unsafe", wrap__sparse_csr_tensor_unsafe);
m.impl("sparse_coo_tensor.size", wrap_sparse_coo_tensor_size);
m.impl("sparse_coo_tensor.indices", wrap_sparse_coo_tensor_indices);
m.impl("sparse_coo_tensor.indices_size", wrap_sparse_coo_tensor_indices_size);
m.impl("_sparse_coo_tensor_unsafe", wrap__sparse_coo_tensor_unsafe);
m.impl("_validate_sparse_coo_tensor_args", wrap__validate_sparse_coo_tensor_args);
m.impl("_validate_sparse_csr_tensor_args", wrap__validate_sparse_csr_tensor_args);
m.impl("_sparse_coo_tensor_with_dims", wrap__sparse_coo_tensor_with_dims);
m.impl("_sparse_coo_tensor_with_dims_and_tensors", wrap__sparse_coo_tensor_with_dims_and_tensors);
m.impl("sparse_resize_", wrap_sparse_resize_);
m.impl("sparse_resize_and_clear_", wrap_sparse_resize_and_clear_);
m.impl("sparse_mask", wrap_sparse_mask);
m.impl("_to_cpu", wrap__to_cpu);
m.impl("to_dense", wrap_to_dense);
m.impl("to_dense_backward", wrap_to_dense_backward);
m.impl("sparse_dim", wrap_sparse_dim);
m.impl("_dimI", wrap__dimI);
m.impl("dense_dim", wrap_dense_dim);
m.impl("_dimV", wrap__dimV);
m.impl("_nnz", wrap__nnz);
m.impl("coalesce", wrap_coalesce);
m.impl("_coalesce", wrap__coalesce);
m.impl("is_coalesced", wrap_is_coalesced);
m.impl("_indices", wrap__indices);
m.impl("_values", wrap__values);
m.impl("_coalesced_", wrap__coalesced_);
m.impl("indices", wrap_indices);
m.impl("values", wrap_values);
m.impl("crow_indices", wrap_crow_indices);
m.impl("col_indices", wrap_col_indices);
m.impl("hspmm.out", wrap_hspmm_out);
m.impl("hspmm", wrap_hspmm);
m.impl("copy_sparse_to_sparse_", wrap_copy_sparse_to_sparse_);
m.impl("unbind.int", wrap_unbind_int);
m.impl("unbind.Dimname", wrap_unbind_Dimname);
m.impl("to_sparse.sparse_dim", wrap_to_sparse_sparse_dim);
m.impl("to_sparse", wrap_to_sparse);
m.impl("to_mkldnn", wrap_to_mkldnn);
m.impl("mkldnn_reorder_conv2d_weight", wrap_mkldnn_reorder_conv2d_weight);
m.impl("mkldnn_reorder_conv3d_weight", wrap_mkldnn_reorder_conv3d_weight);
m.impl("to_mkldnn_backward", wrap_to_mkldnn_backward);
m.impl("quantize_per_tensor", wrap_quantize_per_tensor);
m.impl("quantize_per_tensor.tensors", wrap_quantize_per_tensor_tensors);
m.impl("quantize_per_channel", wrap_quantize_per_channel);
m.impl("dequantize.self", wrap_dequantize_self);
m.impl("dequantize.tensors", wrap_dequantize_tensors);
m.impl("q_scale", wrap_q_scale);
m.impl("q_zero_point", wrap_q_zero_point);
m.impl("q_per_channel_scales", wrap_q_per_channel_scales);
m.impl("q_per_channel_zero_points", wrap_q_per_channel_zero_points);
m.impl("q_per_channel_axis", wrap_q_per_channel_axis);
m.impl("int_repr", wrap_int_repr);
m.impl("_make_per_tensor_quantized_tensor", wrap__make_per_tensor_quantized_tensor);
m.impl("_make_per_channel_quantized_tensor", wrap__make_per_channel_quantized_tensor);
m.impl("qscheme", wrap_qscheme);
m.impl("fake_quantize_per_tensor_affine", wrap_fake_quantize_per_tensor_affine);
m.impl("fake_quantize_per_tensor_affine_cachemask", wrap_fake_quantize_per_tensor_affine_cachemask);
m.impl("fake_quantize_per_tensor_affine_cachemask_backward", wrap_fake_quantize_per_tensor_affine_cachemask_backward);
m.impl("_fake_quantize_learnable_per_tensor_affine", wrap__fake_quantize_learnable_per_tensor_affine);
m.impl("_fake_quantize_learnable_per_tensor_affine_backward", wrap__fake_quantize_learnable_per_tensor_affine_backward);
m.impl("fake_quantize_per_channel_affine", wrap_fake_quantize_per_channel_affine);
m.impl("fake_quantize_per_channel_affine_cachemask", wrap_fake_quantize_per_channel_affine_cachemask);
m.impl("fake_quantize_per_channel_affine_cachemask_backward", wrap_fake_quantize_per_channel_affine_cachemask_backward);
m.impl("_fake_quantize_learnable_per_channel_affine", wrap__fake_quantize_learnable_per_channel_affine);
m.impl("_fake_quantize_learnable_per_channel_affine_backward", wrap__fake_quantize_learnable_per_channel_affine_backward);
m.impl("_choose_qparams_per_tensor", wrap__choose_qparams_per_tensor);
m.impl("_saturate_weight_to_fp16", wrap__saturate_weight_to_fp16);
m.impl("choose_qparams_optimized", wrap_choose_qparams_optimized);
m.impl("to.dtype_layout", wrap_to_dtype_layout);
m.impl("to.device", wrap_to_device);
m.impl("to.dtype", wrap_to_dtype);
m.impl("to.other", wrap_to_other);
m.impl("meshgrid", wrap_meshgrid);
m.impl("cartesian_prod", wrap_cartesian_prod);
m.impl("combinations", wrap_combinations);
m.impl("item", wrap_item);
m.impl("result_type.Tensor", wrap_result_type_Tensor);
m.impl("result_type.Scalar", wrap_result_type_Scalar);
m.impl("result_type.Scalar_Tensor", wrap_result_type_Scalar_Tensor);
m.impl("result_type.Scalar_Scalar", wrap_result_type_Scalar_Scalar);
m.impl("can_cast", wrap_can_cast);
m.impl("promote_types", wrap_promote_types);
m.impl("_local_scalar_dense", wrap__local_scalar_dense);
m.impl("_thnn_fused_lstm_cell", wrap__thnn_fused_lstm_cell);
m.impl("_thnn_fused_lstm_cell_backward", wrap__thnn_fused_lstm_cell_backward);
m.impl("_thnn_differentiable_lstm_cell_backward", wrap__thnn_differentiable_lstm_cell_backward);
m.impl("_thnn_fused_gru_cell", wrap__thnn_fused_gru_cell);
m.impl("_thnn_fused_gru_cell_backward", wrap__thnn_fused_gru_cell_backward);
m.impl("_thnn_differentiable_gru_cell_backward", wrap__thnn_differentiable_gru_cell_backward);
m.impl("lstm.input", wrap_lstm_input);
m.impl("lstm.data", wrap_lstm_data);
m.impl("gru.input", wrap_gru_input);
m.impl("gru.data", wrap_gru_data);
m.impl("rnn_tanh.input", wrap_rnn_tanh_input);
m.impl("rnn_tanh.data", wrap_rnn_tanh_data);
m.impl("rnn_relu.input", wrap_rnn_relu_input);
m.impl("rnn_relu.data", wrap_rnn_relu_data);
m.impl("lstm_cell", wrap_lstm_cell);
m.impl("gru_cell", wrap_gru_cell);
m.impl("rnn_tanh_cell", wrap_rnn_tanh_cell);
m.impl("rnn_relu_cell", wrap_rnn_relu_cell);
m.impl("quantized_lstm_cell", wrap_quantized_lstm_cell);
m.impl("quantized_gru_cell", wrap_quantized_gru_cell);
m.impl("quantized_rnn_relu_cell", wrap_quantized_rnn_relu_cell);
m.impl("quantized_rnn_tanh_cell", wrap_quantized_rnn_tanh_cell);
m.impl("_pack_padded_sequence", wrap__pack_padded_sequence);
m.impl("_pack_padded_sequence_backward", wrap__pack_padded_sequence_backward);
m.impl("_pad_packed_sequence", wrap__pad_packed_sequence);
m.impl("set_.source_Storage", wrap_set__source_Storage);
m.impl("set_.source_Storage_storage_offset", wrap_set__source_Storage_storage_offset);
m.impl("set_.source_Tensor", wrap_set__source_Tensor);
m.impl("set_", wrap_set_);
m.impl("is_set_to", wrap_is_set_to);
m.impl("masked_fill_.Scalar", wrap_masked_fill__Scalar);
m.impl("masked_fill.Scalar", wrap_masked_fill_Scalar);
m.impl("masked_fill_.Tensor", wrap_masked_fill__Tensor);
m.impl("masked_fill.Tensor", wrap_masked_fill_Tensor);
m.impl("masked_scatter_", wrap_masked_scatter_);
m.impl("masked_scatter", wrap_masked_scatter);
m.impl("view", wrap_view);
m.impl("view.dtype", wrap_view_dtype);
m.impl("put_", wrap_put_);
m.impl("put", wrap_put);
m.impl("index_add_", wrap_index_add_);
m.impl("index_add_.alpha", wrap_index_add__alpha);
m.impl("index_add", wrap_index_add);
m.impl("index_add.alpha", wrap_index_add_alpha);
m.impl("index_add.dimname", wrap_index_add_dimname);
m.impl("index_fill_.int_Scalar", wrap_index_fill__int_Scalar);
m.impl("index_fill.int_Scalar", wrap_index_fill_int_Scalar);
m.impl("index_fill_.int_Tensor", wrap_index_fill__int_Tensor);
m.impl("index_fill.int_Tensor", wrap_index_fill_int_Tensor);
m.impl("index_fill_.Dimname_Scalar", wrap_index_fill__Dimname_Scalar);
m.impl("index_fill_.Dimname_Tensor", wrap_index_fill__Dimname_Tensor);
m.impl("index_fill.Dimname_Scalar", wrap_index_fill_Dimname_Scalar);
m.impl("index_fill.Dimname_Tensor", wrap_index_fill_Dimname_Tensor);
m.impl("scatter.src_out", wrap_scatter_src_out);
m.impl("scatter.value_out", wrap_scatter_value_out);
m.impl("scatter.reduce_out", wrap_scatter_reduce_out);
m.impl("scatter.value_reduce_out", wrap_scatter_value_reduce_out);
m.impl("scatter.dimname_src", wrap_scatter_dimname_src);
m.impl("scatter.dimname_value", wrap_scatter_dimname_value);
m.impl("scatter_add.out", wrap_scatter_add_out);
m.impl("scatter_add.dimname", wrap_scatter_add_dimname);
m.impl("eq_.Scalar", wrap_eq__Scalar);
m.impl("eq_.Tensor", wrap_eq__Tensor);
m.impl("bitwise_and.Tensor_out", wrap_bitwise_and_Tensor_out);
m.impl("bitwise_and.Scalar_out", wrap_bitwise_and_Scalar_out);
m.impl("bitwise_and.Scalar", wrap_bitwise_and_Scalar);
m.impl("bitwise_and.Tensor", wrap_bitwise_and_Tensor);
m.impl("bitwise_and_.Scalar", wrap_bitwise_and__Scalar);
m.impl("bitwise_and_.Tensor", wrap_bitwise_and__Tensor);
m.impl("__and__.Scalar", wrap___and___Scalar);
m.impl("__and__.Tensor", wrap___and___Tensor);
m.impl("__iand__.Scalar", wrap___iand___Scalar);
m.impl("__iand__.Tensor", wrap___iand___Tensor);
m.impl("bitwise_or.Tensor_out", wrap_bitwise_or_Tensor_out);
m.impl("bitwise_or.Scalar_out", wrap_bitwise_or_Scalar_out);
m.impl("bitwise_or.Scalar", wrap_bitwise_or_Scalar);
m.impl("bitwise_or.Tensor", wrap_bitwise_or_Tensor);
m.impl("bitwise_or_.Scalar", wrap_bitwise_or__Scalar);
m.impl("bitwise_or_.Tensor", wrap_bitwise_or__Tensor);
m.impl("__or__.Scalar", wrap___or___Scalar);
m.impl("__or__.Tensor", wrap___or___Tensor);
m.impl("__ior__.Scalar", wrap___ior___Scalar);
m.impl("__ior__.Tensor", wrap___ior___Tensor);
m.impl("bitwise_xor.Tensor_out", wrap_bitwise_xor_Tensor_out);
m.impl("bitwise_xor.Scalar_out", wrap_bitwise_xor_Scalar_out);
m.impl("bitwise_xor.Scalar", wrap_bitwise_xor_Scalar);
m.impl("bitwise_xor.Tensor", wrap_bitwise_xor_Tensor);
m.impl("bitwise_xor_.Scalar", wrap_bitwise_xor__Scalar);
m.impl("bitwise_xor_.Tensor", wrap_bitwise_xor__Tensor);
m.impl("__xor__.Scalar", wrap___xor___Scalar);
m.impl("__xor__.Tensor", wrap___xor___Tensor);
m.impl("__ixor__.Scalar", wrap___ixor___Scalar);
m.impl("__ixor__.Tensor", wrap___ixor___Tensor);
m.impl("__lshift__.Scalar", wrap___lshift___Scalar);
m.impl("__lshift__.Tensor", wrap___lshift___Tensor);
m.impl("__ilshift__.Scalar", wrap___ilshift___Scalar);
m.impl("__ilshift__.Tensor", wrap___ilshift___Tensor);
m.impl("__rshift__.Scalar", wrap___rshift___Scalar);
m.impl("__rshift__.Tensor", wrap___rshift___Tensor);
m.impl("__irshift__.Scalar", wrap___irshift___Scalar);
m.impl("__irshift__.Tensor", wrap___irshift___Tensor);
m.impl("tril_", wrap_tril_);
m.impl("triu_", wrap_triu_);
m.impl("lerp_.Scalar", wrap_lerp__Scalar);
m.impl("lerp_.Tensor", wrap_lerp__Tensor);
m.impl("fmod_.Scalar", wrap_fmod__Scalar);
m.impl("fmod_.Tensor", wrap_fmod__Tensor);
m.impl("addbmm_", wrap_addbmm_);
m.impl("addbmm.out", wrap_addbmm_out);
m.impl("addbmm", wrap_addbmm);
m.impl("addcdiv_", wrap_addcdiv_);
m.impl("random_.from", wrap_random__from);
m.impl("random_.to", wrap_random__to);
m.impl("random_", wrap_random_);
m.impl("uniform_", wrap_uniform_);
m.impl("cauchy_", wrap_cauchy_);
m.impl("log_normal_", wrap_log_normal_);
m.impl("exponential_", wrap_exponential_);
m.impl("geometric_", wrap_geometric_);
m.impl("diag.out", wrap_diag_out);
m.impl("diag", wrap_diag);
m.impl("diag_backward", wrap_diag_backward);
m.impl("cross.out", wrap_cross_out);
m.impl("cross", wrap_cross);
m.impl("triu.out", wrap_triu_out);
m.impl("triu", wrap_triu);
m.impl("tril.out", wrap_tril_out);
m.impl("tril", wrap_tril);
m.impl("tril_indices", wrap_tril_indices);
m.impl("triu_indices", wrap_triu_indices);
m.impl("trace", wrap_trace);
m.impl("trace_backward", wrap_trace_backward);
m.impl("ne.Scalar_out", wrap_ne_Scalar_out);
m.impl("ne.Scalar", wrap_ne_Scalar);
m.impl("ne.Tensor_out", wrap_ne_Tensor_out);
m.impl("ne.Tensor", wrap_ne_Tensor);
m.impl("ne_.Scalar", wrap_ne__Scalar);
m.impl("ne_.Tensor", wrap_ne__Tensor);
m.impl("not_equal.Scalar_out", wrap_not_equal_Scalar_out);
m.impl("not_equal.Scalar", wrap_not_equal_Scalar);
m.impl("not_equal.Tensor_out", wrap_not_equal_Tensor_out);
m.impl("not_equal.Tensor", wrap_not_equal_Tensor);
m.impl("not_equal_.Scalar", wrap_not_equal__Scalar);
m.impl("not_equal_.Tensor", wrap_not_equal__Tensor);
m.impl("eq.Scalar_out", wrap_eq_Scalar_out);
m.impl("eq.Scalar", wrap_eq_Scalar);
m.impl("eq.Tensor_out", wrap_eq_Tensor_out);
m.impl("eq.Tensor", wrap_eq_Tensor);
m.impl("ge.Scalar_out", wrap_ge_Scalar_out);
m.impl("ge.Scalar", wrap_ge_Scalar);
m.impl("ge.Tensor_out", wrap_ge_Tensor_out);
m.impl("ge.Tensor", wrap_ge_Tensor);
m.impl("ge_.Scalar", wrap_ge__Scalar);
m.impl("ge_.Tensor", wrap_ge__Tensor);
m.impl("greater_equal.Scalar_out", wrap_greater_equal_Scalar_out);
m.impl("greater_equal.Scalar", wrap_greater_equal_Scalar);
m.impl("greater_equal.Tensor_out", wrap_greater_equal_Tensor_out);
m.impl("greater_equal.Tensor", wrap_greater_equal_Tensor);
m.impl("greater_equal_.Scalar", wrap_greater_equal__Scalar);
m.impl("greater_equal_.Tensor", wrap_greater_equal__Tensor);
m.impl("le.Scalar_out", wrap_le_Scalar_out);
m.impl("le.Scalar", wrap_le_Scalar);
m.impl("le.Tensor_out", wrap_le_Tensor_out);
m.impl("le.Tensor", wrap_le_Tensor);
m.impl("le_.Scalar", wrap_le__Scalar);
m.impl("le_.Tensor", wrap_le__Tensor);
m.impl("less_equal.Scalar_out", wrap_less_equal_Scalar_out);
m.impl("less_equal.Scalar", wrap_less_equal_Scalar);
m.impl("less_equal.Tensor_out", wrap_less_equal_Tensor_out);
m.impl("less_equal.Tensor", wrap_less_equal_Tensor);
m.impl("less_equal_.Scalar", wrap_less_equal__Scalar);
m.impl("less_equal_.Tensor", wrap_less_equal__Tensor);
m.impl("gt.Scalar_out", wrap_gt_Scalar_out);
m.impl("gt.Scalar", wrap_gt_Scalar);
m.impl("gt.Tensor_out", wrap_gt_Tensor_out);
m.impl("gt.Tensor", wrap_gt_Tensor);
m.impl("gt_.Scalar", wrap_gt__Scalar);
m.impl("gt_.Tensor", wrap_gt__Tensor);
m.impl("greater.Scalar_out", wrap_greater_Scalar_out);
m.impl("greater.Scalar", wrap_greater_Scalar);
m.impl("greater.Tensor_out", wrap_greater_Tensor_out);
m.impl("greater.Tensor", wrap_greater_Tensor);
m.impl("greater_.Scalar", wrap_greater__Scalar);
m.impl("greater_.Tensor", wrap_greater__Tensor);
m.impl("lt.Scalar_out", wrap_lt_Scalar_out);
m.impl("lt.Scalar", wrap_lt_Scalar);
m.impl("lt.Tensor_out", wrap_lt_Tensor_out);
m.impl("lt.Tensor", wrap_lt_Tensor);
m.impl("lt_.Scalar", wrap_lt__Scalar);
m.impl("lt_.Tensor", wrap_lt__Tensor);
m.impl("less.Scalar_out", wrap_less_Scalar_out);
m.impl("less.Scalar", wrap_less_Scalar);
m.impl("less.Tensor_out", wrap_less_Tensor_out);
m.impl("less.Tensor", wrap_less_Tensor);
m.impl("less_.Scalar", wrap_less__Scalar);
m.impl("less_.Tensor", wrap_less__Tensor);
m.impl("take.out", wrap_take_out);
m.impl("take", wrap_take);
m.impl("take_along_dim.out", wrap_take_along_dim_out);
m.impl("take_along_dim", wrap_take_along_dim);
m.impl("index_select.out", wrap_index_select_out);
m.impl("index_select", wrap_index_select);
m.impl("index_select.dimname_out", wrap_index_select_dimname_out);
m.impl("index_select.dimname", wrap_index_select_dimname);
m.impl("index_select_backward", wrap_index_select_backward);
m.impl("masked_select.out", wrap_masked_select_out);
m.impl("masked_select", wrap_masked_select);
m.impl("masked_select_backward", wrap_masked_select_backward);
m.impl("nonzero.out", wrap_nonzero_out);
m.impl("nonzero", wrap_nonzero);
m.impl("nonzero_numpy", wrap_nonzero_numpy);
m.impl("gather.out", wrap_gather_out);
m.impl("gather", wrap_gather);
m.impl("gather_backward", wrap_gather_backward);
m.impl("gather.dimname_out", wrap_gather_dimname_out);
m.impl("gather.dimname", wrap_gather_dimname);
m.impl("_gather_sparse_backward", wrap__gather_sparse_backward);
m.impl("addcmul.out", wrap_addcmul_out);
m.impl("addcmul", wrap_addcmul);
m.impl("addcmul_", wrap_addcmul_);
m.impl("addcdiv.out", wrap_addcdiv_out);
m.impl("addcdiv", wrap_addcdiv);
m.impl("cross_entropy_loss", wrap_cross_entropy_loss);
m.impl("lstsq.X", wrap_lstsq_X);
m.impl("lstsq", wrap_lstsq);
m.impl("triangular_solve.X", wrap_triangular_solve_X);
m.impl("triangular_solve", wrap_triangular_solve);
m.impl("symeig.e", wrap_symeig_e);
m.impl("symeig", wrap_symeig);
m.impl("_symeig_helper", wrap__symeig_helper);
m.impl("eig.e", wrap_eig_e);
m.impl("eig", wrap_eig);
m.impl("svd.U", wrap_svd_U);
m.impl("svd", wrap_svd);
m.impl("_svd_helper", wrap__svd_helper);
m.impl("swapaxes", wrap_swapaxes);
m.impl("swapaxes_", wrap_swapaxes_);
m.impl("swapdims", wrap_swapdims);
m.impl("swapdims_", wrap_swapdims_);
m.impl("cholesky.out", wrap_cholesky_out);
m.impl("cholesky", wrap_cholesky);
m.impl("cholesky_solve.out", wrap_cholesky_solve_out);
m.impl("cholesky_solve", wrap_cholesky_solve);
m.impl("_cholesky_solve_helper", wrap__cholesky_solve_helper);
m.impl("solve", wrap_solve);
m.impl("solve.solution", wrap_solve_solution);
m.impl("_solve_helper", wrap__solve_helper);
m.impl("cholesky_inverse", wrap_cholesky_inverse);
m.impl("cholesky_inverse.out", wrap_cholesky_inverse_out);
m.impl("qr.Q", wrap_qr_Q);
m.impl("qr", wrap_qr);
m.impl("geqrf.a", wrap_geqrf_a);
m.impl("geqrf", wrap_geqrf);
m.impl("orgqr", wrap_orgqr);
m.impl("orgqr.out", wrap_orgqr_out);
m.impl("ormqr.out", wrap_ormqr_out);
m.impl("ormqr", wrap_ormqr);
m.impl("_lu_with_info", wrap__lu_with_info);
m.impl("lu_solve.out", wrap_lu_solve_out);
m.impl("lu_solve", wrap_lu_solve);
m.impl("lu_unpack", wrap_lu_unpack);
m.impl("lu_unpack.out", wrap_lu_unpack_out);
m.impl("multinomial.out", wrap_multinomial_out);
m.impl("multinomial", wrap_multinomial);
m.impl("lgamma.out", wrap_lgamma_out);
m.impl("digamma.out", wrap_digamma_out);
m.impl("polygamma.out", wrap_polygamma_out);
m.impl("polygamma_", wrap_polygamma_);
m.impl("erfinv.out", wrap_erfinv_out);
m.impl("i0.out", wrap_i0_out);
m.impl("sign", wrap_sign);
m.impl("sign_", wrap_sign_);
m.impl("sign.out", wrap_sign_out);
m.impl("signbit", wrap_signbit);
m.impl("signbit.out", wrap_signbit_out);
m.impl("dist", wrap_dist);
m.impl("atan2.out", wrap_atan2_out);
m.impl("lerp.Scalar_out", wrap_lerp_Scalar_out);
m.impl("lerp.Tensor_out", wrap_lerp_Tensor_out);
m.impl("lerp.Scalar", wrap_lerp_Scalar);
m.impl("lerp.Tensor", wrap_lerp_Tensor);
m.impl("histc.out", wrap_histc_out);
m.impl("histc", wrap_histc);
m.impl("fmod.Scalar_out", wrap_fmod_Scalar_out);
m.impl("fmod.Scalar", wrap_fmod_Scalar);
m.impl("fmod.Tensor_out", wrap_fmod_Tensor_out);
m.impl("fmod.Tensor", wrap_fmod_Tensor);
m.impl("hypot.out", wrap_hypot_out);
m.impl("hypot_", wrap_hypot_);
m.impl("igamma.out", wrap_igamma_out);
m.impl("igammac.out", wrap_igammac_out);
m.impl("nextafter.out", wrap_nextafter_out);
m.impl("nextafter_", wrap_nextafter_);
m.impl("remainder.Scalar_out", wrap_remainder_Scalar_out);
m.impl("remainder.Scalar", wrap_remainder_Scalar);
m.impl("remainder_.Scalar", wrap_remainder__Scalar);
m.impl("remainder.Tensor_out", wrap_remainder_Tensor_out);
m.impl("remainder.Scalar_Tensor", wrap_remainder_Scalar_Tensor);
m.impl("min", wrap_min);
m.impl("fmin.out", wrap_fmin_out);
m.impl("max", wrap_max);
m.impl("fmax.out", wrap_fmax_out);
m.impl("maximum.out", wrap_maximum_out);
m.impl("max.other", wrap_max_other);
m.impl("max.out", wrap_max_out);
m.impl("minimum.out", wrap_minimum_out);
m.impl("min.out", wrap_min_out);
m.impl("min.other", wrap_min_other);
m.impl("quantile.scalar_out", wrap_quantile_scalar_out);
m.impl("quantile.scalar", wrap_quantile_scalar);
m.impl("quantile.out", wrap_quantile_out);
m.impl("quantile", wrap_quantile);
m.impl("nanquantile.scalar_out", wrap_nanquantile_scalar_out);
m.impl("nanquantile.scalar", wrap_nanquantile_scalar);
m.impl("nanquantile.out", wrap_nanquantile_out);
m.impl("nanquantile", wrap_nanquantile);
m.impl("quantile.new_scalar_out", wrap_quantile_new_scalar_out);
m.impl("quantile.new_scalar", wrap_quantile_new_scalar);
m.impl("quantile.new_out", wrap_quantile_new_out);
m.impl("quantile.new", wrap_quantile_new);
m.impl("nanquantile.new_scalar_out", wrap_nanquantile_new_scalar_out);
m.impl("nanquantile.new_scalar", wrap_nanquantile_new_scalar);
m.impl("nanquantile.new_out", wrap_nanquantile_new_out);
m.impl("nanquantile.new", wrap_nanquantile_new);
m.impl("sort.values", wrap_sort_values);
m.impl("sort.values_stable", wrap_sort_values_stable);
m.impl("sort", wrap_sort);
m.impl("sort.stable", wrap_sort_stable);
m.impl("sort.dimname_values", wrap_sort_dimname_values);
m.impl("sort.dimname_values_stable", wrap_sort_dimname_values_stable);
m.impl("sort.dimname", wrap_sort_dimname);
m.impl("sort.dimname_stable", wrap_sort_dimname_stable);
m.impl("msort.out", wrap_msort_out);
m.impl("msort", wrap_msort);
m.impl("argsort", wrap_argsort);
m.impl("argsort.dimname", wrap_argsort_dimname);
m.impl("topk.values", wrap_topk_values);
m.impl("topk", wrap_topk);
m.impl("all", wrap_all);
m.impl("any", wrap_any);
m.impl("renorm.out", wrap_renorm_out);
m.impl("unfold", wrap_unfold);
m.impl("unfold_backward", wrap_unfold_backward);
m.impl("equal", wrap_equal);
m.impl("pow.Tensor_Tensor_out", wrap_pow_Tensor_Tensor_out);
m.impl("pow.Scalar_out", wrap_pow_Scalar_out);
m.impl("pow.Tensor_Scalar_out", wrap_pow_Tensor_Scalar_out);
m.impl("pow.Tensor_Scalar", wrap_pow_Tensor_Scalar);
m.impl("float_power.Tensor_Tensor_out", wrap_float_power_Tensor_Tensor_out);
m.impl("float_power.Tensor_Tensor", wrap_float_power_Tensor_Tensor);
m.impl("float_power.Scalar_out", wrap_float_power_Scalar_out);
m.impl("float_power.Scalar", wrap_float_power_Scalar);
m.impl("float_power.Tensor_Scalar_out", wrap_float_power_Tensor_Scalar_out);
m.impl("float_power.Tensor_Scalar", wrap_float_power_Tensor_Scalar);
m.impl("float_power_.Scalar", wrap_float_power__Scalar);
m.impl("float_power_.Tensor", wrap_float_power__Tensor);
m.impl("normal_", wrap_normal_);
m.impl("normal.Tensor_float_out", wrap_normal_Tensor_float_out);
m.impl("normal.Tensor_float", wrap_normal_Tensor_float);
m.impl("normal.float_Tensor_out", wrap_normal_float_Tensor_out);
m.impl("normal.float_Tensor", wrap_normal_float_Tensor);
m.impl("normal.Tensor_Tensor_out", wrap_normal_Tensor_Tensor_out);
m.impl("normal.Tensor_Tensor", wrap_normal_Tensor_Tensor);
m.impl("normal.float_float", wrap_normal_float_float);
m.impl("normal.float_float_out", wrap_normal_float_float_out);
m.impl("alias", wrap_alias);
m.impl("_index_copy_", wrap__index_copy_);
m.impl("_cumsum", wrap__cumsum);
m.impl("_cumsum.out", wrap__cumsum_out);
m.impl("_cumprod", wrap__cumprod);
m.impl("_cumprod.out", wrap__cumprod_out);
m.impl("_amp_foreach_non_finite_check_and_unscale_", wrap__amp_foreach_non_finite_check_and_unscale_);
m.impl("_amp_update_scale_", wrap__amp_update_scale_);
m.impl("_cat", wrap__cat);
m.impl("_cat.out", wrap__cat_out);
m.impl("_foreach_add.Scalar", wrap__foreach_add_Scalar);
m.impl("_foreach_add_.Scalar", wrap__foreach_add__Scalar);
m.impl("_foreach_sub.Scalar", wrap__foreach_sub_Scalar);
m.impl("_foreach_sub_.Scalar", wrap__foreach_sub__Scalar);
m.impl("_foreach_mul.Scalar", wrap__foreach_mul_Scalar);
m.impl("_foreach_mul_.Scalar", wrap__foreach_mul__Scalar);
m.impl("_foreach_div.Scalar", wrap__foreach_div_Scalar);
m.impl("_foreach_div_.Scalar", wrap__foreach_div__Scalar);
m.impl("_foreach_add.List", wrap__foreach_add_List);
m.impl("_foreach_add_.List", wrap__foreach_add__List);
m.impl("_foreach_sub.List", wrap__foreach_sub_List);
m.impl("_foreach_sub_.List", wrap__foreach_sub__List);
m.impl("_foreach_mul.List", wrap__foreach_mul_List);
m.impl("_foreach_mul_.List", wrap__foreach_mul__List);
m.impl("_foreach_div.List", wrap__foreach_div_List);
m.impl("_foreach_div_.List", wrap__foreach_div__List);
m.impl("_foreach_add.ScalarList", wrap__foreach_add_ScalarList);
m.impl("_foreach_add_.ScalarList", wrap__foreach_add__ScalarList);
m.impl("_foreach_sub.ScalarList", wrap__foreach_sub_ScalarList);
m.impl("_foreach_sub_.ScalarList", wrap__foreach_sub__ScalarList);
m.impl("_foreach_div.ScalarList", wrap__foreach_div_ScalarList);
m.impl("_foreach_div_.ScalarList", wrap__foreach_div__ScalarList);
m.impl("_foreach_mul.ScalarList", wrap__foreach_mul_ScalarList);
m.impl("_foreach_mul_.ScalarList", wrap__foreach_mul__ScalarList);
m.impl("_foreach_exp", wrap__foreach_exp);
m.impl("_foreach_zero_", wrap__foreach_zero_);
m.impl("_foreach_exp_", wrap__foreach_exp_);
m.impl("_foreach_sqrt", wrap__foreach_sqrt);
m.impl("_foreach_sqrt_", wrap__foreach_sqrt_);
m.impl("_foreach_abs", wrap__foreach_abs);
m.impl("_foreach_abs_", wrap__foreach_abs_);
m.impl("_foreach_acos", wrap__foreach_acos);
m.impl("_foreach_acos_", wrap__foreach_acos_);
m.impl("_foreach_asin", wrap__foreach_asin);
m.impl("_foreach_asin_", wrap__foreach_asin_);
m.impl("_foreach_atan", wrap__foreach_atan);
m.impl("_foreach_atan_", wrap__foreach_atan_);
m.impl("_foreach_ceil", wrap__foreach_ceil);
m.impl("_foreach_ceil_", wrap__foreach_ceil_);
m.impl("_foreach_cos", wrap__foreach_cos);
m.impl("_foreach_cos_", wrap__foreach_cos_);
m.impl("_foreach_cosh", wrap__foreach_cosh);
m.impl("_foreach_cosh_", wrap__foreach_cosh_);
m.impl("_foreach_erf", wrap__foreach_erf);
m.impl("_foreach_erf_", wrap__foreach_erf_);
m.impl("_foreach_erfc", wrap__foreach_erfc);
m.impl("_foreach_erfc_", wrap__foreach_erfc_);
m.impl("_foreach_expm1", wrap__foreach_expm1);
m.impl("_foreach_expm1_", wrap__foreach_expm1_);
m.impl("_foreach_floor", wrap__foreach_floor);
m.impl("_foreach_floor_", wrap__foreach_floor_);
m.impl("_foreach_log", wrap__foreach_log);
m.impl("_foreach_log_", wrap__foreach_log_);
m.impl("_foreach_log10", wrap__foreach_log10);
m.impl("_foreach_log10_", wrap__foreach_log10_);
m.impl("_foreach_log1p", wrap__foreach_log1p);
m.impl("_foreach_log1p_", wrap__foreach_log1p_);
m.impl("_foreach_log2", wrap__foreach_log2);
m.impl("_foreach_log2_", wrap__foreach_log2_);
m.impl("_foreach_neg", wrap__foreach_neg);
m.impl("_foreach_neg_", wrap__foreach_neg_);
m.impl("_foreach_tan", wrap__foreach_tan);
m.impl("_foreach_tan_", wrap__foreach_tan_);
m.impl("_foreach_tanh", wrap__foreach_tanh);
m.impl("_foreach_tanh_", wrap__foreach_tanh_);
m.impl("_foreach_sin", wrap__foreach_sin);
m.impl("_foreach_sin_", wrap__foreach_sin_);
m.impl("_foreach_sinh", wrap__foreach_sinh);
m.impl("_foreach_sinh_", wrap__foreach_sinh_);
m.impl("_foreach_round", wrap__foreach_round);
m.impl("_foreach_round_", wrap__foreach_round_);
m.impl("_foreach_lgamma", wrap__foreach_lgamma);
m.impl("_foreach_lgamma_", wrap__foreach_lgamma_);
m.impl("_foreach_frac", wrap__foreach_frac);
m.impl("_foreach_frac_", wrap__foreach_frac_);
m.impl("_foreach_reciprocal", wrap__foreach_reciprocal);
m.impl("_foreach_reciprocal_", wrap__foreach_reciprocal_);
m.impl("_foreach_sigmoid", wrap__foreach_sigmoid);
m.impl("_foreach_sigmoid_", wrap__foreach_sigmoid_);
m.impl("_foreach_trunc", wrap__foreach_trunc);
m.impl("_foreach_trunc_", wrap__foreach_trunc_);
m.impl("_foreach_addcdiv_.Scalar", wrap__foreach_addcdiv__Scalar);
m.impl("_foreach_addcmul_.Scalar", wrap__foreach_addcmul__Scalar);
m.impl("_foreach_addcdiv_.ScalarList", wrap__foreach_addcdiv__ScalarList);
m.impl("_foreach_addcmul_.ScalarList", wrap__foreach_addcmul__ScalarList);
m.impl("_foreach_addcdiv.Scalar", wrap__foreach_addcdiv_Scalar);
m.impl("_foreach_addcmul.Scalar", wrap__foreach_addcmul_Scalar);
m.impl("_foreach_addcdiv.ScalarList", wrap__foreach_addcdiv_ScalarList);
m.impl("_foreach_addcmul.ScalarList", wrap__foreach_addcmul_ScalarList);
m.impl("_foreach_maximum.List", wrap__foreach_maximum_List);
m.impl("_foreach_minimum.List", wrap__foreach_minimum_List);
m.impl("bucketize.Tensor", wrap_bucketize_Tensor);
m.impl("bucketize.Tensor_out", wrap_bucketize_Tensor_out);
m.impl("bucketize.Scalar", wrap_bucketize_Scalar);
m.impl("searchsorted.Tensor", wrap_searchsorted_Tensor);
m.impl("searchsorted.Tensor_out", wrap_searchsorted_Tensor_out);
m.impl("searchsorted.Scalar", wrap_searchsorted_Scalar);
m.impl("mse_loss.out", wrap_mse_loss_out);
m.impl("mse_loss", wrap_mse_loss);
m.impl("mse_loss_backward.grad_input", wrap_mse_loss_backward_grad_input);
m.impl("mse_loss_backward", wrap_mse_loss_backward);
m.impl("l1_loss.out", wrap_l1_loss_out);
m.impl("l1_loss", wrap_l1_loss);
m.impl("l1_loss_backward.grad_input", wrap_l1_loss_backward_grad_input);
m.impl("l1_loss_backward", wrap_l1_loss_backward);
m.impl("multi_margin_loss.out", wrap_multi_margin_loss_out);
m.impl("multi_margin_loss", wrap_multi_margin_loss);
m.impl("multi_margin_loss_backward.grad_input", wrap_multi_margin_loss_backward_grad_input);
m.impl("multi_margin_loss_backward", wrap_multi_margin_loss_backward);
m.impl("multilabel_margin_loss.out", wrap_multilabel_margin_loss_out);
m.impl("multilabel_margin_loss", wrap_multilabel_margin_loss);
m.impl("multilabel_margin_loss_forward.output", wrap_multilabel_margin_loss_forward_output);
m.impl("multilabel_margin_loss_forward", wrap_multilabel_margin_loss_forward);
m.impl("multilabel_margin_loss_backward.grad_input", wrap_multilabel_margin_loss_backward_grad_input);
m.impl("multilabel_margin_loss_backward", wrap_multilabel_margin_loss_backward);
m.impl("nll_loss.out", wrap_nll_loss_out);
m.impl("nll_loss_nd", wrap_nll_loss_nd);
m.impl("nll_loss", wrap_nll_loss);
m.impl("nll_loss_forward.output", wrap_nll_loss_forward_output);
m.impl("nll_loss_forward", wrap_nll_loss_forward);
m.impl("nll_loss_backward.grad_input", wrap_nll_loss_backward_grad_input);
m.impl("nll_loss_backward", wrap_nll_loss_backward);
m.impl("nll_loss2d.out", wrap_nll_loss2d_out);
m.impl("nll_loss2d", wrap_nll_loss2d);
m.impl("nll_loss2d_forward.output", wrap_nll_loss2d_forward_output);
m.impl("nll_loss2d_forward", wrap_nll_loss2d_forward);
m.impl("nll_loss2d_backward.grad_input", wrap_nll_loss2d_backward_grad_input);
m.impl("nll_loss2d_backward", wrap_nll_loss2d_backward);
m.impl("smooth_l1_loss.out", wrap_smooth_l1_loss_out);
m.impl("smooth_l1_loss", wrap_smooth_l1_loss);
m.impl("smooth_l1_loss_backward.grad_input", wrap_smooth_l1_loss_backward_grad_input);
m.impl("smooth_l1_loss_backward", wrap_smooth_l1_loss_backward);
m.impl("huber_loss.out", wrap_huber_loss_out);
m.impl("huber_loss", wrap_huber_loss);
m.impl("huber_loss_backward.out", wrap_huber_loss_backward_out);
m.impl("huber_loss_backward", wrap_huber_loss_backward);
m.impl("soft_margin_loss.out", wrap_soft_margin_loss_out);
m.impl("soft_margin_loss", wrap_soft_margin_loss);
m.impl("soft_margin_loss_backward.grad_input", wrap_soft_margin_loss_backward_grad_input);
m.impl("soft_margin_loss_backward", wrap_soft_margin_loss_backward);
m.impl("elu.out", wrap_elu_out);
m.impl("elu_backward.grad_input", wrap_elu_backward_grad_input);
m.impl("elu_", wrap_elu_);
m.impl("glu.out", wrap_glu_out);
m.impl("glu", wrap_glu);
m.impl("glu_backward.grad_input", wrap_glu_backward_grad_input);
m.impl("glu_backward", wrap_glu_backward);
m.impl("hardsigmoid.out", wrap_hardsigmoid_out);
m.impl("hardsigmoid", wrap_hardsigmoid);
m.impl("hardsigmoid_backward.grad_input", wrap_hardsigmoid_backward_grad_input);
m.impl("hardtanh.out", wrap_hardtanh_out);
m.impl("hardtanh", wrap_hardtanh);
m.impl("hardtanh_backward.grad_input", wrap_hardtanh_backward_grad_input);
m.impl("hardtanh_backward", wrap_hardtanh_backward);
m.impl("hardtanh_", wrap_hardtanh_);
m.impl("hardswish.out", wrap_hardswish_out);
m.impl("hardswish", wrap_hardswish);
m.impl("hardswish_", wrap_hardswish_);
m.impl("hardswish_backward", wrap_hardswish_backward);
m.impl("leaky_relu.out", wrap_leaky_relu_out);
m.impl("leaky_relu", wrap_leaky_relu);
m.impl("leaky_relu_backward.grad_input", wrap_leaky_relu_backward_grad_input);
m.impl("leaky_relu_", wrap_leaky_relu_);
m.impl("log_sigmoid.out", wrap_log_sigmoid_out);
m.impl("log_sigmoid", wrap_log_sigmoid);
m.impl("log_sigmoid_forward.output", wrap_log_sigmoid_forward_output);
m.impl("log_sigmoid_forward", wrap_log_sigmoid_forward);
m.impl("log_sigmoid_backward.grad_input", wrap_log_sigmoid_backward_grad_input);
m.impl("log_sigmoid_backward", wrap_log_sigmoid_backward);
m.impl("rrelu_with_noise.out", wrap_rrelu_with_noise_out);
m.impl("rrelu_with_noise", wrap_rrelu_with_noise);
m.impl("rrelu_with_noise_backward", wrap_rrelu_with_noise_backward);
m.impl("rrelu_with_noise_", wrap_rrelu_with_noise_);
m.impl("softplus.out", wrap_softplus_out);
m.impl("softplus_backward.grad_input", wrap_softplus_backward_grad_input);
m.impl("softshrink.out", wrap_softshrink_out);
m.impl("softshrink_backward.grad_input", wrap_softshrink_backward_grad_input);
m.impl("adaptive_avg_pool2d.out", wrap_adaptive_avg_pool2d_out);
m.impl("adaptive_avg_pool2d", wrap_adaptive_avg_pool2d);
m.impl("mkldnn_adaptive_avg_pool2d", wrap_mkldnn_adaptive_avg_pool2d);
m.impl("mkldnn_adaptive_avg_pool2d_backward", wrap_mkldnn_adaptive_avg_pool2d_backward);
m.impl("_adaptive_avg_pool2d", wrap__adaptive_avg_pool2d);
m.impl("_adaptive_avg_pool2d_backward", wrap__adaptive_avg_pool2d_backward);
m.impl("adaptive_avg_pool3d.out", wrap_adaptive_avg_pool3d_out);
m.impl("adaptive_avg_pool3d", wrap_adaptive_avg_pool3d);
m.impl("_adaptive_avg_pool3d", wrap__adaptive_avg_pool3d);
m.impl("adaptive_avg_pool3d_backward.grad_input", wrap_adaptive_avg_pool3d_backward_grad_input);
m.impl("_adaptive_avg_pool3d_backward", wrap__adaptive_avg_pool3d_backward);
m.impl("adaptive_max_pool2d.out", wrap_adaptive_max_pool2d_out);
m.impl("adaptive_max_pool2d_backward.grad_input", wrap_adaptive_max_pool2d_backward_grad_input);
m.impl("adaptive_max_pool3d.out", wrap_adaptive_max_pool3d_out);
m.impl("adaptive_max_pool3d_backward.grad_input", wrap_adaptive_max_pool3d_backward_grad_input);
m.impl("avg_pool2d.out", wrap_avg_pool2d_out);
m.impl("avg_pool2d", wrap_avg_pool2d);
m.impl("avg_pool2d_backward.grad_input", wrap_avg_pool2d_backward_grad_input);
m.impl("avg_pool2d_backward", wrap_avg_pool2d_backward);
m.impl("avg_pool3d.out", wrap_avg_pool3d_out);
m.impl("avg_pool3d", wrap_avg_pool3d);
m.impl("avg_pool3d_backward.grad_input", wrap_avg_pool3d_backward_grad_input);
m.impl("avg_pool3d_backward", wrap_avg_pool3d_backward);
m.impl("fractional_max_pool2d.output", wrap_fractional_max_pool2d_output);
m.impl("fractional_max_pool2d_backward.grad_input", wrap_fractional_max_pool2d_backward_grad_input);
m.impl("fractional_max_pool2d_backward", wrap_fractional_max_pool2d_backward);
m.impl("fractional_max_pool3d.output", wrap_fractional_max_pool3d_output);
m.impl("fractional_max_pool3d", wrap_fractional_max_pool3d);
m.impl("fractional_max_pool3d_backward.grad_input", wrap_fractional_max_pool3d_backward_grad_input);
m.impl("fractional_max_pool3d_backward", wrap_fractional_max_pool3d_backward);
m.impl("max_pool2d_with_indices.out", wrap_max_pool2d_with_indices_out);
m.impl("max_pool2d_with_indices_backward.grad_input", wrap_max_pool2d_with_indices_backward_grad_input);
m.impl("max_pool3d_with_indices.out", wrap_max_pool3d_with_indices_out);
m.impl("max_pool3d_with_indices", wrap_max_pool3d_with_indices);
m.impl("max_pool3d_with_indices_backward.grad_input", wrap_max_pool3d_with_indices_backward_grad_input);
m.impl("max_pool3d_with_indices_backward", wrap_max_pool3d_with_indices_backward);
m.impl("max_unpool2d.out", wrap_max_unpool2d_out);
m.impl("max_unpool2d", wrap_max_unpool2d);
m.impl("max_unpool2d_backward.grad_input", wrap_max_unpool2d_backward_grad_input);
m.impl("max_unpool2d_backward", wrap_max_unpool2d_backward);
m.impl("max_unpool3d.out", wrap_max_unpool3d_out);
m.impl("max_unpool3d", wrap_max_unpool3d);
m.impl("max_unpool3d_backward.grad_input", wrap_max_unpool3d_backward_grad_input);
m.impl("max_unpool3d_backward", wrap_max_unpool3d_backward);
m.impl("reflection_pad1d.out", wrap_reflection_pad1d_out);
m.impl("reflection_pad1d", wrap_reflection_pad1d);
m.impl("reflection_pad1d_backward.grad_input", wrap_reflection_pad1d_backward_grad_input);
m.impl("reflection_pad2d.out", wrap_reflection_pad2d_out);
m.impl("reflection_pad2d", wrap_reflection_pad2d);
m.impl("reflection_pad2d_backward.grad_input", wrap_reflection_pad2d_backward_grad_input);
m.impl("reflection_pad2d_backward", wrap_reflection_pad2d_backward);
m.impl("replication_pad1d.out", wrap_replication_pad1d_out);
m.impl("replication_pad1d_backward.grad_input", wrap_replication_pad1d_backward_grad_input);
m.impl("replication_pad2d.out", wrap_replication_pad2d_out);
m.impl("replication_pad2d_backward.grad_input", wrap_replication_pad2d_backward_grad_input);
m.impl("replication_pad2d_backward", wrap_replication_pad2d_backward);
m.impl("replication_pad3d.out", wrap_replication_pad3d_out);
m.impl("replication_pad3d_backward.grad_input", wrap_replication_pad3d_backward_grad_input);
m.impl("replication_pad3d_backward", wrap_replication_pad3d_backward);
m.impl("upsample_linear1d.vec", wrap_upsample_linear1d_vec);
m.impl("upsample_linear1d_backward.vec", wrap_upsample_linear1d_backward_vec);
m.impl("upsample_bilinear2d.vec", wrap_upsample_bilinear2d_vec);
m.impl("upsample_bilinear2d_backward.vec", wrap_upsample_bilinear2d_backward_vec);
m.impl("upsample_trilinear3d.vec", wrap_upsample_trilinear3d_vec);
m.impl("upsample_trilinear3d_backward.vec", wrap_upsample_trilinear3d_backward_vec);
m.impl("upsample_bicubic2d.vec", wrap_upsample_bicubic2d_vec);
m.impl("upsample_bicubic2d_backward.vec", wrap_upsample_bicubic2d_backward_vec);
m.impl("upsample_nearest1d.vec", wrap_upsample_nearest1d_vec);
m.impl("upsample_nearest1d_backward.vec", wrap_upsample_nearest1d_backward_vec);
m.impl("upsample_nearest2d.vec", wrap_upsample_nearest2d_vec);
m.impl("upsample_nearest2d_backward.vec", wrap_upsample_nearest2d_backward_vec);
m.impl("upsample_nearest3d.vec", wrap_upsample_nearest3d_vec);
m.impl("upsample_nearest3d_backward.vec", wrap_upsample_nearest3d_backward_vec);
m.impl("upsample_linear1d.out", wrap_upsample_linear1d_out);
m.impl("upsample_linear1d_backward.grad_input", wrap_upsample_linear1d_backward_grad_input);
m.impl("upsample_bilinear2d.out", wrap_upsample_bilinear2d_out);
m.impl("upsample_bilinear2d", wrap_upsample_bilinear2d);
m.impl("upsample_bilinear2d_backward.grad_input", wrap_upsample_bilinear2d_backward_grad_input);
m.impl("upsample_bicubic2d.out", wrap_upsample_bicubic2d_out);
m.impl("upsample_bicubic2d_backward.grad_input", wrap_upsample_bicubic2d_backward_grad_input);
m.impl("upsample_trilinear3d.out", wrap_upsample_trilinear3d_out);
m.impl("upsample_trilinear3d_backward.grad_input", wrap_upsample_trilinear3d_backward_grad_input);
m.impl("upsample_nearest1d.out", wrap_upsample_nearest1d_out);
m.impl("upsample_nearest1d_backward.grad_input", wrap_upsample_nearest1d_backward_grad_input);
m.impl("upsample_nearest2d.out", wrap_upsample_nearest2d_out);
m.impl("upsample_nearest2d", wrap_upsample_nearest2d);
m.impl("upsample_nearest2d_backward.grad_input", wrap_upsample_nearest2d_backward_grad_input);
m.impl("upsample_nearest3d.out", wrap_upsample_nearest3d_out);
m.impl("upsample_nearest3d", wrap_upsample_nearest3d);
m.impl("upsample_nearest3d_backward.grad_input", wrap_upsample_nearest3d_backward_grad_input);
m.impl("sigmoid_backward.grad_input", wrap_sigmoid_backward_grad_input);
m.impl("sigmoid_backward", wrap_sigmoid_backward);
m.impl("logit_backward.grad_input", wrap_logit_backward_grad_input);
m.impl("logit_backward", wrap_logit_backward);
m.impl("tanh_backward.grad_input", wrap_tanh_backward_grad_input);
m.impl("tanh_backward", wrap_tanh_backward);
m.impl("slow_conv_transpose2d.out", wrap_slow_conv_transpose2d_out);
m.impl("slow_conv_transpose2d", wrap_slow_conv_transpose2d);
m.impl("slow_conv_transpose2d_backward.grad_output", wrap_slow_conv_transpose2d_backward_grad_output);
m.impl("slow_conv_transpose2d_backward.output_mask", wrap_slow_conv_transpose2d_backward_output_mask);
m.impl("slow_conv_transpose3d.out", wrap_slow_conv_transpose3d_out);
m.impl("slow_conv_transpose3d", wrap_slow_conv_transpose3d);
m.impl("slow_conv_transpose3d_backward.grad_output", wrap_slow_conv_transpose3d_backward_grad_output);
m.impl("slow_conv_transpose3d_backward.output_mask", wrap_slow_conv_transpose3d_backward_output_mask);
m.impl("thnn_conv2d.out", wrap_thnn_conv2d_out);
m.impl("thnn_conv2d", wrap_thnn_conv2d);
m.impl("thnn_conv2d_forward.output", wrap_thnn_conv2d_forward_output);
m.impl("thnn_conv2d_forward", wrap_thnn_conv2d_forward);
m.impl("thnn_conv2d_backward.grad_input", wrap_thnn_conv2d_backward_grad_input);
m.impl("thnn_conv2d_backward.output_mask", wrap_thnn_conv2d_backward_output_mask);
m.impl("thnn_conv_depthwise2d.out", wrap_thnn_conv_depthwise2d_out);
m.impl("thnn_conv_depthwise2d", wrap_thnn_conv_depthwise2d);
m.impl("thnn_conv_depthwise2d_forward.out", wrap_thnn_conv_depthwise2d_forward_out);
m.impl("thnn_conv_depthwise2d_forward", wrap_thnn_conv_depthwise2d_forward);
m.impl("thnn_conv_depthwise2d_backward.grad_input", wrap_thnn_conv_depthwise2d_backward_grad_input);
m.impl("thnn_conv_depthwise2d_backward.output_mask", wrap_thnn_conv_depthwise2d_backward_output_mask);
m.impl("conv_depthwise3d", wrap_conv_depthwise3d);
m.impl("conv_depthwise3d_backward.grad_input", wrap_conv_depthwise3d_backward_grad_input);
m.impl("conv_depthwise3d_backward.output_mask", wrap_conv_depthwise3d_backward_output_mask);
m.impl("slow_conv3d.out", wrap_slow_conv3d_out);
m.impl("slow_conv3d", wrap_slow_conv3d);
m.impl("slow_conv3d_forward.output", wrap_slow_conv3d_forward_output);
m.impl("slow_conv3d_forward", wrap_slow_conv3d_forward);
m.impl("slow_conv3d_backward.grad_input", wrap_slow_conv3d_backward_grad_input);
m.impl("slow_conv3d_backward.output_mask", wrap_slow_conv3d_backward_output_mask);
m.impl("slow_conv_dilated2d", wrap_slow_conv_dilated2d);
m.impl("slow_conv_dilated2d_backward", wrap_slow_conv_dilated2d_backward);
m.impl("slow_conv_dilated3d", wrap_slow_conv_dilated3d);
m.impl("slow_conv_dilated3d_backward", wrap_slow_conv_dilated3d_backward);
m.impl("col2im.out", wrap_col2im_out);
m.impl("col2im", wrap_col2im);
m.impl("col2im_backward.grad_input", wrap_col2im_backward_grad_input);
m.impl("col2im_backward", wrap_col2im_backward);
m.impl("column_stack", wrap_column_stack);
m.impl("column_stack.out", wrap_column_stack_out);
m.impl("im2col.out", wrap_im2col_out);
m.impl("im2col", wrap_im2col);
m.impl("im2col_backward.grad_input", wrap_im2col_backward_grad_input);
m.impl("im2col_backward", wrap_im2col_backward);
m.impl("isfinite", wrap_isfinite);
m.impl("isinf", wrap_isinf);
m.impl("record_stream", wrap_record_stream);
m.impl("isposinf", wrap_isposinf);
m.impl("isposinf.out", wrap_isposinf_out);
m.impl("isneginf", wrap_isneginf);
m.impl("isneginf.out", wrap_isneginf_out);
m.impl("_add_batch_dim", wrap__add_batch_dim);
m.impl("_remove_batch_dim", wrap__remove_batch_dim);
m.impl("special_entr.out", wrap_special_entr_out);
m.impl("special_expm1", wrap_special_expm1);
m.impl("special_expm1.out", wrap_special_expm1_out);
m.impl("special_exp2", wrap_special_exp2);
m.impl("special_exp2.out", wrap_special_exp2_out);
m.impl("special_psi", wrap_special_psi);
m.impl("special_psi.out", wrap_special_psi_out);
m.impl("special_digamma", wrap_special_digamma);
m.impl("special_digamma.out", wrap_special_digamma_out);
m.impl("special_gammaln", wrap_special_gammaln);
m.impl("special_gammaln.out", wrap_special_gammaln_out);
m.impl("special_erf", wrap_special_erf);
m.impl("special_erf.out", wrap_special_erf_out);
m.impl("special_erfc", wrap_special_erfc);
m.impl("special_erfc.out", wrap_special_erfc_out);
m.impl("special_erfinv", wrap_special_erfinv);
m.impl("special_erfinv.out", wrap_special_erfinv_out);
m.impl("special_ndtr", wrap_special_ndtr);
m.impl("special_ndtr.out", wrap_special_ndtr_out);
m.impl("special_xlog1py.self_scalar", wrap_special_xlog1py_self_scalar);
m.impl("special_xlog1py.other_scalar", wrap_special_xlog1py_other_scalar);
m.impl("special_xlog1py.out", wrap_special_xlog1py_out);
m.impl("special_xlog1py.self_scalar_out", wrap_special_xlog1py_self_scalar_out);
m.impl("special_xlog1py.other_scalar_out", wrap_special_xlog1py_other_scalar_out);
m.impl("special_i0", wrap_special_i0);
m.impl("special_i0.out", wrap_special_i0_out);
m.impl("special_i0e.out", wrap_special_i0e_out);
m.impl("special_i1.out", wrap_special_i1_out);
m.impl("special_i1e.out", wrap_special_i1e_out);
m.impl("special_logit", wrap_special_logit);
m.impl("special_logit.out", wrap_special_logit_out);
m.impl("special_expit", wrap_special_expit);
m.impl("special_expit.out", wrap_special_expit_out);
m.impl("fft_fft", wrap_fft_fft);
m.impl("fft_fft.out", wrap_fft_fft_out);
m.impl("fft_ifft", wrap_fft_ifft);
m.impl("fft_ifft.out", wrap_fft_ifft_out);
m.impl("fft_rfft", wrap_fft_rfft);
m.impl("fft_rfft.out", wrap_fft_rfft_out);
m.impl("fft_irfft", wrap_fft_irfft);
m.impl("fft_irfft.out", wrap_fft_irfft_out);
m.impl("fft_hfft", wrap_fft_hfft);
m.impl("fft_hfft.out", wrap_fft_hfft_out);
m.impl("fft_ihfft", wrap_fft_ihfft);
m.impl("fft_ihfft.out", wrap_fft_ihfft_out);
m.impl("fft_fft2", wrap_fft_fft2);
m.impl("fft_fft2.out", wrap_fft_fft2_out);
m.impl("fft_ifft2", wrap_fft_ifft2);
m.impl("fft_ifft2.out", wrap_fft_ifft2_out);
m.impl("fft_rfft2", wrap_fft_rfft2);
m.impl("fft_rfft2.out", wrap_fft_rfft2_out);
m.impl("fft_irfft2", wrap_fft_irfft2);
m.impl("fft_irfft2.out", wrap_fft_irfft2_out);
m.impl("fft_fftn", wrap_fft_fftn);
m.impl("fft_fftn.out", wrap_fft_fftn_out);
m.impl("fft_ifftn", wrap_fft_ifftn);
m.impl("fft_ifftn.out", wrap_fft_ifftn_out);
m.impl("fft_rfftn", wrap_fft_rfftn);
m.impl("fft_rfftn.out", wrap_fft_rfftn_out);
m.impl("fft_irfftn", wrap_fft_irfftn);
m.impl("fft_irfftn.out", wrap_fft_irfftn_out);
m.impl("fft_fftfreq", wrap_fft_fftfreq);
m.impl("fft_fftfreq.out", wrap_fft_fftfreq_out);
m.impl("fft_rfftfreq", wrap_fft_rfftfreq);
m.impl("fft_rfftfreq.out", wrap_fft_rfftfreq_out);
m.impl("fft_fftshift", wrap_fft_fftshift);
m.impl("fft_ifftshift", wrap_fft_ifftshift);
m.impl("linalg_cholesky_ex", wrap_linalg_cholesky_ex);
m.impl("linalg_cholesky_ex.L", wrap_linalg_cholesky_ex_L);
m.impl("linalg_cholesky", wrap_linalg_cholesky);
m.impl("linalg_cholesky.out", wrap_linalg_cholesky_out);
m.impl("linalg_det", wrap_linalg_det);
m.impl("linalg_det.out", wrap_linalg_det_out);
m.impl("det", wrap_det);
m.impl("linalg_lstsq", wrap_linalg_lstsq);
m.impl("linalg_lstsq.out", wrap_linalg_lstsq_out);
m.impl("linalg_slogdet", wrap_linalg_slogdet);
m.impl("linalg_slogdet.out", wrap_linalg_slogdet_out);
m.impl("linalg_eig", wrap_linalg_eig);
m.impl("linalg_eig.out", wrap_linalg_eig_out);
m.impl("linalg_eigvals", wrap_linalg_eigvals);
m.impl("linalg_eigvals.out", wrap_linalg_eigvals_out);
m.impl("linalg_eigh", wrap_linalg_eigh);
m.impl("linalg_eigh.eigvals", wrap_linalg_eigh_eigvals);
m.impl("linalg_eigvalsh", wrap_linalg_eigvalsh);
m.impl("linalg_eigvalsh.out", wrap_linalg_eigvalsh_out);
m.impl("linalg_householder_product", wrap_linalg_householder_product);
m.impl("linalg_householder_product.out", wrap_linalg_householder_product_out);
m.impl("_linalg_inv_out_helper_", wrap__linalg_inv_out_helper_);
m.impl("linalg_inv_ex", wrap_linalg_inv_ex);
m.impl("linalg_inv_ex.inverse", wrap_linalg_inv_ex_inverse);
m.impl("linalg_inv", wrap_linalg_inv);
m.impl("linalg_inv.out", wrap_linalg_inv_out);
m.impl("inner", wrap_inner);
m.impl("inner.out", wrap_inner_out);
m.impl("outer", wrap_outer);
m.impl("outer.out", wrap_outer_out);
m.impl("ger", wrap_ger);
m.impl("ger.out", wrap_ger_out);
m.impl("linalg_norm", wrap_linalg_norm);
m.impl("linalg_norm.ord_str", wrap_linalg_norm_ord_str);
m.impl("linalg_norm.out", wrap_linalg_norm_out);
m.impl("linalg_norm.ord_str_out", wrap_linalg_norm_ord_str_out);
m.impl("linalg_vector_norm", wrap_linalg_vector_norm);
m.impl("linalg_vector_norm.out", wrap_linalg_vector_norm_out);
m.impl("linalg_matrix_norm", wrap_linalg_matrix_norm);
m.impl("linalg_matrix_norm.out", wrap_linalg_matrix_norm_out);
m.impl("linalg_matrix_norm.str_ord", wrap_linalg_matrix_norm_str_ord);
m.impl("linalg_matrix_norm.str_ord_out", wrap_linalg_matrix_norm_str_ord_out);
m.impl("linalg_svd.U", wrap_linalg_svd_U);
m.impl("linalg_svd", wrap_linalg_svd);
m.impl("linalg_svdvals", wrap_linalg_svdvals);
m.impl("linalg_svdvals.out", wrap_linalg_svdvals_out);
m.impl("linalg_cond", wrap_linalg_cond);
m.impl("linalg_cond.out", wrap_linalg_cond_out);
m.impl("linalg_cond.p_str", wrap_linalg_cond_p_str);
m.impl("linalg_cond.p_str_out", wrap_linalg_cond_p_str_out);
m.impl("linalg_pinv", wrap_linalg_pinv);
m.impl("linalg_pinv.rcond_tensor", wrap_linalg_pinv_rcond_tensor);
m.impl("linalg_pinv.out", wrap_linalg_pinv_out);
m.impl("linalg_pinv.out_rcond_tensor", wrap_linalg_pinv_out_rcond_tensor);
m.impl("_linalg_solve_out_helper_", wrap__linalg_solve_out_helper_);
m.impl("linalg_solve", wrap_linalg_solve);
m.impl("linalg_solve.out", wrap_linalg_solve_out);
m.impl("linalg_tensorinv", wrap_linalg_tensorinv);
m.impl("linalg_tensorinv.out", wrap_linalg_tensorinv_out);
m.impl("linalg_tensorsolve", wrap_linalg_tensorsolve);
m.impl("linalg_tensorsolve.out", wrap_linalg_tensorsolve_out);
m.impl("linalg_qr", wrap_linalg_qr);
m.impl("linalg_qr.out", wrap_linalg_qr_out);
m.impl("_linalg_qr_helper", wrap__linalg_qr_helper);
m.impl("linalg_matrix_power", wrap_linalg_matrix_power);
m.impl("linalg_matrix_power.out", wrap_linalg_matrix_power_out);
m.impl("linalg_matrix_rank", wrap_linalg_matrix_rank);
m.impl("linalg_matrix_rank.out", wrap_linalg_matrix_rank_out);
m.impl("linalg_matrix_rank.tol_tensor", wrap_linalg_matrix_rank_tol_tensor);
m.impl("linalg_matrix_rank.out_tol_tensor", wrap_linalg_matrix_rank_out_tol_tensor);
m.impl("linalg_multi_dot", wrap_linalg_multi_dot);
m.impl("linalg_multi_dot.out", wrap_linalg_multi_dot_out);
m.impl("_test_serialization_subcmul", wrap__test_serialization_subcmul);
m.impl("_test_optional_intlist", wrap__test_optional_intlist);
m.impl("_test_optional_filled_intlist", wrap__test_optional_filled_intlist);
m.impl("_test_optional_floatlist", wrap__test_optional_floatlist);
m.impl("_test_string_default", wrap__test_string_default);
m.impl("_test_ambiguous_defaults.a", wrap__test_ambiguous_defaults_a);
m.impl("_test_ambiguous_defaults.b", wrap__test_ambiguous_defaults_b);
m.impl("segment_reduce", wrap_segment_reduce);
m.impl("_segment_reduce_backward", wrap__segment_reduce_backward);
m.impl("pad_sequence", wrap_pad_sequence);
m.impl("flatten_dense_tensors", wrap_flatten_dense_tensors);
m.impl("unflatten_dense_tensors", wrap_unflatten_dense_tensors);
